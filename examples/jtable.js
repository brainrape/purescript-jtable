// Generated by psc version 0.6.4.1
var PS = PS || {};
PS.Prelude = (function () {
    "use strict";
    
    function cons(e) {
      return function(l) {
        return [e].concat(l);
      };
    }
    ;
    
    function showStringImpl(s) {
      return JSON.stringify(s);
    }
    ;
    
    function showNumberImpl(n) {
      return n.toString();
    }
    ;
    
    function showArrayImpl(f) {
      return function(xs) {
        var ss = [];
        for (var i = 0, l = xs.length; i < l; i++) {
          ss[i] = f(xs[i]);
        }
        return '[' + ss.join(',') + ']';
      };
    }
    ;
    
    function numAdd(n1) {
      return function(n2) {
        return n1 + n2;
      };
    }
    ;
    
    function numSub(n1) {
      return function(n2) {
        return n1 - n2;
      };
    }
    ;
    
    function numMul(n1) {
      return function(n2) {
        return n1 * n2;
      };
    }
    ;
    
    function numDiv(n1) {
      return function(n2) {
        return n1 / n2;
      };
    }
    ;
    
    function numMod(n1) {
      return function(n2) {
        return n1 % n2;
      };
    }
    ;
    
    function numNegate(n) {
      return -n;
    }
    ;
    
    function refEq(r1) {
      return function(r2) {
        return r1 === r2;
      };
    }
    ;
    
    function refIneq(r1) {
      return function(r2) {
        return r1 !== r2;
      };
    }
    ;
    
    function eqArrayImpl(f) {
      return function(xs) {
        return function(ys) {
          if (xs.length !== ys.length) return false;
          for (var i = 0; i < xs.length; i++) {
            if (!f(xs[i])(ys[i])) return false;
          }
          return true;
        };
      };
    }
    ;
    
    function unsafeCompareImpl(lt) {
      return function(eq) {
        return function(gt) {
          return function(x) {
            return function(y) {
              return x < y ? lt : x > y ? gt : eq;
            };
          };
        };
      };
    }
    ;
    
    function numShl(n1) {
      return function(n2) {
        return n1 << n2;
      };
    }
    ;
    
    function numShr(n1) {
      return function(n2) {
        return n1 >> n2;
      };
    }
    ;
    
    function numZshr(n1) {
      return function(n2) {
        return n1 >>> n2;
      };
    }
    ;
    
    function numAnd(n1) {
      return function(n2) {
        return n1 & n2;
      };
    }
    ;
    
    function numOr(n1) {
      return function(n2) {
        return n1 | n2;
      };
    }
    ;
    
    function numXor(n1) {
      return function(n2) {
        return n1 ^ n2;
      };
    }
    ;
    
    function numComplement(n) {
      return ~n;
    }
    ;
    
    function boolAnd(b1) {
      return function(b2) {
        return b1 && b2;
      };
    }
    ;
    
    function boolOr(b1) {
      return function(b2) {
        return b1 || b2;
      };
    }
    ;
    
    function boolNot(b) {
      return !b;
    }
    ;
    
    function concatString(s1) {
      return function(s2) {
        return s1 + s2;
      };
    }
    ;
    var Unit = function (x) {
        return x;
    };
    var LT = (function () {
        function LT() {

        };
        LT.value = new LT();
        return LT;
    })();
    var GT = (function () {
        function GT() {

        };
        GT.value = new GT();
        return GT;
    })();
    var EQ = (function () {
        function EQ() {

        };
        EQ.value = new EQ();
        return EQ;
    })();
    var Semigroupoid = function ($less$less$less) {
        this["<<<"] = $less$less$less;
    };
    var Category = function (__superclass_Prelude$dotSemigroupoid_0, id) {
        this["__superclass_Prelude.Semigroupoid_0"] = __superclass_Prelude$dotSemigroupoid_0;
        this.id = id;
    };
    var Show = function (show) {
        this.show = show;
    };
    var Functor = function ($less$dollar$greater) {
        this["<$>"] = $less$dollar$greater;
    };
    var Apply = function ($less$times$greater, __superclass_Prelude$dotFunctor_0) {
        this["<*>"] = $less$times$greater;
        this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
    };
    var Applicative = function (__superclass_Prelude$dotApply_0, pure) {
        this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
        this.pure = pure;
    };
    var Bind = function ($greater$greater$eq, __superclass_Prelude$dotApply_0) {
        this[">>="] = $greater$greater$eq;
        this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
    };
    var Monad = function (__superclass_Prelude$dotApplicative_0, __superclass_Prelude$dotBind_1) {
        this["__superclass_Prelude.Applicative_0"] = __superclass_Prelude$dotApplicative_0;
        this["__superclass_Prelude.Bind_1"] = __superclass_Prelude$dotBind_1;
    };
    var Num = function ($percent, $times, $plus, $minus, $div, negate) {
        this["%"] = $percent;
        this["*"] = $times;
        this["+"] = $plus;
        this["-"] = $minus;
        this["/"] = $div;
        this.negate = negate;
    };
    var Eq = function ($div$eq, $eq$eq) {
        this["/="] = $div$eq;
        this["=="] = $eq$eq;
    };
    var Ord = function (__superclass_Prelude$dotEq_0, compare) {
        this["__superclass_Prelude.Eq_0"] = __superclass_Prelude$dotEq_0;
        this.compare = compare;
    };
    var Bits = function ($dot$amp$dot, $dot$up$dot, $dot$bar$dot, complement, shl, shr, zshr) {
        this[".&."] = $dot$amp$dot;
        this[".^."] = $dot$up$dot;
        this[".|."] = $dot$bar$dot;
        this.complement = complement;
        this.shl = shl;
        this.shr = shr;
        this.zshr = zshr;
    };
    var BoolLike = function ($amp$amp, not, $bar$bar) {
        this["&&"] = $amp$amp;
        this.not = not;
        this["||"] = $bar$bar;
    };
    var Semigroup = function ($less$greater) {
        this["<>"] = $less$greater;
    };
    var $bar$bar = function (dict) {
        return dict["||"];
    };
    var $greater$greater$eq = function (dict) {
        return dict[">>="];
    };
    var $eq$eq = function (dict) {
        return dict["=="];
    };
    var $less$greater = function (dict) {
        return dict["<>"];
    };
    var $less$less$less = function (dict) {
        return dict["<<<"];
    };
    var $greater$greater$greater = function (__dict_Semigroupoid_0) {
        return function (f) {
            return function (g) {
                return $less$less$less(__dict_Semigroupoid_0)(g)(f);
            };
        };
    };
    var $less$times$greater = function (dict) {
        return dict["<*>"];
    };
    var $less$dollar$greater = function (dict) {
        return dict["<$>"];
    };
    var $less$hash$greater = function (__dict_Functor_1) {
        return function (fa) {
            return function (f) {
                return $less$dollar$greater(__dict_Functor_1)(f)(fa);
            };
        };
    };
    var $colon = cons;
    var $div$eq = function (dict) {
        return dict["/="];
    };
    var $div = function (dict) {
        return dict["/"];
    };
    var $dot$bar$dot = function (dict) {
        return dict[".|."];
    };
    var $dot$up$dot = function (dict) {
        return dict[".^."];
    };
    var $dot$amp$dot = function (dict) {
        return dict[".&."];
    };
    var $minus = function (dict) {
        return dict["-"];
    };
    var $plus$plus = function (__dict_Semigroup_2) {
        return $less$greater(__dict_Semigroup_2);
    };
    var $plus = function (dict) {
        return dict["+"];
    };
    var $times = function (dict) {
        return dict["*"];
    };
    var $amp$amp = function (dict) {
        return dict["&&"];
    };
    var $percent = function (dict) {
        return dict["%"];
    };
    var $dollar = function (f) {
        return function (x) {
            return f(x);
        };
    };
    var $hash = function (x) {
        return function (f) {
            return f(x);
        };
    };
    var zshr = function (dict) {
        return dict.zshr;
    };
    var unsafeCompare = unsafeCompareImpl(LT.value)(EQ.value)(GT.value);
    var unit = {};
    var shr = function (dict) {
        return dict.shr;
    };
    var showUnit = new Show(function (_83) {
        return "Unit {}";
    });
    var showString = new Show(showStringImpl);
    var showOrdering = new Show(function (_91) {
        if (_91 instanceof LT) {
            return "LT";
        };
        if (_91 instanceof GT) {
            return "GT";
        };
        if (_91 instanceof EQ) {
            return "EQ";
        };
        throw new Error("Failed pattern match");
    });
    var showNumber = new Show(showNumberImpl);
    var showBoolean = new Show(function (_84) {
        if (_84) {
            return "true";
        };
        if (!_84) {
            return "false";
        };
        throw new Error("Failed pattern match");
    });
    var show = function (dict) {
        return dict.show;
    };
    var showArray = function (__dict_Show_3) {
        return new Show(showArrayImpl(show(__dict_Show_3)));
    };
    var shl = function (dict) {
        return dict.shl;
    };
    var semigroupoidArr = new Semigroupoid(function (f) {
        return function (g) {
            return function (x) {
                return f(g(x));
            };
        };
    });
    var semigroupUnit = new Semigroup(function (_98) {
        return function (_99) {
            return {};
        };
    });
    var semigroupString = new Semigroup(concatString);
    var semigroupArr = function (__dict_Semigroup_4) {
        return new Semigroup(function (f) {
            return function (g) {
                return function (x) {
                    return $less$greater(__dict_Semigroup_4)(f(x))(g(x));
                };
            };
        });
    };
    var pure = function (dict) {
        return dict.pure;
    };
    var $$return = function (__dict_Monad_5) {
        return pure(__dict_Monad_5["__superclass_Prelude.Applicative_0"]());
    };
    var otherwise = true;
    var numNumber = new Num(numMod, numMul, numAdd, numSub, numDiv, numNegate);
    var not = function (dict) {
        return dict.not;
    };
    var negate = function (dict) {
        return dict.negate;
    };
    var liftM1 = function (__dict_Monad_6) {
        return function (f) {
            return function (a) {
                return $greater$greater$eq(__dict_Monad_6["__superclass_Prelude.Bind_1"]())(a)(function (_0) {
                    return $$return(__dict_Monad_6)(f(_0));
                });
            };
        };
    };
    var liftA1 = function (__dict_Applicative_7) {
        return function (f) {
            return function (a) {
                return $less$times$greater(__dict_Applicative_7["__superclass_Prelude.Apply_0"]())(pure(__dict_Applicative_7)(f))(a);
            };
        };
    };
    var id = function (dict) {
        return dict.id;
    };
    var functorArr = new Functor($less$less$less(semigroupoidArr));
    var flip = function (f) {
        return function (b) {
            return function (a) {
                return f(a)(b);
            };
        };
    };
    var eqUnit = new Eq(function (_87) {
        return function (_88) {
            return false;
        };
    }, function (_85) {
        return function (_86) {
            return true;
        };
    });
    var ordUnit = new Ord(function () {
        return eqUnit;
    }, function (_92) {
        return function (_93) {
            return EQ.value;
        };
    });
    var eqString = new Eq(refIneq, refEq);
    var ordString = new Ord(function () {
        return eqString;
    }, unsafeCompare);
    var eqNumber = new Eq(refIneq, refEq);
    var ordNumber = new Ord(function () {
        return eqNumber;
    }, unsafeCompare);
    var eqBoolean = new Eq(refIneq, refEq);
    var ordBoolean = new Ord(function () {
        return eqBoolean;
    }, function (_94) {
        return function (_95) {
            if (!_94 && !_95) {
                return EQ.value;
            };
            if (!_94 && _95) {
                return LT.value;
            };
            if (_94 && _95) {
                return EQ.value;
            };
            if (_94 && !_95) {
                return GT.value;
            };
            throw new Error("Failed pattern match");
        };
    });
    var $$const = function (_79) {
        return function (_80) {
            return _79;
        };
    };
    var $$void = function (__dict_Functor_9) {
        return function (fa) {
            return $less$dollar$greater(__dict_Functor_9)($$const(unit))(fa);
        };
    };
    var complement = function (dict) {
        return dict.complement;
    };
    var compare = function (dict) {
        return dict.compare;
    };
    var $less = function (__dict_Ord_11) {
        return function (a1) {
            return function (a2) {
                var _1143 = compare(__dict_Ord_11)(a1)(a2);
                if (_1143 instanceof LT) {
                    return true;
                };
                return false;
            };
        };
    };
    var $less$eq = function (__dict_Ord_12) {
        return function (a1) {
            return function (a2) {
                var _1144 = compare(__dict_Ord_12)(a1)(a2);
                if (_1144 instanceof GT) {
                    return false;
                };
                return true;
            };
        };
    };
    var $greater = function (__dict_Ord_13) {
        return function (a1) {
            return function (a2) {
                var _1145 = compare(__dict_Ord_13)(a1)(a2);
                if (_1145 instanceof GT) {
                    return true;
                };
                return false;
            };
        };
    };
    var $greater$eq = function (__dict_Ord_14) {
        return function (a1) {
            return function (a2) {
                var _1146 = compare(__dict_Ord_14)(a1)(a2);
                if (_1146 instanceof LT) {
                    return false;
                };
                return true;
            };
        };
    };
    var categoryArr = new Category(function () {
        return semigroupoidArr;
    }, function (x) {
        return x;
    });
    var boolLikeBoolean = new BoolLike(boolAnd, boolNot, boolOr);
    var eqArray = function (__dict_Eq_8) {
        return new Eq(function (xs) {
            return function (ys) {
                return not(boolLikeBoolean)($eq$eq(eqArray(__dict_Eq_8))(xs)(ys));
            };
        }, function (xs) {
            return function (ys) {
                return eqArrayImpl($eq$eq(__dict_Eq_8))(xs)(ys);
            };
        });
    };
    var ordArray = function (__dict_Ord_10) {
        return new Ord(function () {
            return eqArray(__dict_Ord_10["__superclass_Prelude.Eq_0"]());
        }, function (_96) {
            return function (_97) {
                if (_96.length === 0 && _97.length === 0) {
                    return EQ.value;
                };
                if (_96.length === 0) {
                    return LT.value;
                };
                if (_97.length === 0) {
                    return GT.value;
                };
                if (_96.length >= 1) {
                    var _1153 = _96.slice(1);
                    if (_97.length >= 1) {
                        var _1151 = _97.slice(1);
                        var _1149 = compare(__dict_Ord_10)(_96[0])(_97[0]);
                        if (_1149 instanceof EQ) {
                            return compare(ordArray(__dict_Ord_10))(_1153)(_1151);
                        };
                        return _1149;
                    };
                };
                throw new Error("Failed pattern match");
            };
        });
    };
    var eqOrdering = new Eq(function (x) {
        return function (y) {
            return not(boolLikeBoolean)($eq$eq(eqOrdering)(x)(y));
        };
    }, function (_89) {
        return function (_90) {
            if (_89 instanceof LT && _90 instanceof LT) {
                return true;
            };
            if (_89 instanceof GT && _90 instanceof GT) {
                return true;
            };
            if (_89 instanceof EQ && _90 instanceof EQ) {
                return true;
            };
            return false;
        };
    });
    var bitsNumber = new Bits(numAnd, numXor, numOr, numComplement, numShl, numShr, numZshr);
    var asTypeOf = function (_81) {
        return function (_82) {
            return _81;
        };
    };
    var applyArr = new Apply(function (f) {
        return function (g) {
            return function (x) {
                return f(x)(g(x));
            };
        };
    }, function () {
        return functorArr;
    });
    var bindArr = new Bind(function (m) {
        return function (f) {
            return function (x) {
                return f(m(x))(x);
            };
        };
    }, function () {
        return applyArr;
    });
    var applicativeArr = new Applicative(function () {
        return applyArr;
    }, $$const);
    var monadArr = new Monad(function () {
        return applicativeArr;
    }, function () {
        return bindArr;
    });
    var ap = function (__dict_Monad_15) {
        return function (f) {
            return function (a) {
                return $greater$greater$eq(__dict_Monad_15["__superclass_Prelude.Bind_1"]())(f)(function (_2) {
                    return $greater$greater$eq(__dict_Monad_15["__superclass_Prelude.Bind_1"]())(a)(function (_1) {
                        return $$return(__dict_Monad_15)(_2(_1));
                    });
                });
            };
        };
    };
    return {
        Unit: Unit, 
        LT: LT, 
        GT: GT, 
        EQ: EQ, 
        Semigroup: Semigroup, 
        BoolLike: BoolLike, 
        Bits: Bits, 
        Ord: Ord, 
        Eq: Eq, 
        Num: Num, 
        Monad: Monad, 
        Bind: Bind, 
        Applicative: Applicative, 
        Apply: Apply, 
        Functor: Functor, 
        Show: Show, 
        Category: Category, 
        Semigroupoid: Semigroupoid, 
        unit: unit, 
        "++": $plus$plus, 
        "<>": $less$greater, 
        not: not, 
        "||": $bar$bar, 
        "&&": $amp$amp, 
        complement: complement, 
        zshr: zshr, 
        shr: shr, 
        shl: shl, 
        ".^.": $dot$up$dot, 
        ".|.": $dot$bar$dot, 
        ".&.": $dot$amp$dot, 
        ">=": $greater$eq, 
        "<=": $less$eq, 
        ">": $greater, 
        "<": $less, 
        compare: compare, 
        refIneq: refIneq, 
        refEq: refEq, 
        "/=": $div$eq, 
        "==": $eq$eq, 
        negate: negate, 
        "%": $percent, 
        "/": $div, 
        "*": $times, 
        "-": $minus, 
        "+": $plus, 
        ap: ap, 
        liftM1: liftM1, 
        "return": $$return, 
        ">>=": $greater$greater$eq, 
        liftA1: liftA1, 
        pure: pure, 
        "<*>": $less$times$greater, 
        "void": $$void, 
        "<#>": $less$hash$greater, 
        "<$>": $less$dollar$greater, 
        show: show, 
        cons: cons, 
        ":": $colon, 
        "#": $hash, 
        "$": $dollar, 
        id: id, 
        ">>>": $greater$greater$greater, 
        "<<<": $less$less$less, 
        asTypeOf: asTypeOf, 
        "const": $$const, 
        flip: flip, 
        otherwise: otherwise, 
        semigroupoidArr: semigroupoidArr, 
        categoryArr: categoryArr, 
        showUnit: showUnit, 
        showString: showString, 
        showBoolean: showBoolean, 
        showNumber: showNumber, 
        showArray: showArray, 
        functorArr: functorArr, 
        applyArr: applyArr, 
        applicativeArr: applicativeArr, 
        bindArr: bindArr, 
        monadArr: monadArr, 
        numNumber: numNumber, 
        eqUnit: eqUnit, 
        eqString: eqString, 
        eqNumber: eqNumber, 
        eqBoolean: eqBoolean, 
        eqArray: eqArray, 
        eqOrdering: eqOrdering, 
        showOrdering: showOrdering, 
        ordUnit: ordUnit, 
        ordBoolean: ordBoolean, 
        ordNumber: ordNumber, 
        ordString: ordString, 
        ordArray: ordArray, 
        bitsNumber: bitsNumber, 
        boolLikeBoolean: boolLikeBoolean, 
        semigroupUnit: semigroupUnit, 
        semigroupString: semigroupString, 
        semigroupArr: semigroupArr
    };
})();
var PS = PS || {};
PS.Prelude_Unsafe = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    
    function unsafeIndex(xs) {
      return function(n) {
        return xs[n];
      };
    }
    ;
    return {
        unsafeIndex: unsafeIndex
    };
})();
var PS = PS || {};
PS.Math = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var abs = Math.abs;;
    var acos = Math.acos;;
    var asin = Math.asin;;
    var atan = Math.atan;;
    function atan2(y){  return function (x) {    return Math.atan2(y, x);  };};
    var ceil = Math.ceil;;
    var cos = Math.cos;;
    var exp = Math.exp;;
    var floor = Math.floor;;
    var log = Math.log;;
    function max(n1){  return function(n2) {    return Math.max(n1, n2);  }};
    function min(n1){  return function(n2) {    return Math.min(n1, n2);  }};
    function pow(n){  return function(p) {    return Math.pow(n, p);  }};
    var round = Math.round;;
    var sin = Math.sin;;
    var sqrt = Math.sqrt;;
    var tan = Math.tan;;
    var e       = Math.E;;
    var ln2     = Math.LN2;;
    var ln10    = Math.LN10;;
    var log2e   = Math.LOG2E;;
    var log10e  = Math.LOG10E;;
    var pi      = Math.PI;;
    var sqrt1_2 = Math.SQRT1_2;;
    var sqrt2   = Math.SQRT2;;
    return {
        sqrt2: sqrt2, 
        sqrt1_2: sqrt1_2, 
        pi: pi, 
        log10e: log10e, 
        log2e: log2e, 
        ln10: ln10, 
        ln2: ln2, 
        e: e, 
        tan: tan, 
        sqrt: sqrt, 
        sin: sin, 
        round: round, 
        pow: pow, 
        min: min, 
        max: max, 
        log: log, 
        floor: floor, 
        exp: exp, 
        cos: cos, 
        ceil: ceil, 
        atan2: atan2, 
        atan: atan, 
        asin: asin, 
        acos: acos, 
        abs: abs
    };
})();
var PS = PS || {};
PS.Global = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var nan = NaN;;
    var infinity = Infinity;;
    function readInt(radix) {  return function(n) {    return parseInt(n, radix);  };};
    var readFloat = parseFloat;;
    return {
        readFloat: readFloat, 
        readInt: readInt, 
        isFinite: isFinite, 
        infinity: infinity, 
        isNaN: isNaN, 
        nan: nan
    };
})();
var PS = PS || {};
PS.Debug_Spy = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    
    function _spy(s){
      return function(x){
        console.log(s);
        return x;
      };
    }
  ;
    var spy = function (__dict_Show_16) {
        return function (x) {
            return _spy(Prelude.show(__dict_Show_16)(x))(x);
        };
    };
    return {
        spy: spy
    };
})();
var PS = PS || {};
PS.Data_Profunctor = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Profunctor = function (dimap) {
        this.dimap = dimap;
    };
    var profunctorArr = new Profunctor(function (a2b) {
        return function (c2d) {
            return function (b2c) {
                return Prelude[">>>"](Prelude.semigroupoidArr)(a2b)(Prelude[">>>"](Prelude.semigroupoidArr)(b2c)(c2d));
            };
        };
    });
    var dimap = function (dict) {
        return dict.dimap;
    };
    var lmap = function (__dict_Profunctor_17) {
        return function (a2b) {
            return dimap(__dict_Profunctor_17)(a2b)(Prelude.id(Prelude.categoryArr));
        };
    };
    var rmap = function (__dict_Profunctor_18) {
        return function (b2c) {
            return dimap(__dict_Profunctor_18)(Prelude.id(Prelude.categoryArr))(b2c);
        };
    };
    return {
        Profunctor: Profunctor, 
        rmap: rmap, 
        lmap: lmap, 
        dimap: dimap, 
        profunctorArr: profunctorArr
    };
})();
var PS = PS || {};
PS.Optic_Internal_Iso = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Profunctor = PS.Data_Profunctor;
    var Exchange = (function () {
        function Exchange(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        };
        Exchange.create = function (value0) {
            return function (value1) {
                return new Exchange(value0, value1);
            };
        };
        return Exchange;
    })();
    var profunctorExchange = new Data_Profunctor.Profunctor(function (_102) {
        return function (_103) {
            return function (_104) {
                return new Exchange(Prelude[">>>"](Prelude.semigroupoidArr)(_102)(_104.value0), Prelude[">>>"](Prelude.semigroupoidArr)(_104.value1)(_103));
            };
        };
    });
    var functorExchange = new Prelude.Functor(function (_100) {
        return function (_101) {
            return new Exchange(_101.value0, Prelude[">>>"](Prelude.semigroupoidArr)(_101.value1)(_100));
        };
    });
    return {
        Exchange: Exchange, 
        functorExchange: functorExchange, 
        profunctorExchange: profunctorExchange
    };
})();
var PS = PS || {};
PS.Data_Function = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    
    function mkFn0(fn) {
      return function() {
        return fn({});
      };
    }
    ;
    
    function mkFn1(fn) {
      return function(a) {
        return fn(a);
      };
    }
    ;
    
    function mkFn2(fn) {
      return function(a, b) {
        return fn(a)(b);
      };
    }
    ;
    
    function mkFn3(fn) {
      return function(a, b, c) {
        return fn(a)(b)(c);
      };
    }
    ;
    
    function mkFn4(fn) {
      return function(a, b, c, d) {
        return fn(a)(b)(c)(d);
      };
    }
    ;
    
    function mkFn5(fn) {
      return function(a, b, c, d, e) {
        return fn(a)(b)(c)(d)(e);
      };
    }
    ;
    
    function mkFn6(fn) {
      return function(a, b, c, d, e, f) {
        return fn(a)(b)(c)(d)(e)(f);
      };
    }
    ;
    
    function mkFn7(fn) {
      return function(a, b, c, d, e, f, g) {
        return fn(a)(b)(c)(d)(e)(f)(g);
      };
    }
    ;
    
    function mkFn8(fn) {
      return function(a, b, c, d, e, f, g, h) {
        return fn(a)(b)(c)(d)(e)(f)(g)(h);
      };
    }
    ;
    
    function mkFn9(fn) {
      return function(a, b, c, d, e, f, g, h, i) {
        return fn(a)(b)(c)(d)(e)(f)(g)(h)(i);
      };
    }
    ;
    
    function mkFn10(fn) {
      return function(a, b, c, d, e, f, g, h, i, j) {
        return fn(a)(b)(c)(d)(e)(f)(g)(h)(i)(j);
      };
    }
    ;
    
    function runFn0(fn) {
      return fn();
    }
    ;
    
    function runFn1(fn) {
      return function(a) {
        return fn(a);
      };
    }
    ;
    
    function runFn2(fn) {
      return function(a) {
        return function(b) {
          return fn(a, b);
        };
      };
    }
    ;
    
    function runFn3(fn) {
      return function(a) {
        return function(b) {
          return function(c) {
            return fn(a, b, c);
          };
        };
      };
    }
    ;
    
    function runFn4(fn) {
      return function(a) {
        return function(b) {
          return function(c) {
            return function(d) {
              return fn(a, b, c, d);
            };
          };
        };
      };
    }
    ;
    
    function runFn5(fn) {
      return function(a) {
        return function(b) {
          return function(c) {
            return function(d) {
              return function(e) {
                return fn(a, b, c, d, e);
              };
            };
          };
        };
      };
    }
    ;
    
    function runFn6(fn) {
      return function(a) {
        return function(b) {
          return function(c) {
            return function(d) {
              return function(e) {
                return function(f) {
                  return fn(a, b, c, d, e, f);
                };
              };
            };
          };
        };
      };
    }
    ;
    
    function runFn7(fn) {
      return function(a) {
        return function(b) {
          return function(c) {
            return function(d) {
              return function(e) {
                return function(f) {
                  return function(g) {
                    return fn(a, b, c, d, e, f, g);
                  };
                };
              };
            };
          };
        };
      };
    }
    ;
    
    function runFn8(fn) {
      return function(a) {
        return function(b) {
          return function(c) {
            return function(d) {
              return function(e) {
                return function(f) {
                  return function(g) {
                    return function(h) {
                      return fn(a, b, c, d, e, f, g, h);
                    };
                  };
                };
              };
            };
          };
        };
      };
    }
    ;
    
    function runFn9(fn) {
      return function(a) {
        return function(b) {
          return function(c) {
            return function(d) {
              return function(e) {
                return function(f) {
                  return function(g) {
                    return function(h) {
                      return function(i) {
                        return fn(a, b, c, d, e, f, g, h, i);
                      };
                    };
                  };
                };
              };
            };
          };
        };
      };
    }
    ;
    
    function runFn10(fn) {
      return function(a) {
        return function(b) {
          return function(c) {
            return function(d) {
              return function(e) {
                return function(f) {
                  return function(g) {
                    return function(h) {
                      return function(i) {
                        return function(j) {
                          return fn(a, b, c, d, e, f, g, h, i, j);
                        };
                      };
                    };
                  };
                };
              };
            };
          };
        };
      };
    }
    ;
    var on = function (f) {
        return function (g) {
            return function (x) {
                return function (y) {
                    return f(g(x))(g(y));
                };
            };
        };
    };
    return {
        runFn10: runFn10, 
        runFn9: runFn9, 
        runFn8: runFn8, 
        runFn7: runFn7, 
        runFn6: runFn6, 
        runFn5: runFn5, 
        runFn4: runFn4, 
        runFn3: runFn3, 
        runFn2: runFn2, 
        runFn1: runFn1, 
        runFn0: runFn0, 
        mkFn10: mkFn10, 
        mkFn9: mkFn9, 
        mkFn8: mkFn8, 
        mkFn7: mkFn7, 
        mkFn6: mkFn6, 
        mkFn5: mkFn5, 
        mkFn4: mkFn4, 
        mkFn3: mkFn3, 
        mkFn2: mkFn2, 
        mkFn1: mkFn1, 
        mkFn0: mkFn0, 
        on: on
    };
})();
var PS = PS || {};
PS.Data_Exists = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function mkExists(fa) {  return fa;};
    function runExists(f) {  return function(fa) {    return f(fa);  };};
    return {
        runExists: runExists, 
        mkExists: mkExists
    };
})();
var PS = PS || {};
PS.Data_Contravariant = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Contravariant = function ($greater$dollar$less) {
        this[">$<"] = $greater$dollar$less;
    };
    var $greater$dollar$less = function (dict) {
        return dict[">$<"];
    };
    return {
        Contravariant: Contravariant, 
        ">$<": $greater$dollar$less
    };
})();
var PS = PS || {};
PS.Data_Char = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    
    function toCharCode(c) {
      return c.charCodeAt(0);
    }
    ;
    
    function fromCharCode(c) {
      return String.fromCharCode(c);
    }
    ;
    var Char = function (x) {
        return x;
    };
    var showChar = new Prelude.Show(function (_110) {
        return "Char " + Prelude.show(Prelude.showString)(_110);
    });
    var eqChar = new Prelude.Eq(function (a) {
        return function (b) {
            return !Prelude["=="](eqChar)(a)(b);
        };
    }, function (_106) {
        return function (_107) {
            return _106 === _107;
        };
    });
    var ordChar = new Prelude.Ord(function () {
        return eqChar;
    }, function (_108) {
        return function (_109) {
            return Prelude.compare(Prelude.ordString)(_108)(_109);
        };
    });
    var charString = function (_105) {
        return _105;
    };
    return {
        toCharCode: toCharCode, 
        fromCharCode: fromCharCode, 
        charString: charString, 
        eqChar: eqChar, 
        ordChar: ordChar, 
        showChar: showChar
    };
})();
var PS = PS || {};
PS.Data_String_Unsafe = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Char = PS.Data_Char;
    
    function charCodeAt(i) {
      return function(s) {
        return s.charCodeAt(i);
      };
    }
    ;
    
    function charAt(i) {
      return function(s) {
        return s.charAt(i);
      };
    }
    ;
    return {
        charCodeAt: charCodeAt, 
        charAt: charAt
    };
})();
var PS = PS || {};
PS.Control_Monad_Trans = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var MonadTrans = function (lift) {
        this.lift = lift;
    };
    var lift = function (dict) {
        return dict.lift;
    };
    return {
        MonadTrans: MonadTrans, 
        lift: lift
    };
})();
var PS = PS || {};
PS.Control_Monad_Error = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Error = function (noMsg, strMsg) {
        this.noMsg = noMsg;
        this.strMsg = strMsg;
    };
    var strMsg = function (dict) {
        return dict.strMsg;
    };
    var noMsg = function (dict) {
        return dict.noMsg;
    };
    var errorString = new Error("", Prelude.id(Prelude.categoryArr));
    return {
        Error: Error, 
        strMsg: strMsg, 
        noMsg: noMsg, 
        errorString: errorString
    };
})();
var PS = PS || {};
PS.Control_Monad_Eff = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    
    function returnE(a) {
      return function() {
        return a;
      };
    }
    ;
    
    function bindE(a) {
      return function(f) {
        return function() {
          return f(a())();
        };
      };
    }
    ;
    
    function runPure(f) {
      return f();
    }
    ;
    
    function untilE(f) {
      return function() {
        while (!f());
        return {};
      };
    }
    ;
    
    function whileE(f) {
      return function(a) {
        return function() {
          while (f()) {
            a();
          }
          return {};
        };
      };
    }
    ;
    
    function forE(lo) {
      return function(hi) {
        return function(f) {
          return function() {
            for (var i = lo; i < hi; i++) {
              f(i)();
            }
          };
        };
      };
    }
    ;
    
    function foreachE(as) {
      return function(f) {
        return function() {
          for (var i = 0; i < as.length; i++) {
            f(as[i])();
          }
        };
      };
    }
    ;
    var monadEff = new Prelude.Monad(function () {
        return applicativeEff;
    }, function () {
        return bindEff;
    });
    var bindEff = new Prelude.Bind(bindE, function () {
        return applyEff;
    });
    var applyEff = new Prelude.Apply(Prelude.ap(monadEff), function () {
        return functorEff;
    });
    var applicativeEff = new Prelude.Applicative(function () {
        return applyEff;
    }, returnE);
    var functorEff = new Prelude.Functor(Prelude.liftA1(applicativeEff));
    return {
        foreachE: foreachE, 
        forE: forE, 
        whileE: whileE, 
        untilE: untilE, 
        runPure: runPure, 
        bindE: bindE, 
        returnE: returnE, 
        functorEff: functorEff, 
        applyEff: applyEff, 
        applicativeEff: applicativeEff, 
        bindEff: bindEff, 
        monadEff: monadEff
    };
})();
var PS = PS || {};
PS.Control_Monad_Eff_Exception = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    
  function showErrorImpl(err) {
    return err.stack || err.toString();
  }
  ;
    
  function error(msg) {
    return new Error(msg);
  }
  ;
    
  function message(e) {
    return e.message;
  }
  ;
    
  function throwException(e) {
    return function() {
      throw e;
    };
  }
  ;
    
  function catchException(c) {
    return function(t) {
      return function() {
        try {
          return t();
        } catch(e) {
          if (e instanceof Error || Object.prototype.toString.call(e) === '[object Error]') {
            return c(e)();
          } else {
            return c(new Error(e.toString()))();
          }
        }
      };
    };
  }
  ;
    var showError = new Prelude.Show(showErrorImpl);
    return {
        catchException: catchException, 
        throwException: throwException, 
        message: message, 
        error: error, 
        showErrorImpl: showErrorImpl, 
        showError: showError
    };
})();
var PS = PS || {};
PS.Control_Monad_Eff_Random = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    
  function random() {
    return Math.random();
  }
  ;
    
    /**
     *  | Returns a random number between min (inclusive) and max (exclusive).
     */
    var randomRange = function (min) {
        return function (max) {
            return function __do() {
                var _4 = random();
                return _4 * (max - min) + min;
            };
        };
    };
    
    /**
     *  | Takes a range `low` `high` and returns a random int uniformly distributed
     *  | in the closed interval `[low, high]`. It is unspecified what happens if
     *  | `low > high`.
     */
    var randomInt = function (low) {
        return function (high) {
            var floor = function (x) {
                var ix = 0 | x;
                return ix - (function () {
                    var _1176 = ix > x;
                    if (_1176) {
                        return 1;
                    };
                    if (!_1176) {
                        return 0;
                    };
                    throw new Error("Failed pattern match");
                })();
            };
            return function __do() {
                var _3 = randomRange(low)(high + 1)();
                return floor(_3);
            };
        };
    };
    return {
        randomRange: randomRange, 
        randomInt: randomInt, 
        random: random
    };
})();
var PS = PS || {};
PS.Control_Monad_Eff_Ref = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    
  function newRef(val) {
    return function () {
      return { value: val };
    };
  }
;
    
  function readRef(ref) {
    return function() {
      return ref.value;
    };
  }
;
    
  function modifyRef$prime(ref) {
    return function(f) {
      return function() {
        var t = f(ref.value);
        ref.value = t.newState;
        return t.retVal;
      };
    };
  }
;
    
  function writeRef(ref) {
    return function(val) {
      return function() {
        ref.value = val;
        return {};
      };
    };
  }
;
    var modifyRef = function (ref) {
        return function (f) {
            return modifyRef$prime(ref)(function (s) {
                return {
                    newState: f(s), 
                    retVal: Prelude.unit
                };
            });
        };
    };
    return {
        writeRef: writeRef, 
        modifyRef: modifyRef, 
        "modifyRef'": modifyRef$prime, 
        readRef: readRef, 
        newRef: newRef
    };
})();
var PS = PS || {};
PS.Control_Monad_Eff_Ref_Unsafe = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Control_Monad_Eff_Ref = PS.Control_Monad_Eff_Ref;
    function unsafeRunRef(f) {  return f;};
    return {
        unsafeRunRef: unsafeRunRef
    };
})();
var PS = PS || {};
PS.Control_Monad_Eff_Unsafe = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    
    function unsafeInterleaveEff(f) {
      return f;
    }
    ;
    return {
        unsafeInterleaveEff: unsafeInterleaveEff
    };
})();
var PS = PS || {};
PS.Control_Monad_ST = (function () {
    "use strict";
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Prelude = PS.Prelude;
    
    function newSTRef(val) {
      return function() {
        return { value: val };
      };
    }
    ;
    
    function readSTRef(ref) {
      return function() {
        return ref.value;
      };
    }
    ;
    
    function modifySTRef(ref) {
      return function(f) {
        return function() {
          return ref.value = f(ref.value);
        };
      };
    }
    ;
    
    function writeSTRef(ref) {
      return function(a) {
        return function() {
          return ref.value = a;
        };
      };
    }
    ;
    
    function runST(f) {
      return f;
    }
    ;
    var pureST = function (st) {
        return Control_Monad_Eff.runPure(runST(st));
    };
    return {
        pureST: pureST, 
        runST: runST, 
        writeSTRef: writeSTRef, 
        modifySTRef: modifySTRef, 
        readSTRef: readSTRef, 
        newSTRef: newSTRef
    };
})();
var PS = PS || {};
PS.Control_Timer = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var globalEnv = typeof window === 'undefined' ? global : window;
    
  function timeout(time){
    return function(fn){
      return function(){
        return globalEnv.setTimeout(function(){
          fn();
        }, time);
      };
    };
  }
;
    
  function clearTimeout(timer){
    return function(){
      return globalEnv.clearTimeout(timer);
    };
  }
;
    
  function interval(time){
    return function(fn){
      return function(){
        return globalEnv.setInterval(function(){
          fn();
        }, time);
      };
    };
  }
;
    
  function clearInterval(timer){
    return function(){
      return globalEnv.clearInterval(timer);
    };
  }
;
    return {
        clearInterval: clearInterval, 
        interval: interval, 
        clearTimeout: clearTimeout, 
        timeout: timeout
    };
})();
var PS = PS || {};
PS.Debug_Trace = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    
    function trace(s) {
      return function() {
        console.log(s);
        return {};
      };
    }
    ;
    var print = function (__dict_Show_19) {
        return function (o) {
            return trace(Prelude.show(__dict_Show_19)(o));
        };
    };
    return {
        print: print, 
        trace: trace
    };
})();
var PS = PS || {};
PS.Debug_Foreign = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Debug_Trace = PS.Debug_Trace;
    
    function fprint(x){
      return function(){
        console.log(x);
        return x;
      };
    }
  ;
    
    function fprintUnsafe(x){
      console.log(x);
      return x;
    }
  ;
    
    function fprintStringify(x){
      console.log(JSON.stringify(x));
      return x;
    }
  ;
    var fspy = fprintUnsafe;
    return {
        fspy: fspy, 
        fprintStringify: fprintStringify, 
        fprintUnsafe: fprintUnsafe, 
        fprint: fprint
    };
})();
var PS = PS || {};
PS.Debug_Foreign_Eval = (function () {
    "use strict";
    var Debug_Foreign = PS.Debug_Foreign;
    var Prelude = PS.Prelude;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Debug_Trace = PS.Debug_Trace;
    
  function evaluate(x){
    return function(){
      return eval(x);
    };
  }
;
    var fpeek = function (x) {
        return Prelude[">>="](Control_Monad_Eff.bindEff)(evaluate(x))(Debug_Foreign.fprint);
    };
    return {
        fpeek: fpeek, 
        evaluate: evaluate
    };
})();
var PS = PS || {};
PS.Test_Unit_Console = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    
  function savePos() {
    process.stderr.write("\x1b[s");
  };
    
  function restorePos() {
    process.stderr.write("\x1b[u");
  };
    
  function eraseLine() {
    process.stderr.write("\x1b[K");
  };
    
  function print(s) {
    return function() {
      process.stderr.write("\x1b[33m" + s + "\x1b[0m");
    };
  };
    
  function printLabel(s) {
    return function() {
      process.stderr.write("\x1b[33;1m" + s + "\x1b[0m");
    };
  };
    
  function printFail(s) {
    return function() {
      process.stderr.write("\x1b[31;1m" + s + "\x1b[0m");
    };
  };
    
  function printPass(s) {
    return function() {
      process.stderr.write("\x1b[32m" + s + "\x1b[0m");
    };
  };
    return {
        printPass: printPass, 
        printFail: printFail, 
        printLabel: printLabel, 
        print: print, 
        eraseLine: eraseLine, 
        restorePos: restorePos, 
        savePos: savePos
    };
})();
var PS = PS || {};
PS.Control_Monad_Cont_Trans = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var ContT = function (x) {
        return x;
    };
    var runContT = function (_111) {
        return function (_112) {
            return _111(_112);
        };
    };
    var withContT = function (f) {
        return function (m) {
            return function (k) {
                return runContT(m)(f(k));
            };
        };
    };
    var monadTransContT = new Control_Monad_Trans.MonadTrans(function (__dict_Monad_20) {
        return function (m) {
            return function (k) {
                return Prelude[">>="](__dict_Monad_20["__superclass_Prelude.Bind_1"]())(m)(k);
            };
        };
    });
    var mapContT = function (f) {
        return function (m) {
            return function (k) {
                return f(runContT(m)(k));
            };
        };
    };
    var functorContT = function (__dict_Monad_22) {
        return new Prelude.Functor(function (f) {
            return function (m) {
                return function (k) {
                    return runContT(m)(function (a) {
                        return k(f(a));
                    });
                };
            };
        });
    };
    var callCC = function (f) {
        return function (k) {
            return runContT(f(function (a) {
                return function (_) {
                    return k(a);
                };
            }))(k);
        };
    };
    var applyContT = function (__dict_Functor_24) {
        return function (__dict_Monad_25) {
            return new Prelude.Apply(function (f) {
                return function (v) {
                    return function (k) {
                        return runContT(f)(function (g) {
                            return runContT(v)(function (a) {
                                return k(g(a));
                            });
                        });
                    };
                };
            }, function () {
                return functorContT(__dict_Monad_25);
            });
        };
    };
    var bindContT = function (__dict_Monad_23) {
        return new Prelude.Bind(function (m) {
            return function (k) {
                return function (k$prime) {
                    return runContT(m)(function (a) {
                        return runContT(k(a))(k$prime);
                    });
                };
            };
        }, function () {
            return applyContT(((__dict_Monad_23["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(__dict_Monad_23);
        });
    };
    var applicativeContT = function (__dict_Functor_26) {
        return function (__dict_Monad_27) {
            return new Prelude.Applicative(function () {
                return applyContT(__dict_Functor_26)(__dict_Monad_27);
            }, function (a) {
                return function (k) {
                    return k(a);
                };
            });
        };
    };
    var monadContT = function (__dict_Monad_21) {
        return new Prelude.Monad(function () {
            return applicativeContT(((__dict_Monad_21["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(__dict_Monad_21);
        }, function () {
            return bindContT(__dict_Monad_21);
        });
    };
    return {
        ContT: ContT, 
        callCC: callCC, 
        withContT: withContT, 
        mapContT: mapContT, 
        runContT: runContT, 
        functorContT: functorContT, 
        applyContT: applyContT, 
        applicativeContT: applicativeContT, 
        bindContT: bindContT, 
        monadContT: monadContT, 
        monadTransContT: monadTransContT
    };
})();
var PS = PS || {};
PS.Control_Monad = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var when = function (__dict_Monad_28) {
        return function (_118) {
            return function (_119) {
                if (_118) {
                    return _119;
                };
                if (!_118) {
                    return Prelude["return"](__dict_Monad_28)(Prelude.unit);
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var unless = function (__dict_Monad_29) {
        return function (_120) {
            return function (_121) {
                if (!_120) {
                    return _121;
                };
                if (_120) {
                    return Prelude["return"](__dict_Monad_29)(Prelude.unit);
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var replicateM = function (__dict_Monad_30) {
        return function (_113) {
            return function (_114) {
                if (_113 === 0) {
                    return Prelude["return"](__dict_Monad_30)([  ]);
                };
                return Prelude[">>="](__dict_Monad_30["__superclass_Prelude.Bind_1"]())(_114)(function (_6) {
                    return Prelude[">>="](__dict_Monad_30["__superclass_Prelude.Bind_1"]())(replicateM(__dict_Monad_30)(_113 - 1)(_114))(function (_5) {
                        return Prelude["return"](__dict_Monad_30)(Prelude[":"](_6)(_5));
                    });
                });
            };
        };
    };
    var foldM = function (__dict_Monad_31) {
        return function (_115) {
            return function (_116) {
                return function (_117) {
                    if (_117.length === 0) {
                        return Prelude["return"](__dict_Monad_31)(_116);
                    };
                    if (_117.length >= 1) {
                        var _1192 = _117.slice(1);
                        return Prelude[">>="](__dict_Monad_31["__superclass_Prelude.Bind_1"]())(_115(_116)(_117[0]))(function (a$prime) {
                            return foldM(__dict_Monad_31)(_115)(a$prime)(_1192);
                        });
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
    };
    return {
        unless: unless, 
        when: when, 
        foldM: foldM, 
        replicateM: replicateM
    };
})();
var PS = PS || {};
PS.Control_Lazy = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Lazy = function (defer) {
        this.defer = defer;
    };
    var Lazy1 = function (defer1) {
        this.defer1 = defer1;
    };
    var Lazy2 = function (defer2) {
        this.defer2 = defer2;
    };
    var defer2 = function (dict) {
        return dict.defer2;
    };
    var fix2 = function (__dict_Lazy2_32) {
        return function (f) {
            return defer2(__dict_Lazy2_32)(function (_) {
                return f(fix2(__dict_Lazy2_32)(f));
            });
        };
    };
    var defer1 = function (dict) {
        return dict.defer1;
    };
    var fix1 = function (__dict_Lazy1_33) {
        return function (f) {
            return defer1(__dict_Lazy1_33)(function (_) {
                return f(fix1(__dict_Lazy1_33)(f));
            });
        };
    };
    var defer = function (dict) {
        return dict.defer;
    };
    var fix = function (__dict_Lazy_34) {
        return function (f) {
            return defer(__dict_Lazy_34)(function (_) {
                return f(fix(__dict_Lazy_34)(f));
            });
        };
    };
    return {
        Lazy2: Lazy2, 
        Lazy1: Lazy1, 
        Lazy: Lazy, 
        fix2: fix2, 
        fix1: fix1, 
        fix: fix, 
        defer2: defer2, 
        defer1: defer1, 
        defer: defer
    };
})();
var PS = PS || {};
PS.Control_Extend = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Extend = function ($less$less$eq, __superclass_Prelude$dotFunctor_0) {
        this["<<="] = $less$less$eq;
        this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
    };
    var $less$less$eq = function (dict) {
        return dict["<<="];
    };
    var $eq$less$eq = function (__dict_Extend_35) {
        return function (f) {
            return function (g) {
                return function (w) {
                    return f($less$less$eq(__dict_Extend_35)(g)(w));
                };
            };
        };
    };
    var $eq$greater$eq = function (__dict_Extend_36) {
        return function (f) {
            return function (g) {
                return function (w) {
                    return g($less$less$eq(__dict_Extend_36)(f)(w));
                };
            };
        };
    };
    var $eq$greater$greater = function (__dict_Extend_37) {
        return function (w) {
            return function (f) {
                return $less$less$eq(__dict_Extend_37)(f)(w);
            };
        };
    };
    var extendArr = function (__dict_Semigroup_38) {
        return new Extend(function (f) {
            return function (g) {
                return function (w) {
                    return f(function (w$prime) {
                        return g(Prelude["<>"](__dict_Semigroup_38)(w)(w$prime));
                    });
                };
            };
        }, function () {
            return Prelude.functorArr;
        });
    };
    var duplicate = function (__dict_Extend_39) {
        return function (w) {
            return $less$less$eq(__dict_Extend_39)(Prelude.id(Prelude.categoryArr))(w);
        };
    };
    return {
        Extend: Extend, 
        duplicate: duplicate, 
        "=<=": $eq$less$eq, 
        "=>=": $eq$greater$eq, 
        "=>>": $eq$greater$greater, 
        "<<=": $less$less$eq, 
        extendArr: extendArr
    };
})();
var PS = PS || {};
PS.Control_Comonad = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Extend = PS.Control_Extend;
    var Comonad = function (__superclass_Control$dotExtend$dotExtend_0, extract) {
        this["__superclass_Control.Extend.Extend_0"] = __superclass_Control$dotExtend$dotExtend_0;
        this.extract = extract;
    };
    var extract = function (dict) {
        return dict.extract;
    };
    return {
        Comonad: Comonad, 
        extract: extract
    };
})();
var PS = PS || {};
PS.Control_Comonad_Trans = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Comonad = PS.Control_Comonad;
    var ComonadTrans = function (lower) {
        this.lower = lower;
    };
    var lower = function (dict) {
        return dict.lower;
    };
    return {
        ComonadTrans: ComonadTrans, 
        lower: lower
    };
})();
var PS = PS || {};
PS.Data_Coyoneda = (function () {
    "use strict";
    var Data_Exists = PS.Data_Exists;
    var Prelude = PS.Prelude;
    var Control_Comonad = PS.Control_Comonad;
    var Control_Extend = PS.Control_Extend;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var CoyonedaF = function (x) {
        return x;
    };
    var Coyoneda = function (x) {
        return x;
    };
    var lowerCoyoneda = function (__dict_Functor_41) {
        return function (_128) {
            return Data_Exists.runExists(function (_126) {
                return Prelude["<$>"](__dict_Functor_41)(_126.k)(_126.fi);
            })(_128);
        };
    };
    var liftCoyoneda = function (fa) {
        return Coyoneda(Data_Exists.mkExists({
            k: Prelude.id(Prelude.categoryArr), 
            fi: fa
        }));
    };
    var monadTransCoyoneda = new Control_Monad_Trans.MonadTrans(function (__dict_Monad_42) {
        return liftCoyoneda;
    });
    var coyoneda = function (k) {
        return function (fi) {
            return Coyoneda(Data_Exists.mkExists({
                k: k, 
                fi: fi
            }));
        };
    };
    var functorCoyoneda = new Prelude.Functor(function (_131) {
        return function (_132) {
            return Data_Exists.runExists(function (_122) {
                return coyoneda(Prelude["<<<"](Prelude.semigroupoidArr)(_131)(_122.k))(_122.fi);
            })(_132);
        };
    });
    var extendCoyoneda = function (__dict_Extend_43) {
        return new Control_Extend.Extend(function (_135) {
            return function (_136) {
                return Data_Exists.runExists(function (_124) {
                    return liftCoyoneda(Control_Extend["<<="](__dict_Extend_43)(Prelude["<<<"](Prelude.semigroupoidArr)(_135)(coyoneda(_124.k)))(_124.fi));
                })(_136);
            };
        }, function () {
            return functorCoyoneda;
        });
    };
    var liftCoyonedaT = function (_129) {
        return function (_130) {
            return Data_Exists.runExists(function (_127) {
                return coyoneda(_127.k)(_129(_127.fi));
            })(_130);
        };
    };
    var liftCoyonedaTF = function (__dict_Functor_44) {
        return function (nat) {
            return Prelude["<<<"](Prelude.semigroupoidArr)(lowerCoyoneda(__dict_Functor_44))(liftCoyonedaT(nat));
        };
    };
    var comonadCoyoneda = function (__dict_Comonad_45) {
        return new Control_Comonad.Comonad(function () {
            return extendCoyoneda(__dict_Comonad_45["__superclass_Control.Extend.Extend_0"]());
        }, function (_137) {
            return Data_Exists.runExists(function (_125) {
                return _125.k(Control_Comonad.extract(__dict_Comonad_45)(_125.fi));
            })(_137);
        });
    };
    var applyCoyoneda = function (__dict_Apply_47) {
        return new Prelude.Apply(function (f) {
            return function (g) {
                return liftCoyoneda(Prelude["<*>"](__dict_Apply_47)(lowerCoyoneda(__dict_Apply_47["__superclass_Prelude.Functor_0"]())(f))(lowerCoyoneda(__dict_Apply_47["__superclass_Prelude.Functor_0"]())(g)));
            };
        }, function () {
            return functorCoyoneda;
        });
    };
    var bindCoyoneda = function (__dict_Bind_46) {
        return new Prelude.Bind(function (_133) {
            return function (_134) {
                return liftCoyoneda(Data_Exists.runExists(function (_123) {
                    return Prelude[">>="](__dict_Bind_46)(_123.fi)(Prelude["<<<"](Prelude.semigroupoidArr)(lowerCoyoneda((__dict_Bind_46["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]()))(Prelude["<<<"](Prelude.semigroupoidArr)(_134)(_123.k)));
                })(_133));
            };
        }, function () {
            return applyCoyoneda(__dict_Bind_46["__superclass_Prelude.Apply_0"]());
        });
    };
    var applicativeCoyoneda = function (__dict_Applicative_48) {
        return new Prelude.Applicative(function () {
            return applyCoyoneda(__dict_Applicative_48["__superclass_Prelude.Apply_0"]());
        }, Prelude["<<<"](Prelude.semigroupoidArr)(liftCoyoneda)(Prelude.pure(__dict_Applicative_48)));
    };
    var monadCoyoneda = function (__dict_Monad_40) {
        return new Prelude.Monad(function () {
            return applicativeCoyoneda(__dict_Monad_40["__superclass_Prelude.Applicative_0"]());
        }, function () {
            return bindCoyoneda(__dict_Monad_40["__superclass_Prelude.Bind_1"]());
        });
    };
    return {
        CoyonedaF: CoyonedaF, 
        Coyoneda: Coyoneda, 
        liftCoyonedaTF: liftCoyonedaTF, 
        liftCoyonedaT: liftCoyonedaT, 
        lowerCoyoneda: lowerCoyoneda, 
        liftCoyoneda: liftCoyoneda, 
        coyoneda: coyoneda, 
        functorCoyoneda: functorCoyoneda, 
        applyCoyoneda: applyCoyoneda, 
        applicativeCoyoneda: applicativeCoyoneda, 
        bindCoyoneda: bindCoyoneda, 
        monadCoyoneda: monadCoyoneda, 
        monadTransCoyoneda: monadTransCoyoneda, 
        extendCoyoneda: extendCoyoneda, 
        comonadCoyoneda: comonadCoyoneda
    };
})();
var PS = PS || {};
PS.Data_Lazy = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Lazy = PS.Control_Lazy;
    var Control_Extend = PS.Control_Extend;
    var Control_Comonad = PS.Control_Comonad;
    function defer(thunk) {    if (this instanceof defer) {      this.thunk = thunk;      return this;    } else {      return new defer(thunk);    }}defer.prototype.force = function () {    var value = this.thunk();    delete this.thunk;    this.force = function () {        return value;    };    return value;};;
    function force(l) {  return l.force();};
    var showLazy = function (__dict_Show_49) {
        return new Prelude.Show(function (x) {
            return "Lazy " + Prelude.show(__dict_Show_49)(force(x));
        });
    };
    var lazy1Lazy = new Control_Lazy.Lazy1(function (f) {
        return defer(function (_) {
            return force(f(Prelude.unit));
        });
    });
    var functorLazy = new Prelude.Functor(function (f) {
        return function (l) {
            return defer(function (_) {
                return f(force(l));
            });
        };
    });
    var extendLazy = new Control_Extend.Extend(function (f) {
        return function (x) {
            return defer(function (_) {
                return f(x);
            });
        };
    }, function () {
        return functorLazy;
    });
    var eqLazy = function (__dict_Eq_51) {
        return new Prelude.Eq(function (x) {
            return function (y) {
                return !Prelude["=="](eqLazy(__dict_Eq_51))(x)(y);
            };
        }, function (x) {
            return function (y) {
                return Prelude["=="](__dict_Eq_51)(force(x))(force(y));
            };
        });
    };
    var ordLazy = function (__dict_Ord_50) {
        return new Prelude.Ord(function () {
            return eqLazy(__dict_Ord_50["__superclass_Prelude.Eq_0"]());
        }, function (x) {
            return function (y) {
                return Prelude.compare(__dict_Ord_50)(force(x))(force(y));
            };
        });
    };
    var comonadLazy = new Control_Comonad.Comonad(function () {
        return extendLazy;
    }, force);
    var applyLazy = new Prelude.Apply(function (f) {
        return function (x) {
            return defer(function (_) {
                return force(f)(force(x));
            });
        };
    }, function () {
        return functorLazy;
    });
    var bindLazy = new Prelude.Bind(function (l) {
        return function (f) {
            return defer(function (_) {
                return Prelude["<<<"](Prelude.semigroupoidArr)(force)(Prelude["<<<"](Prelude.semigroupoidArr)(f)(force))(l);
            });
        };
    }, function () {
        return applyLazy;
    });
    var applicativeLazy = new Prelude.Applicative(function () {
        return applyLazy;
    }, function (a) {
        return defer(function (_) {
            return a;
        });
    });
    var monadLazy = new Prelude.Monad(function () {
        return applicativeLazy;
    }, function () {
        return bindLazy;
    });
    return {
        force: force, 
        defer: defer, 
        functorLazy: functorLazy, 
        applyLazy: applyLazy, 
        applicativeLazy: applicativeLazy, 
        bindLazy: bindLazy, 
        monadLazy: monadLazy, 
        extendLazy: extendLazy, 
        comonadLazy: comonadLazy, 
        eqLazy: eqLazy, 
        ordLazy: ordLazy, 
        showLazy: showLazy, 
        lazy1Lazy: lazy1Lazy
    };
})();
var PS = PS || {};
PS.Data_Yoneda = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Comonad = PS.Control_Comonad;
    var Control_Extend = PS.Control_Extend;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var Yoneda = function (x) {
        return x;
    };
    var runYoneda = function (_138) {
        return function (_139) {
            return _138(_139);
        };
    };
    var lowerYoneda = function (_140) {
        return _140(Prelude.id(Prelude.categoryArr));
    };
    var liftYoneda = function (__dict_Functor_53) {
        return function (m) {
            return function (k) {
                return Prelude["<$>"](__dict_Functor_53)(k)(m);
            };
        };
    };
    var monadTransYoneda = new Control_Monad_Trans.MonadTrans(function (__dict_Monad_54) {
        return liftYoneda(((__dict_Monad_54["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]());
    });
    var functorYoneda = new Prelude.Functor(function (f) {
        return function (m) {
            return function (k) {
                return runYoneda(m)(Prelude["<<<"](Prelude.semigroupoidArr)(k)(f));
            };
        };
    });
    var extendYoneda = function (__dict_Extend_55) {
        return new Control_Extend.Extend(function (_145) {
            return function (_146) {
                return function (k) {
                    return Control_Extend["<<="](__dict_Extend_55)(Prelude["<<<"](Prelude.semigroupoidArr)(k)(Prelude["<<<"](Prelude.semigroupoidArr)(_145)(liftYoneda(__dict_Extend_55["__superclass_Prelude.Functor_0"]()))))(_146(Prelude.id(Prelude.categoryArr)));
                };
            };
        }, function () {
            return functorYoneda;
        });
    };
    var comonadYoneda = function (__dict_Comonad_56) {
        return new Control_Comonad.Comonad(function () {
            return extendYoneda(__dict_Comonad_56["__superclass_Control.Extend.Extend_0"]());
        }, Prelude["<<<"](Prelude.semigroupoidArr)(Control_Comonad.extract(__dict_Comonad_56))(lowerYoneda));
    };
    var applyYoneda = function (__dict_Apply_58) {
        return new Prelude.Apply(function (_141) {
            return function (_142) {
                return function (k) {
                    return Prelude["<*>"](__dict_Apply_58)(_141(Prelude["<<<"](Prelude.semigroupoidArr)(k)))(_142(Prelude.id(Prelude.categoryArr)));
                };
            };
        }, function () {
            return functorYoneda;
        });
    };
    var bindCoyoneda = function (__dict_Bind_57) {
        return new Prelude.Bind(function (_143) {
            return function (_144) {
                return function (k) {
                    return Prelude[">>="](__dict_Bind_57)(_143(Prelude.id(Prelude.categoryArr)))(function (a) {
                        return runYoneda(_144(a))(k);
                    });
                };
            };
        }, function () {
            return applyYoneda(__dict_Bind_57["__superclass_Prelude.Apply_0"]());
        });
    };
    var applicativeYoneda = function (__dict_Applicative_59) {
        return new Prelude.Applicative(function () {
            return applyYoneda(__dict_Applicative_59["__superclass_Prelude.Apply_0"]());
        }, Prelude["<<<"](Prelude.semigroupoidArr)(liftYoneda((__dict_Applicative_59["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]()))(Prelude.pure(__dict_Applicative_59)));
    };
    var monadYoneda = function (__dict_Monad_52) {
        return new Prelude.Monad(function () {
            return applicativeYoneda(__dict_Monad_52["__superclass_Prelude.Applicative_0"]());
        }, function () {
            return bindCoyoneda(__dict_Monad_52["__superclass_Prelude.Bind_1"]());
        });
    };
    return {
        Yoneda: Yoneda, 
        lowerYoneda: lowerYoneda, 
        liftYoneda: liftYoneda, 
        runYoneda: runYoneda, 
        functorYoneda: functorYoneda, 
        applyYoneda: applyYoneda, 
        applicativeYoneda: applicativeYoneda, 
        bindCoyoneda: bindCoyoneda, 
        monadYoneda: monadYoneda, 
        monadTransYoneda: monadTransYoneda, 
        extendYoneda: extendYoneda, 
        comonadYoneda: comonadYoneda
    };
})();
var PS = PS || {};
PS.Control_Bind = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var $greater$eq$greater = function (__dict_Bind_60) {
        return function (f) {
            return function (g) {
                return function (a) {
                    return Prelude[">>="](__dict_Bind_60)(f(a))(g);
                };
            };
        };
    };
    var $eq$less$less = function (__dict_Bind_61) {
        return function (f) {
            return function (m) {
                return Prelude[">>="](__dict_Bind_61)(m)(f);
            };
        };
    };
    var $less$eq$less = function (__dict_Bind_62) {
        return function (f) {
            return function (g) {
                return function (a) {
                    return $eq$less$less(__dict_Bind_62)(f)(g(a));
                };
            };
        };
    };
    var join = function (__dict_Bind_63) {
        return function (m) {
            return Prelude[">>="](__dict_Bind_63)(m)(Prelude.id(Prelude.categoryArr));
        };
    };
    var ifM = function (__dict_Bind_64) {
        return function (cond) {
            return function (t) {
                return function (f) {
                    return Prelude[">>="](__dict_Bind_64)(cond)(function (cond$prime) {
                        if (cond$prime) {
                            return t;
                        };
                        if (!cond$prime) {
                            return f;
                        };
                        throw new Error("Failed pattern match");
                    });
                };
            };
        };
    };
    return {
        ifM: ifM, 
        join: join, 
        "<=<": $less$eq$less, 
        ">=>": $greater$eq$greater, 
        "=<<": $eq$less$less
    };
})();
var PS = PS || {};
PS.Control_Apply = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var $less$times = function (__dict_Apply_65) {
        return function (a) {
            return function (b) {
                return Prelude["<*>"](__dict_Apply_65)(Prelude["<$>"](__dict_Apply_65["__superclass_Prelude.Functor_0"]())(Prelude["const"])(a))(b);
            };
        };
    };
    var $times$greater = function (__dict_Apply_66) {
        return function (a) {
            return function (b) {
                return Prelude["<*>"](__dict_Apply_66)(Prelude["<$>"](__dict_Apply_66["__superclass_Prelude.Functor_0"]())(Prelude["const"](Prelude.id(Prelude.categoryArr)))(a))(b);
            };
        };
    };
    var lift5 = function (__dict_Apply_67) {
        return function (f) {
            return function (a) {
                return function (b) {
                    return function (c) {
                        return function (d) {
                            return function (e) {
                                return Prelude["<*>"](__dict_Apply_67)(Prelude["<*>"](__dict_Apply_67)(Prelude["<*>"](__dict_Apply_67)(Prelude["<*>"](__dict_Apply_67)(Prelude["<$>"](__dict_Apply_67["__superclass_Prelude.Functor_0"]())(f)(a))(b))(c))(d))(e);
                            };
                        };
                    };
                };
            };
        };
    };
    var lift4 = function (__dict_Apply_68) {
        return function (f) {
            return function (a) {
                return function (b) {
                    return function (c) {
                        return function (d) {
                            return Prelude["<*>"](__dict_Apply_68)(Prelude["<*>"](__dict_Apply_68)(Prelude["<*>"](__dict_Apply_68)(Prelude["<$>"](__dict_Apply_68["__superclass_Prelude.Functor_0"]())(f)(a))(b))(c))(d);
                        };
                    };
                };
            };
        };
    };
    var lift3 = function (__dict_Apply_69) {
        return function (f) {
            return function (a) {
                return function (b) {
                    return function (c) {
                        return Prelude["<*>"](__dict_Apply_69)(Prelude["<*>"](__dict_Apply_69)(Prelude["<$>"](__dict_Apply_69["__superclass_Prelude.Functor_0"]())(f)(a))(b))(c);
                    };
                };
            };
        };
    };
    var lift2 = function (__dict_Apply_70) {
        return function (f) {
            return function (a) {
                return function (b) {
                    return Prelude["<*>"](__dict_Apply_70)(Prelude["<$>"](__dict_Apply_70["__superclass_Prelude.Functor_0"]())(f)(a))(b);
                };
            };
        };
    };
    var forever = function (__dict_Apply_71) {
        return function (a) {
            return $times$greater(__dict_Apply_71)(a)(forever(__dict_Apply_71)(a));
        };
    };
    return {
        forever: forever, 
        lift5: lift5, 
        lift4: lift4, 
        lift3: lift3, 
        lift2: lift2, 
        "*>": $times$greater, 
        "<*": $less$times
    };
})();
var PS = PS || {};
PS.Control_Alt = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Alt = function ($less$bar$greater, __superclass_Prelude$dotFunctor_0) {
        this["<|>"] = $less$bar$greater;
        this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
    };
    var $less$bar$greater = function (dict) {
        return dict["<|>"];
    };
    return {
        Alt: Alt, 
        "<|>": $less$bar$greater
    };
})();
var PS = PS || {};
PS.Control_Plus = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Alt = PS.Control_Alt;
    var Plus = function (__superclass_Control$dotAlt$dotAlt_0, empty) {
        this["__superclass_Control.Alt.Alt_0"] = __superclass_Control$dotAlt$dotAlt_0;
        this.empty = empty;
    };
    var empty = function (dict) {
        return dict.empty;
    };
    return {
        Plus: Plus, 
        empty: empty
    };
})();
var PS = PS || {};
PS.Control_Alternative = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Lazy = PS.Control_Lazy;
    var Control_Alt = PS.Control_Alt;
    var Control_Plus = PS.Control_Plus;
    var Alternative = function (__superclass_Control$dotPlus$dotPlus_1, __superclass_Prelude$dotApplicative_0) {
        this["__superclass_Control.Plus.Plus_1"] = __superclass_Control$dotPlus$dotPlus_1;
        this["__superclass_Prelude.Applicative_0"] = __superclass_Prelude$dotApplicative_0;
    };
    var some = function (__dict_Alternative_72) {
        return function (__dict_Lazy1_73) {
            return function (v) {
                return Prelude["<*>"]((__dict_Alternative_72["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())(Prelude["<$>"](((__dict_Alternative_72["__superclass_Control.Plus.Plus_1"]())["__superclass_Control.Alt.Alt_0"]())["__superclass_Prelude.Functor_0"]())(Prelude[":"])(v))(Control_Lazy.defer1(__dict_Lazy1_73)(function (_) {
                    return many(__dict_Alternative_72)(__dict_Lazy1_73)(v);
                }));
            };
        };
    };
    var many = function (__dict_Alternative_74) {
        return function (__dict_Lazy1_75) {
            return function (v) {
                return Control_Alt["<|>"]((__dict_Alternative_74["__superclass_Control.Plus.Plus_1"]())["__superclass_Control.Alt.Alt_0"]())(some(__dict_Alternative_74)(__dict_Lazy1_75)(v))(Prelude.pure(__dict_Alternative_74["__superclass_Prelude.Applicative_0"]())([  ]));
            };
        };
    };
    return {
        Alternative: Alternative, 
        many: many, 
        some: some
    };
})();
var PS = PS || {};
PS.Control_MonadPlus = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Plus = PS.Control_Plus;
    var Control_Alternative = PS.Control_Alternative;
    var MonadPlus = function (__superclass_Control$dotAlternative$dotAlternative_1, __superclass_Prelude$dotMonad_0) {
        this["__superclass_Control.Alternative.Alternative_1"] = __superclass_Control$dotAlternative$dotAlternative_1;
        this["__superclass_Prelude.Monad_0"] = __superclass_Prelude$dotMonad_0;
    };
    var guard = function (__dict_MonadPlus_76) {
        return function (_147) {
            if (_147) {
                return Prelude["return"](__dict_MonadPlus_76["__superclass_Prelude.Monad_0"]())(Prelude.unit);
            };
            if (!_147) {
                return Control_Plus.empty((__dict_MonadPlus_76["__superclass_Control.Alternative.Alternative_1"]())["__superclass_Control.Plus.Plus_1"]());
            };
            throw new Error("Failed pattern match");
        };
    };
    return {
        MonadPlus: MonadPlus, 
        guard: guard
    };
})();
var PS = PS || {};
PS.Control_Monad_Reader_Trans = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Plus = PS.Control_Plus;
    var Control_Alt = PS.Control_Alt;
    var Control_Alternative = PS.Control_Alternative;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var Control_MonadPlus = PS.Control_MonadPlus;
    var ReaderT = function (x) {
        return x;
    };
    var runReaderT = function (_148) {
        return _148;
    };
    var withReaderT = function (f) {
        return function (m) {
            return ReaderT(Prelude["<<<"](Prelude.semigroupoidArr)(runReaderT(m))(f));
        };
    };
    var mapReaderT = function (f) {
        return function (m) {
            return ReaderT(Prelude["<<<"](Prelude.semigroupoidArr)(f)(runReaderT(m)));
        };
    };
    var liftReaderT = function (m) {
        return Prelude["const"](m);
    };
    var monadTransReaderT = new Control_Monad_Trans.MonadTrans(function (__dict_Monad_79) {
        return liftReaderT;
    });
    var liftCatchReader = function ($$catch) {
        return function (m) {
            return function (h) {
                return ReaderT(function (r) {
                    return $$catch(runReaderT(m)(r))(function (e) {
                        return runReaderT(h(e))(r);
                    });
                });
            };
        };
    };
    var liftCallCCReader = function (callCC) {
        return function (f) {
            return ReaderT(function (r) {
                return callCC(function (c) {
                    return runReaderT(f(function (a) {
                        return ReaderT(Prelude["const"](c(a)));
                    }))(r);
                });
            });
        };
    };
    var functorReaderT = function (__dict_Functor_81) {
        return new Prelude.Functor(function (f) {
            return mapReaderT(Prelude["<$>"](__dict_Functor_81)(f));
        });
    };
    var applyReaderT = function (__dict_Applicative_83) {
        return new Prelude.Apply(function (f) {
            return function (v) {
                return function (r) {
                    return Prelude["<*>"](__dict_Applicative_83["__superclass_Prelude.Apply_0"]())(runReaderT(f)(r))(runReaderT(v)(r));
                };
            };
        }, function () {
            return functorReaderT((__dict_Applicative_83["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]());
        });
    };
    var bindReaderT = function (__dict_Monad_82) {
        return new Prelude.Bind(function (m) {
            return function (k) {
                return function (r) {
                    return Prelude[">>="](__dict_Monad_82["__superclass_Prelude.Bind_1"]())(runReaderT(m)(r))(function (_7) {
                        return runReaderT(k(_7))(r);
                    });
                };
            };
        }, function () {
            return applyReaderT(__dict_Monad_82["__superclass_Prelude.Applicative_0"]());
        });
    };
    var applicativeReaderT = function (__dict_Applicative_84) {
        return new Prelude.Applicative(function () {
            return applyReaderT(__dict_Applicative_84);
        }, Prelude["<<<"](Prelude.semigroupoidArr)(liftReaderT)(Prelude.pure(__dict_Applicative_84)));
    };
    var monadReaderT = function (__dict_Monad_77) {
        return new Prelude.Monad(function () {
            return applicativeReaderT(__dict_Monad_77["__superclass_Prelude.Applicative_0"]());
        }, function () {
            return bindReaderT(__dict_Monad_77);
        });
    };
    var altReaderT = function (__dict_Alt_86) {
        return new Control_Alt.Alt(function (m) {
            return function (n) {
                return function (r) {
                    return Control_Alt["<|>"](__dict_Alt_86)(runReaderT(m)(r))(runReaderT(n)(r));
                };
            };
        }, function () {
            return functorReaderT(__dict_Alt_86["__superclass_Prelude.Functor_0"]());
        });
    };
    var plusReaderT = function (__dict_Plus_80) {
        return new Control_Plus.Plus(function () {
            return altReaderT(__dict_Plus_80["__superclass_Control.Alt.Alt_0"]());
        }, liftReaderT(Control_Plus.empty(__dict_Plus_80)));
    };
    var alternativeReaderT = function (__dict_Alternative_85) {
        return new Control_Alternative.Alternative(function () {
            return plusReaderT(__dict_Alternative_85["__superclass_Control.Plus.Plus_1"]());
        }, function () {
            return applicativeReaderT(__dict_Alternative_85["__superclass_Prelude.Applicative_0"]());
        });
    };
    var monadPlusReaderT = function (__dict_MonadPlus_78) {
        return new Control_MonadPlus.MonadPlus(function () {
            return alternativeReaderT(__dict_MonadPlus_78["__superclass_Control.Alternative.Alternative_1"]());
        }, function () {
            return monadReaderT(__dict_MonadPlus_78["__superclass_Prelude.Monad_0"]());
        });
    };
    return {
        ReaderT: ReaderT, 
        liftCallCCReader: liftCallCCReader, 
        liftCatchReader: liftCatchReader, 
        liftReaderT: liftReaderT, 
        mapReaderT: mapReaderT, 
        withReaderT: withReaderT, 
        runReaderT: runReaderT, 
        functorReaderT: functorReaderT, 
        applyReaderT: applyReaderT, 
        applicativeReaderT: applicativeReaderT, 
        altReaderT: altReaderT, 
        plusReaderT: plusReaderT, 
        alternativeReaderT: alternativeReaderT, 
        bindReaderT: bindReaderT, 
        monadReaderT: monadReaderT, 
        monadPlusReaderT: monadPlusReaderT, 
        monadTransReaderT: monadTransReaderT
    };
})();
var PS = PS || {};
PS.Data_Either = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Alt = PS.Control_Alt;
    var Left = (function () {
        function Left(value0) {
            this.value0 = value0;
        };
        Left.create = function (value0) {
            return new Left(value0);
        };
        return Left;
    })();
    var Right = (function () {
        function Right(value0) {
            this.value0 = value0;
        };
        Right.create = function (value0) {
            return new Right(value0);
        };
        return Right;
    })();
    var showEither = function (__dict_Show_87) {
        return function (__dict_Show_88) {
            return new Prelude.Show(function (_158) {
                if (_158 instanceof Left) {
                    return "Left (" + (Prelude.show(__dict_Show_87)(_158.value0) + ")");
                };
                if (_158 instanceof Right) {
                    return "Right (" + (Prelude.show(__dict_Show_88)(_158.value0) + ")");
                };
                throw new Error("Failed pattern match");
            });
        };
    };
    var functorEither = new Prelude.Functor(function (_152) {
        return function (_153) {
            if (_153 instanceof Left) {
                return new Left(_153.value0);
            };
            if (_153 instanceof Right) {
                return new Right(_152(_153.value0));
            };
            throw new Error("Failed pattern match");
        };
    });
    var eqEither = function (__dict_Eq_91) {
        return function (__dict_Eq_92) {
            return new Prelude.Eq(function (a) {
                return function (b) {
                    return !Prelude["=="](eqEither(__dict_Eq_91)(__dict_Eq_92))(a)(b);
                };
            }, function (_159) {
                return function (_160) {
                    if (_159 instanceof Left && _160 instanceof Left) {
                        return Prelude["=="](__dict_Eq_91)(_159.value0)(_160.value0);
                    };
                    if (_159 instanceof Right && _160 instanceof Right) {
                        return Prelude["=="](__dict_Eq_92)(_159.value0)(_160.value0);
                    };
                    return false;
                };
            });
        };
    };
    var ordEither = function (__dict_Ord_89) {
        return function (__dict_Ord_90) {
            return new Prelude.Ord(function () {
                return eqEither(__dict_Ord_89["__superclass_Prelude.Eq_0"]())(__dict_Ord_90["__superclass_Prelude.Eq_0"]());
            }, function (_161) {
                return function (_162) {
                    if (_161 instanceof Left && _162 instanceof Left) {
                        return Prelude.compare(__dict_Ord_89)(_161.value0)(_162.value0);
                    };
                    if (_161 instanceof Right && _162 instanceof Right) {
                        return Prelude.compare(__dict_Ord_90)(_161.value0)(_162.value0);
                    };
                    if (_161 instanceof Left) {
                        return Prelude.LT.value;
                    };
                    if (_162 instanceof Left) {
                        return Prelude.GT.value;
                    };
                    throw new Error("Failed pattern match");
                };
            });
        };
    };
    var either = function (_149) {
        return function (_150) {
            return function (_151) {
                if (_151 instanceof Left) {
                    return _149(_151.value0);
                };
                if (_151 instanceof Right) {
                    return _150(_151.value0);
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var isLeft = either(Prelude["const"](true))(Prelude["const"](false));
    var isRight = either(Prelude["const"](false))(Prelude["const"](true));
    var applyEither = new Prelude.Apply(function (_154) {
        return function (_155) {
            if (_154 instanceof Left) {
                return new Left(_154.value0);
            };
            if (_154 instanceof Right) {
                return Prelude["<$>"](functorEither)(_154.value0)(_155);
            };
            throw new Error("Failed pattern match");
        };
    }, function () {
        return functorEither;
    });
    var bindEither = new Prelude.Bind(either(function (e) {
        return function (_) {
            return new Left(e);
        };
    })(function (a) {
        return function (f) {
            return f(a);
        };
    }), function () {
        return applyEither;
    });
    var applicativeEither = new Prelude.Applicative(function () {
        return applyEither;
    }, Right.create);
    var monadEither = new Prelude.Monad(function () {
        return applicativeEither;
    }, function () {
        return bindEither;
    });
    var altEither = new Control_Alt.Alt(function (_156) {
        return function (_157) {
            if (_156 instanceof Left) {
                return _157;
            };
            return _156;
        };
    }, function () {
        return functorEither;
    });
    return {
        Left: Left, 
        Right: Right, 
        isRight: isRight, 
        isLeft: isLeft, 
        either: either, 
        functorEither: functorEither, 
        applyEither: applyEither, 
        applicativeEither: applicativeEither, 
        altEither: altEither, 
        bindEither: bindEither, 
        monadEither: monadEither, 
        showEither: showEither, 
        eqEither: eqEither, 
        ordEither: ordEither
    };
})();
var PS = PS || {};
PS.Data_Either_Nested = (function () {
    "use strict";
    var Data_Either = PS.Data_Either;
    var Prelude = PS.Prelude;
    var choice2 = Data_Either.either;
    var choice3 = function (a) {
        return function (b) {
            return function (c) {
                return Data_Either.either(a)(choice2(b)(c));
            };
        };
    };
    var choice4 = function (a) {
        return function (b) {
            return function (c) {
                return function (d) {
                    return Data_Either.either(a)(choice3(b)(c)(d));
                };
            };
        };
    };
    var choice5 = function (a) {
        return function (b) {
            return function (c) {
                return function (d) {
                    return function (e) {
                        return Data_Either.either(a)(choice4(b)(c)(d)(e));
                    };
                };
            };
        };
    };
    var choice6 = function (a) {
        return function (b) {
            return function (c) {
                return function (d) {
                    return function (e) {
                        return function (f) {
                            return Data_Either.either(a)(choice5(b)(c)(d)(e)(f));
                        };
                    };
                };
            };
        };
    };
    var choice7 = function (a) {
        return function (b) {
            return function (c) {
                return function (d) {
                    return function (e) {
                        return function (f) {
                            return function (g) {
                                return Data_Either.either(a)(choice6(b)(c)(d)(e)(f)(g));
                            };
                        };
                    };
                };
            };
        };
    };
    var choice8 = function (a) {
        return function (b) {
            return function (c) {
                return function (d) {
                    return function (e) {
                        return function (f) {
                            return function (g) {
                                return function (h) {
                                    return Data_Either.either(a)(choice7(b)(c)(d)(e)(f)(g)(h));
                                };
                            };
                        };
                    };
                };
            };
        };
    };
    var choice9 = function (a) {
        return function (b) {
            return function (c) {
                return function (d) {
                    return function (e) {
                        return function (f) {
                            return function (g) {
                                return function (h) {
                                    return function (i) {
                                        return Data_Either.either(a)(choice8(b)(c)(d)(e)(f)(g)(h)(i));
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
    };
    var choice10 = function (a) {
        return function (b) {
            return function (c) {
                return function (d) {
                    return function (e) {
                        return function (f) {
                            return function (g) {
                                return function (h) {
                                    return function (i) {
                                        return function (j) {
                                            return Data_Either.either(a)(choice9(b)(c)(d)(e)(f)(g)(h)(i)(j));
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
    };
    return {
        choice10: choice10, 
        choice9: choice9, 
        choice8: choice8, 
        choice7: choice7, 
        choice6: choice6, 
        choice5: choice5, 
        choice4: choice4, 
        choice3: choice3, 
        choice2: choice2
    };
})();
var PS = PS || {};
PS.Data_Profunctor_Choice = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Either = PS.Data_Either;
    var Data_Profunctor = PS.Data_Profunctor;
    var Choice = function (__superclass_Data$dotProfunctor$dotProfunctor_0, left, right) {
        this["__superclass_Data.Profunctor.Profunctor_0"] = __superclass_Data$dotProfunctor$dotProfunctor_0;
        this.left = left;
        this.right = right;
    };
    var right = function (dict) {
        return dict.right;
    };
    var left = function (dict) {
        return dict.left;
    };
    var choiceArr = new Choice(function () {
        return Data_Profunctor.profunctorArr;
    }, function (_163) {
        return function (_164) {
            if (_164 instanceof Data_Either.Left) {
                return Data_Either.Left.create(_163(_164.value0));
            };
            if (_164 instanceof Data_Either.Right) {
                return new Data_Either.Right(_164.value0);
            };
            throw new Error("Failed pattern match");
        };
    }, Prelude["<$>"](Data_Either.functorEither));
    return {
        Choice: Choice, 
        right: right, 
        left: left, 
        choiceArr: choiceArr
    };
})();
var PS = PS || {};
PS.Optic_Internal_Prism = (function () {
    "use strict";
    var Data_Either = PS.Data_Either;
    var Prelude = PS.Prelude;
    var Data_Profunctor = PS.Data_Profunctor;
    var Data_Profunctor_Choice = PS.Data_Profunctor_Choice;
    var Market = (function () {
        function Market(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        };
        Market.create = function (value0) {
            return function (value1) {
                return new Market(value0, value1);
            };
        };
        return Market;
    })();
    var profunctorMarket = new Data_Profunctor.Profunctor(function (_167) {
        return function (_168) {
            return function (_169) {
                return new Market(Prelude[">>>"](Prelude.semigroupoidArr)(_169.value0)(_168), Prelude[">>>"](Prelude.semigroupoidArr)(_167)(Prelude[">>>"](Prelude.semigroupoidArr)(_169.value1)(Data_Either.either(Prelude[">>>"](Prelude.semigroupoidArr)(_168)(Data_Either.Left.create))(Data_Either.Right.create))));
            };
        };
    });
    var functorMarket = new Prelude.Functor(function (_165) {
        return function (_166) {
            return new Market(Prelude[">>>"](Prelude.semigroupoidArr)(_166.value0)(_165), Prelude[">>>"](Prelude.semigroupoidArr)(_166.value1)(Data_Either.either(Prelude[">>>"](Prelude.semigroupoidArr)(_165)(Data_Either.Left.create))(Data_Either.Right.create)));
        };
    });
    var choiceMarket = new Data_Profunctor_Choice.Choice(function () {
        return profunctorMarket;
    }, function (_170) {
        return new Market(Prelude[">>>"](Prelude.semigroupoidArr)(_170.value0)(Data_Either.Left.create), function (thing) {
            if (thing instanceof Data_Either.Left) {
                return Data_Either.either(Prelude[">>>"](Prelude.semigroupoidArr)(Data_Either.Left.create)(Data_Either.Left.create))(Data_Either.Right.create)(_170.value1(thing.value0));
            };
            if (thing instanceof Data_Either.Right) {
                return Data_Either.Left.create(new Data_Either.Right(thing.value0));
            };
            throw new Error("Failed pattern match");
        });
    }, function (_171) {
        return new Market(Prelude[">>>"](Prelude.semigroupoidArr)(_171.value0)(Data_Either.Right.create), function (thing) {
            if (thing instanceof Data_Either.Left) {
                return Data_Either.Left.create(new Data_Either.Left(thing.value0));
            };
            if (thing instanceof Data_Either.Right) {
                return Data_Either.either(Prelude[">>>"](Prelude.semigroupoidArr)(Data_Either.Right.create)(Data_Either.Left.create))(Data_Either.Right.create)(_171.value1(thing.value0));
            };
            throw new Error("Failed pattern match");
        });
    });
    return {
        Market: Market, 
        functorMarket: functorMarket, 
        profunctorMarket: profunctorMarket, 
        choiceMarket: choiceMarket
    };
})();
var PS = PS || {};
PS.Data_Maybe = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Alt = PS.Control_Alt;
    var Control_Alternative = PS.Control_Alternative;
    var Control_Extend = PS.Control_Extend;
    var Control_MonadPlus = PS.Control_MonadPlus;
    var Control_Plus = PS.Control_Plus;
    var Nothing = (function () {
        function Nothing() {

        };
        Nothing.value = new Nothing();
        return Nothing;
    })();
    var Just = (function () {
        function Just(value0) {
            this.value0 = value0;
        };
        Just.create = function (value0) {
            return new Just(value0);
        };
        return Just;
    })();
    var showMaybe = function (__dict_Show_93) {
        return new Prelude.Show(function (_187) {
            if (_187 instanceof Just) {
                return "Just (" + (Prelude.show(__dict_Show_93)(_187.value0) + ")");
            };
            if (_187 instanceof Nothing) {
                return "Nothing";
            };
            throw new Error("Failed pattern match");
        });
    };
    var semigroupMaybe = function (__dict_Semigroup_94) {
        return new Prelude.Semigroup(function (_185) {
            return function (_186) {
                if (_185 instanceof Nothing) {
                    return _186;
                };
                if (_186 instanceof Nothing) {
                    return _185;
                };
                if (_185 instanceof Just && _186 instanceof Just) {
                    return new Just(Prelude["<>"](__dict_Semigroup_94)(_185.value0)(_186.value0));
                };
                throw new Error("Failed pattern match");
            };
        });
    };
    var maybe = function (_172) {
        return function (_173) {
            return function (_174) {
                if (_174 instanceof Nothing) {
                    return _172;
                };
                if (_174 instanceof Just) {
                    return _173(_174.value0);
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var isNothing = maybe(true)(Prelude["const"](false));
    var isJust = maybe(false)(Prelude["const"](true));
    var functorMaybe = new Prelude.Functor(function (_175) {
        return function (_176) {
            if (_176 instanceof Just) {
                return new Just(_175(_176.value0));
            };
            return Nothing.value;
        };
    });
    var fromMaybe = function (a) {
        return maybe(a)(Prelude.id(Prelude.categoryArr));
    };
    var extendMaybe = new Control_Extend.Extend(function (_183) {
        return function (_184) {
            if (_184 instanceof Nothing) {
                return Nothing.value;
            };
            return Just.create(_183(_184));
        };
    }, function () {
        return functorMaybe;
    });
    var eqMaybe = function (__dict_Eq_96) {
        return new Prelude.Eq(function (a) {
            return function (b) {
                return !Prelude["=="](eqMaybe(__dict_Eq_96))(a)(b);
            };
        }, function (_188) {
            return function (_189) {
                if (_188 instanceof Nothing && _189 instanceof Nothing) {
                    return true;
                };
                if (_188 instanceof Just && _189 instanceof Just) {
                    return Prelude["=="](__dict_Eq_96)(_188.value0)(_189.value0);
                };
                return false;
            };
        });
    };
    var ordMaybe = function (__dict_Ord_95) {
        return new Prelude.Ord(function () {
            return eqMaybe(__dict_Ord_95["__superclass_Prelude.Eq_0"]());
        }, function (_190) {
            return function (_191) {
                if (_190 instanceof Just && _191 instanceof Just) {
                    return Prelude.compare(__dict_Ord_95)(_190.value0)(_191.value0);
                };
                if (_190 instanceof Nothing && _191 instanceof Nothing) {
                    return Prelude.EQ.value;
                };
                if (_190 instanceof Nothing) {
                    return Prelude.LT.value;
                };
                if (_191 instanceof Nothing) {
                    return Prelude.GT.value;
                };
                throw new Error("Failed pattern match");
            };
        });
    };
    var applyMaybe = new Prelude.Apply(function (_177) {
        return function (_178) {
            if (_177 instanceof Just) {
                return Prelude["<$>"](functorMaybe)(_177.value0)(_178);
            };
            if (_177 instanceof Nothing) {
                return Nothing.value;
            };
            throw new Error("Failed pattern match");
        };
    }, function () {
        return functorMaybe;
    });
    var bindMaybe = new Prelude.Bind(function (_181) {
        return function (_182) {
            if (_181 instanceof Just) {
                return _182(_181.value0);
            };
            if (_181 instanceof Nothing) {
                return Nothing.value;
            };
            throw new Error("Failed pattern match");
        };
    }, function () {
        return applyMaybe;
    });
    var applicativeMaybe = new Prelude.Applicative(function () {
        return applyMaybe;
    }, Just.create);
    var monadMaybe = new Prelude.Monad(function () {
        return applicativeMaybe;
    }, function () {
        return bindMaybe;
    });
    var altMaybe = new Control_Alt.Alt(function (_179) {
        return function (_180) {
            if (_179 instanceof Nothing) {
                return _180;
            };
            return _179;
        };
    }, function () {
        return functorMaybe;
    });
    var plusMaybe = new Control_Plus.Plus(function () {
        return altMaybe;
    }, Nothing.value);
    var alternativeMaybe = new Control_Alternative.Alternative(function () {
        return plusMaybe;
    }, function () {
        return applicativeMaybe;
    });
    var monadPlusMaybe = new Control_MonadPlus.MonadPlus(function () {
        return alternativeMaybe;
    }, function () {
        return monadMaybe;
    });
    return {
        Nothing: Nothing, 
        Just: Just, 
        isNothing: isNothing, 
        isJust: isJust, 
        fromMaybe: fromMaybe, 
        maybe: maybe, 
        functorMaybe: functorMaybe, 
        applyMaybe: applyMaybe, 
        applicativeMaybe: applicativeMaybe, 
        altMaybe: altMaybe, 
        plusMaybe: plusMaybe, 
        alternativeMaybe: alternativeMaybe, 
        bindMaybe: bindMaybe, 
        monadMaybe: monadMaybe, 
        monadPlusMaybe: monadPlusMaybe, 
        extendMaybe: extendMaybe, 
        semigroupMaybe: semigroupMaybe, 
        showMaybe: showMaybe, 
        eqMaybe: eqMaybe, 
        ordMaybe: ordMaybe
    };
})();
var PS = PS || {};
PS.Data_Array = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    var Control_Alt = PS.Control_Alt;
    var Control_Plus = PS.Control_Plus;
    var Control_Alternative = PS.Control_Alternative;
    var Control_MonadPlus = PS.Control_MonadPlus;
    var Prelude_Unsafe = PS.Prelude_Unsafe;
    function snoc(l) {  return function (e) {    var l1 = l.slice();    l1.push(e);     return l1;  };};
    function length (xs) {  return xs.length;};
    function findIndex (f) {  return function (arr) {    for (var i = 0, l = arr.length; i < l; i++) {      if (f(arr[i])) {        return i;      }    }    return -1;  };};
    function findLastIndex (f) {  return function (arr) {    for (var i = arr.length - 1; i >= 0; i--) {      if (f(arr[i])) {        return i;      }    }    return -1;  };};
    function append (l1) {  return function (l2) {    return l1.concat(l2);  };};
    function concat (xss) {  var result = [];  for (var i = 0, l = xss.length; i < l; i++) {    result.push.apply(result, xss[i]);  }  return result;};
    function reverse (l) {  return l.slice().reverse();};
    function drop (n) {  return function (l) {    return l.slice(n);  };};
    function slice (s) {  return function (e) {    return function (l) {      return l.slice(s, e);    };  };};
    function insertAt (index) {  return function (a) {    return function (l) {      var l1 = l.slice();      l1.splice(index, 0, a);      return l1;    };   };};
    function deleteAt (index) {  return function (n) {    return function (l) {      var l1 = l.slice();      l1.splice(index, n);      return l1;    };   };};
    function updateAt (index) {  return function (a) {    return function (l) {      var i = ~~index;      if (i < 0 || i >= l.length) return l;      var l1 = l.slice();      l1[i] = a;      return l1;    };   };};
    function concatMap (f) {  return function (arr) {    var result = [];    for (var i = 0, l = arr.length; i < l; i++) {      Array.prototype.push.apply(result, f(arr[i]));    }    return result;  };};
    function map (f) {  return function (arr) {    var l = arr.length;    var result = new Array(l);    for (var i = 0; i < l; i++) {      result[i] = f(arr[i]);    }    return result;  };};
    function filter (f) {  return function (arr) {    var n = 0;    var result = [];    for (var i = 0, l = arr.length; i < l; i++) {      if (f(arr[i])) {        result[n++] = arr[i];      }    }    return result;  };};
    function range (start) {  return function (end) {    var i = ~~start, e = ~~end;    var step = i > e ? -1 : 1;    var result = [i], n = 1;    while (i !== e) {      i += step;      result[n++] = i;    }    return result;  };};
    function zipWith (f) {  return function (xs) {    return function (ys) {      var l = xs.length < ys.length ? xs.length : ys.length;      var result = new Array(l);      for (var i = 0; i < l; i++) {        result[i] = f(xs[i])(ys[i]);      }      return result;    };  };};
    function sortJS (f) {  return function (l) {    return l.slice().sort(function (x, y) {      return f(x)(y);    });  };};
    var $dot$dot = range;
    var $bang$bang = function (xs) {
        return function (n) {
            var isInt = function (n_1) {
                return n_1 !== ~~n_1;
            };
            var _1311 = n < 0 || (n >= length(xs) || isInt(n));
            if (_1311) {
                return Data_Maybe.Nothing.value;
            };
            if (!_1311) {
                return new Data_Maybe.Just(xs[n]);
            };
            throw new Error("Failed pattern match");
        };
    };
    var take = function (n) {
        return slice(0)(n);
    };
    var tail = function (_194) {
        if (_194.length >= 1) {
            var _1314 = _194.slice(1);
            return new Data_Maybe.Just(_1314);
        };
        return Data_Maybe.Nothing.value;
    };
    var span = (function () {
        var go = function (__copy__210) {
            return function (__copy__211) {
                return function (__copy__212) {
                    var _210 = __copy__210;
                    var _211 = __copy__211;
                    var _212 = __copy__212;
                    tco: while (true) {
                        if (_212.length >= 1) {
                            var _1319 = _212.slice(1);
                            if (_211(_212[0])) {
                                var __tco__210 = Prelude[":"](_212[0])(_210);
                                var __tco__211 = _211;
                                _210 = __tco__210;
                                _211 = __tco__211;
                                _212 = _1319;
                                continue tco;
                            };
                        };
                        return {
                            init: reverse(_210), 
                            rest: _212
                        };
                    };
                };
            };
        };
        return go([  ]);
    })();
    var takeWhile = function (p) {
        return function (xs) {
            return (span(p)(xs)).init;
        };
    };
    var sortBy = function (comp) {
        return function (xs) {
            var comp$prime = function (x) {
                return function (y) {
                    var _1320 = comp(x)(y);
                    if (_1320 instanceof Prelude.GT) {
                        return 1;
                    };
                    if (_1320 instanceof Prelude.EQ) {
                        return 0;
                    };
                    if (_1320 instanceof Prelude.LT) {
                        return -1;
                    };
                    throw new Error("Failed pattern match");
                };
            };
            return sortJS(comp$prime)(xs);
        };
    };
    var sort = function (__dict_Ord_97) {
        return function (xs) {
            return sortBy(Prelude.compare(__dict_Ord_97))(xs);
        };
    };
    var singleton = function (a) {
        return [ a ];
    };
    var semigroupArray = new Prelude.Semigroup(append);
    var $$null = function (_196) {
        if (_196.length === 0) {
            return true;
        };
        return false;
    };
    var nubBy = function (_203) {
        return function (_204) {
            if (_204.length === 0) {
                return [  ];
            };
            if (_204.length >= 1) {
                var _1325 = _204.slice(1);
                return Prelude[":"](_204[0])(nubBy(_203)(filter(function (y) {
                    return !_203(_204[0])(y);
                })(_1325)));
            };
            throw new Error("Failed pattern match");
        };
    };
    var nub = function (__dict_Eq_98) {
        return nubBy(Prelude["=="](__dict_Eq_98));
    };
    var mapMaybe = function (f) {
        return concatMap(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Maybe.maybe([  ])(singleton))(f));
    };
    var last = function (__copy__193) {
        var _193 = __copy__193;
        tco: while (true) {
            if (_193.length >= 1) {
                var _1328 = _193.slice(1);
                if (_1328.length === 0) {
                    return new Data_Maybe.Just(_193[0]);
                };
            };
            if (_193.length >= 1) {
                var _1330 = _193.slice(1);
                _193 = _1330;
                continue tco;
            };
            return Data_Maybe.Nothing.value;
        };
    };
    var intersectBy = function (_200) {
        return function (_201) {
            return function (_202) {
                if (_201.length === 0) {
                    return [  ];
                };
                if (_202.length === 0) {
                    return [  ];
                };
                var el = function (x) {
                    return findIndex(_200(x))(_202) >= 0;
                };
                return filter(el)(_201);
            };
        };
    };
    var intersect = function (__dict_Eq_99) {
        return intersectBy(Prelude["=="](__dict_Eq_99));
    };
    var init = function (_195) {
        if (_195.length === 0) {
            return Data_Maybe.Nothing.value;
        };
        return new Data_Maybe.Just(slice(0)(length(_195) - 1)(_195));
    };
    var head = function (_192) {
        if (_192.length >= 1) {
            var _1337 = _192.slice(1);
            return new Data_Maybe.Just(_192[0]);
        };
        return Data_Maybe.Nothing.value;
    };
    var groupBy = (function () {
        var go = function (__copy__207) {
            return function (__copy__208) {
                return function (__copy__209) {
                    var _207 = __copy__207;
                    var _208 = __copy__208;
                    var _209 = __copy__209;
                    tco: while (true) {
                        if (_209.length === 0) {
                            return reverse(_207);
                        };
                        if (_209.length >= 1) {
                            var _1342 = _209.slice(1);
                            var sp = span(_208(_209[0]))(_1342);
                            var __tco__207 = Prelude[":"](Prelude[":"](_209[0])(sp.init))(_207);
                            var __tco__208 = _208;
                            _207 = __tco__207;
                            _208 = __tco__208;
                            _209 = sp.rest;
                            continue tco;
                        };
                        throw new Error("Failed pattern match");
                    };
                };
            };
        };
        return go([  ]);
    })();
    var group = function (__dict_Eq_100) {
        return function (xs) {
            return groupBy(Prelude["=="](__dict_Eq_100))(xs);
        };
    };
    
    /**
     *  | Performs a sorting first.
     */
    var group$prime = function (__dict_Ord_101) {
        return Prelude["<<<"](Prelude.semigroupoidArr)(group(__dict_Ord_101["__superclass_Prelude.Eq_0"]()))(sort(__dict_Ord_101));
    };
    var functorArray = new Prelude.Functor(map);
    var elemLastIndex = function (__dict_Eq_102) {
        return function (x) {
            return findLastIndex(Prelude["=="](__dict_Eq_102)(x));
        };
    };
    var elemIndex = function (__dict_Eq_103) {
        return function (x) {
            return findIndex(Prelude["=="](__dict_Eq_103)(x));
        };
    };
    var dropWhile = function (p) {
        return function (xs) {
            return (span(p)(xs)).rest;
        };
    };
    var deleteBy = function (_197) {
        return function (_198) {
            return function (_199) {
                if (_199.length === 0) {
                    return [  ];
                };
                var _1346 = findIndex(_197(_198))(_199);
                if (_1346 < 0) {
                    return _199;
                };
                return deleteAt(_1346)(1)(_199);
            };
        };
    };
    var $$delete = function (__dict_Eq_104) {
        return deleteBy(Prelude["=="](__dict_Eq_104));
    };
    var $bslash$bslash = function (__dict_Eq_105) {
        return function (xs) {
            return function (ys) {
                var go = function (__copy__205) {
                    return function (__copy__206) {
                        var _205 = __copy__205;
                        var _206 = __copy__206;
                        tco: while (true) {
                            if (_206.length === 0) {
                                return _205;
                            };
                            if (_205.length === 0) {
                                return [  ];
                            };
                            if (_206.length >= 1) {
                                var _1350 = _206.slice(1);
                                var __tco__205 = $$delete(__dict_Eq_105)(_206[0])(_205);
                                _205 = __tco__205;
                                _206 = _1350;
                                continue tco;
                            };
                            throw new Error("Failed pattern match");
                        };
                    };
                };
                return go(xs)(ys);
            };
        };
    };
    var catMaybes = concatMap(Data_Maybe.maybe([  ])(singleton));
    var monadArray = new Prelude.Monad(function () {
        return applicativeArray;
    }, function () {
        return bindArray;
    });
    var bindArray = new Prelude.Bind(Prelude.flip(concatMap), function () {
        return applyArray;
    });
    var applyArray = new Prelude.Apply(Prelude.ap(monadArray), function () {
        return functorArray;
    });
    var applicativeArray = new Prelude.Applicative(function () {
        return applyArray;
    }, singleton);
    var altArray = new Control_Alt.Alt(append, function () {
        return functorArray;
    });
    var plusArray = new Control_Plus.Plus(function () {
        return altArray;
    }, [  ]);
    var alternativeArray = new Control_Alternative.Alternative(function () {
        return plusArray;
    }, function () {
        return applicativeArray;
    });
    var monadPlusArray = new Control_MonadPlus.MonadPlus(function () {
        return alternativeArray;
    }, function () {
        return monadArray;
    });
    return {
        takeWhile: takeWhile, 
        dropWhile: dropWhile, 
        span: span, 
        groupBy: groupBy, 
        "group'": group$prime, 
        group: group, 
        sortBy: sortBy, 
        sort: sort, 
        nubBy: nubBy, 
        nub: nub, 
        zipWith: zipWith, 
        range: range, 
        filter: filter, 
        concatMap: concatMap, 
        intersect: intersect, 
        intersectBy: intersectBy, 
        "\\\\": $bslash$bslash, 
        "delete": $$delete, 
        deleteBy: deleteBy, 
        updateAt: updateAt, 
        deleteAt: deleteAt, 
        insertAt: insertAt, 
        take: take, 
        drop: drop, 
        reverse: reverse, 
        concat: concat, 
        append: append, 
        elemLastIndex: elemLastIndex, 
        elemIndex: elemIndex, 
        findLastIndex: findLastIndex, 
        findIndex: findIndex, 
        length: length, 
        catMaybes: catMaybes, 
        mapMaybe: mapMaybe, 
        map: map, 
        "null": $$null, 
        init: init, 
        tail: tail, 
        last: last, 
        head: head, 
        singleton: singleton, 
        snoc: snoc, 
        "..": $dot$dot, 
        "!!": $bang$bang, 
        functorArray: functorArray, 
        applyArray: applyArray, 
        applicativeArray: applicativeArray, 
        bindArray: bindArray, 
        monadArray: monadArray, 
        semigroupArray: semigroupArray, 
        altArray: altArray, 
        plusArray: plusArray, 
        alternativeArray: alternativeArray, 
        monadPlusArray: monadPlusArray
    };
})();
var PS = PS || {};
PS.Data_Array_ST = (function () {
    "use strict";
    var Data_Function = PS.Data_Function;
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Control_Monad_ST = PS.Control_Monad_ST;
    
  function runSTArray(f) {
    return f;
  };
    
  function emptySTArray() {
    return [];
  };
    
  function peekSTArrayImpl(arr, i, s, f) {
    return function() {
      var index = ~~i;
      if (0 <= index && index < arr.length) {
        return s(arr[index]);
      } else {
        return f;
      }
    };
  };
    
  function pokeSTArrayImpl(arr, i, a) {
    return function() {
      var index = ~~i;
      if (0 <= index && index <= arr.length) {
        arr[index] = a;
        return true;
      }
      return false;
    };
  };
    
  function pushAllSTArrayImpl(arr, as) {
    return function(){
      return arr.push.apply(arr, as);
    };
  };
    
  function spliceSTArrayImpl(arr, index, howMany, bs) {
    return function(){
      return arr.splice.apply(arr, [index, howMany].concat(bs));
    };
  };
    
  function copyImpl(arr) {
    return function(){
      var as = [];
      var i = -1;
      var n = arr.length;
      while(++i < n) {
        as[i] = arr[i];
      }
      return as;
    };
  };
    
  function toAssocArray(arr) {
    return function(){
      var as = [];
      var i = -1;
      var n = arr.length;
      while(++i < n) {
        as[i] = {value: arr[i], index: i};
      }
      return as;
    };
  };
    var thaw = copyImpl;
    var spliceSTArray = Data_Function.runFn4(spliceSTArrayImpl);
    var pushAllSTArray = Data_Function.runFn2(pushAllSTArrayImpl);
    var pushSTArray = function (arr) {
        return function (a) {
            return pushAllSTArray(arr)([ a ]);
        };
    };
    var pokeSTArray = function (arr) {
        return function (i) {
            return function (a) {
                return pokeSTArrayImpl(arr, i, a);
            };
        };
    };
    var peekSTArray = function (arr) {
        return function (i) {
            return peekSTArrayImpl(arr, i, Data_Maybe.Just.create, Data_Maybe.Nothing.value);
        };
    };
    var freeze = copyImpl;
    return {
        toAssocArray: toAssocArray, 
        thaw: thaw, 
        freeze: freeze, 
        spliceSTArray: spliceSTArray, 
        pushAllSTArray: pushAllSTArray, 
        pushSTArray: pushSTArray, 
        pokeSTArray: pokeSTArray, 
        peekSTArray: peekSTArray, 
        emptySTArray: emptySTArray, 
        runSTArray: runSTArray
    };
})();
var PS = PS || {};
PS.Data_Maybe_Unsafe = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    var fromJust = function (_213) {
        if (_213 instanceof Data_Maybe.Just) {
            return _213.value0;
        };
        throw new Error("Failed pattern match");
    };
    return {
        fromJust: fromJust
    };
})();
var PS = PS || {};
PS.Data_Array_Unsafe = (function () {
    "use strict";
    var Prelude_Unsafe = PS.Prelude_Unsafe;
    var Data_Array = PS.Data_Array;
    var Data_Maybe_Unsafe = PS.Data_Maybe_Unsafe;
    var Prelude = PS.Prelude;
    var tail = function (_215) {
        if (_215.length >= 1) {
            var _1355 = _215.slice(1);
            return _1355;
        };
        throw new Error("Failed pattern match");
    };
    var last = function (xs) {
        return xs[Data_Array.length(xs) - 1];
    };
    var init = Prelude["<<<"](Prelude.semigroupoidArr)(Data_Maybe_Unsafe.fromJust)(Data_Array.init);
    var head = function (_214) {
        if (_214.length >= 1) {
            var _1358 = _214.slice(1);
            return _214[0];
        };
        throw new Error("Failed pattern match");
    };
    return {
        init: init, 
        last: last, 
        tail: tail, 
        head: head
    };
})();
var PS = PS || {};
PS.Data_Monoid = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Array = PS.Data_Array;
    var Data_Maybe = PS.Data_Maybe;
    var Monoid = function (__superclass_Prelude$dotSemigroup_0, mempty) {
        this["__superclass_Prelude.Semigroup_0"] = __superclass_Prelude$dotSemigroup_0;
        this.mempty = mempty;
    };
    var monoidUnit = new Monoid(function () {
        return Prelude.semigroupUnit;
    }, Prelude.unit);
    var monoidString = new Monoid(function () {
        return Prelude.semigroupString;
    }, "");
    var monoidMaybe = function (__dict_Semigroup_106) {
        return new Monoid(function () {
            return Data_Maybe.semigroupMaybe(__dict_Semigroup_106);
        }, Data_Maybe.Nothing.value);
    };
    var monoidArray = new Monoid(function () {
        return Data_Array.semigroupArray;
    }, [  ]);
    var mempty = function (dict) {
        return dict.mempty;
    };
    var monoidArr = function (__dict_Monoid_107) {
        return new Monoid(function () {
            return Prelude.semigroupArr(__dict_Monoid_107["__superclass_Prelude.Semigroup_0"]());
        }, Prelude["const"](mempty(__dict_Monoid_107)));
    };
    return {
        Monoid: Monoid, 
        mempty: mempty, 
        monoidString: monoidString, 
        monoidArray: monoidArray, 
        monoidUnit: monoidUnit, 
        monoidArr: monoidArr, 
        monoidMaybe: monoidMaybe
    };
})();
var PS = PS || {};
PS.Data_Monoid_All = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var All = function (x) {
        return x;
    };
    var showAll = new Prelude.Show(function (_221) {
        return "All (" + (Prelude.show(Prelude.showBoolean)(_221) + ")");
    });
    var semigroupAll = new Prelude.Semigroup(function (_222) {
        return function (_223) {
            return _222 && _223;
        };
    });
    var runAll = function (_216) {
        return _216;
    };
    var monoidAll = new Data_Monoid.Monoid(function () {
        return semigroupAll;
    }, true);
    var eqAll = new Prelude.Eq(function (_219) {
        return function (_220) {
            return _219 !== _220;
        };
    }, function (_217) {
        return function (_218) {
            return _217 === _218;
        };
    });
    return {
        All: All, 
        runAll: runAll, 
        eqAll: eqAll, 
        showAll: showAll, 
        semigroupAll: semigroupAll, 
        monoidAll: monoidAll
    };
})();
var PS = PS || {};
PS.Data_Monoid_Any = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var Any = function (x) {
        return x;
    };
    var showAny = new Prelude.Show(function (_229) {
        return "Any (" + (Prelude.show(Prelude.showBoolean)(_229) + ")");
    });
    var semigroupAny = new Prelude.Semigroup(function (_230) {
        return function (_231) {
            return _230 || _231;
        };
    });
    var runAny = function (_224) {
        return _224;
    };
    var monoidAny = new Data_Monoid.Monoid(function () {
        return semigroupAny;
    }, false);
    var eqAny = new Prelude.Eq(function (_227) {
        return function (_228) {
            return _227 !== _228;
        };
    }, function (_225) {
        return function (_226) {
            return _225 === _226;
        };
    });
    return {
        Any: Any, 
        runAny: runAny, 
        eqAny: eqAny, 
        showAny: showAny, 
        semigroupAny: semigroupAny, 
        monoidAny: monoidAny
    };
})();
var PS = PS || {};
PS.Data_Monoid_Dual = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var Dual = function (x) {
        return x;
    };
    var showDual = function (__dict_Show_108) {
        return new Prelude.Show(function (_239) {
            return "Dual (" + (Prelude.show(__dict_Show_108)(_239) + ")");
        });
    };
    var semigroupDual = function (__dict_Semigroup_109) {
        return new Prelude.Semigroup(function (_240) {
            return function (_241) {
                return Prelude["<>"](__dict_Semigroup_109)(_241)(_240);
            };
        });
    };
    var runDual = function (_232) {
        return _232;
    };
    var monoidDual = function (__dict_Monoid_111) {
        return new Data_Monoid.Monoid(function () {
            return semigroupDual(__dict_Monoid_111["__superclass_Prelude.Semigroup_0"]());
        }, Data_Monoid.mempty(__dict_Monoid_111));
    };
    var eqDual = function (__dict_Eq_112) {
        return new Prelude.Eq(function (_235) {
            return function (_236) {
                return Prelude["/="](__dict_Eq_112)(_235)(_236);
            };
        }, function (_233) {
            return function (_234) {
                return Prelude["=="](__dict_Eq_112)(_233)(_234);
            };
        });
    };
    var ordDual = function (__dict_Ord_110) {
        return new Prelude.Ord(function () {
            return eqDual(__dict_Ord_110["__superclass_Prelude.Eq_0"]());
        }, function (_237) {
            return function (_238) {
                return Prelude.compare(__dict_Ord_110)(_237)(_238);
            };
        });
    };
    return {
        Dual: Dual, 
        runDual: runDual, 
        eqDual: eqDual, 
        ordDual: ordDual, 
        showDual: showDual, 
        semigroupDual: semigroupDual, 
        monoidDual: monoidDual
    };
})();
var PS = PS || {};
PS.Data_Monoid_Endo = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var Endo = function (x) {
        return x;
    };
    var semigroupEndo = new Prelude.Semigroup(function (_243) {
        return function (_244) {
            return Prelude["<<<"](Prelude.semigroupoidArr)(_243)(_244);
        };
    });
    var runEndo = function (_242) {
        return _242;
    };
    var monoidEndo = new Data_Monoid.Monoid(function () {
        return semigroupEndo;
    }, Prelude.id(Prelude.categoryArr));
    return {
        Endo: Endo, 
        runEndo: runEndo, 
        semigroupEndo: semigroupEndo, 
        monoidEndo: monoidEndo
    };
})();
var PS = PS || {};
PS.Data_Monoid_Product = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var Product = function (x) {
        return x;
    };
    var showProduct = new Prelude.Show(function (_252) {
        return "Product (" + (Prelude.show(Prelude.showNumber)(_252) + ")");
    });
    var semigroupProduct = new Prelude.Semigroup(function (_253) {
        return function (_254) {
            return _253 * _254;
        };
    });
    var runProduct = function (_245) {
        return _245;
    };
    var monoidProduct = new Data_Monoid.Monoid(function () {
        return semigroupProduct;
    }, 1);
    var eqProduct = new Prelude.Eq(function (_248) {
        return function (_249) {
            return _248 !== _249;
        };
    }, function (_246) {
        return function (_247) {
            return _246 === _247;
        };
    });
    var ordProduct = new Prelude.Ord(function () {
        return eqProduct;
    }, function (_250) {
        return function (_251) {
            return Prelude.compare(Prelude.ordNumber)(_250)(_251);
        };
    });
    return {
        Product: Product, 
        runProduct: runProduct, 
        eqProduct: eqProduct, 
        ordProduct: ordProduct, 
        showProduct: showProduct, 
        semigroupProduct: semigroupProduct, 
        monoidProduct: monoidProduct
    };
})();
var PS = PS || {};
PS.Data_Monoid_Sum = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var Sum = function (x) {
        return x;
    };
    var showSum = new Prelude.Show(function (_262) {
        return "Sum (" + (Prelude.show(Prelude.showNumber)(_262) + ")");
    });
    var semigroupSum = new Prelude.Semigroup(function (_263) {
        return function (_264) {
            return _263 + _264;
        };
    });
    var runSum = function (_255) {
        return _255;
    };
    var monoidSum = new Data_Monoid.Monoid(function () {
        return semigroupSum;
    }, 0);
    var eqSum = new Prelude.Eq(function (_258) {
        return function (_259) {
            return _258 !== _259;
        };
    }, function (_256) {
        return function (_257) {
            return _256 === _257;
        };
    });
    var ordSum = new Prelude.Ord(function () {
        return eqSum;
    }, function (_260) {
        return function (_261) {
            return Prelude.compare(Prelude.ordNumber)(_260)(_261);
        };
    });
    return {
        Sum: Sum, 
        runSum: runSum, 
        eqSum: eqSum, 
        ordSum: ordSum, 
        showSum: showSum, 
        semigroupSum: semigroupSum, 
        monoidSum: monoidSum
    };
})();
var PS = PS || {};
PS.Data_Tuple = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var Control_Lazy = PS.Control_Lazy;
    var Data_Array = PS.Data_Array;
    var Control_Comonad = PS.Control_Comonad;
    var Control_Extend = PS.Control_Extend;
    var Tuple = (function () {
        function Tuple(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        };
        Tuple.create = function (value0) {
            return function (value1) {
                return new Tuple(value0, value1);
            };
        };
        return Tuple;
    })();
    var zip = Data_Array.zipWith(Tuple.create);
    var unzip = function (_269) {
        if (_269.length >= 1) {
            var _1415 = _269.slice(1);
            var _1409 = unzip(_1415);
            return new Tuple(Prelude[":"]((_269[0]).value0)(_1409.value0), Prelude[":"]((_269[0]).value1)(_1409.value1));
        };
        if (_269.length === 0) {
            return new Tuple([  ], [  ]);
        };
        throw new Error("Failed pattern match");
    };
    var uncurry = function (_267) {
        return function (_268) {
            return _267(_268.value0)(_268.value1);
        };
    };
    var swap = function (_270) {
        return new Tuple(_270.value1, _270.value0);
    };
    var snd = function (_266) {
        return _266.value1;
    };
    var showTuple = function (__dict_Show_113) {
        return function (__dict_Show_114) {
            return new Prelude.Show(function (_271) {
                return "Tuple (" + (Prelude.show(__dict_Show_113)(_271.value0) + (") (" + (Prelude.show(__dict_Show_114)(_271.value1) + ")")));
            });
        };
    };
    var semigroupoidTuple = new Prelude.Semigroupoid(function (_276) {
        return function (_277) {
            return new Tuple(_277.value0, _276.value1);
        };
    });
    var semigroupTuple = function (__dict_Semigroup_115) {
        return function (__dict_Semigroup_116) {
            return new Prelude.Semigroup(function (_278) {
                return function (_279) {
                    return new Tuple(Prelude["<>"](__dict_Semigroup_115)(_278.value0)(_279.value0), Prelude["<>"](__dict_Semigroup_116)(_278.value1)(_279.value1));
                };
            });
        };
    };
    var monoidTuple = function (__dict_Monoid_119) {
        return function (__dict_Monoid_120) {
            return new Data_Monoid.Monoid(function () {
                return semigroupTuple(__dict_Monoid_119["__superclass_Prelude.Semigroup_0"]())(__dict_Monoid_120["__superclass_Prelude.Semigroup_0"]());
            }, new Tuple(Data_Monoid.mempty(__dict_Monoid_119), Data_Monoid.mempty(__dict_Monoid_120)));
        };
    };
    var functorTuple = new Prelude.Functor(function (_280) {
        return function (_281) {
            return new Tuple(_281.value0, _280(_281.value1));
        };
    });
    var fst = function (_265) {
        return _265.value0;
    };
    var lazyLazy1Tuple = function (__dict_Lazy1_122) {
        return function (__dict_Lazy1_123) {
            return new Control_Lazy.Lazy(function (f) {
                return new Tuple(Control_Lazy.defer1(__dict_Lazy1_122)(function (_) {
                    return fst(f(Prelude.unit));
                }), Control_Lazy.defer1(__dict_Lazy1_123)(function (_) {
                    return snd(f(Prelude.unit));
                }));
            });
        };
    };
    var lazyLazy2Tuple = function (__dict_Lazy2_124) {
        return function (__dict_Lazy2_125) {
            return new Control_Lazy.Lazy(function (f) {
                return new Tuple(Control_Lazy.defer2(__dict_Lazy2_124)(function (_) {
                    return fst(f(Prelude.unit));
                }), Control_Lazy.defer2(__dict_Lazy2_125)(function (_) {
                    return snd(f(Prelude.unit));
                }));
            });
        };
    };
    var lazyTuple = function (__dict_Lazy_126) {
        return function (__dict_Lazy_127) {
            return new Control_Lazy.Lazy(function (f) {
                return new Tuple(Control_Lazy.defer(__dict_Lazy_126)(function (_) {
                    return fst(f(Prelude.unit));
                }), Control_Lazy.defer(__dict_Lazy_127)(function (_) {
                    return snd(f(Prelude.unit));
                }));
            });
        };
    };
    var extendTuple = new Control_Extend.Extend(function (_286) {
        return function (_287) {
            return new Tuple(_287.value0, _286(_287));
        };
    }, function () {
        return functorTuple;
    });
    var eqTuple = function (__dict_Eq_128) {
        return function (__dict_Eq_129) {
            return new Prelude.Eq(function (t1) {
                return function (t2) {
                    return !Prelude["=="](eqTuple(__dict_Eq_128)(__dict_Eq_129))(t1)(t2);
                };
            }, function (_272) {
                return function (_273) {
                    return Prelude["=="](__dict_Eq_128)(_272.value0)(_273.value0) && Prelude["=="](__dict_Eq_129)(_272.value1)(_273.value1);
                };
            });
        };
    };
    var ordTuple = function (__dict_Ord_117) {
        return function (__dict_Ord_118) {
            return new Prelude.Ord(function () {
                return eqTuple(__dict_Ord_117["__superclass_Prelude.Eq_0"]())(__dict_Ord_118["__superclass_Prelude.Eq_0"]());
            }, function (_274) {
                return function (_275) {
                    var _1460 = Prelude.compare(__dict_Ord_117)(_274.value0)(_275.value0);
                    if (_1460 instanceof Prelude.EQ) {
                        return Prelude.compare(__dict_Ord_118)(_274.value1)(_275.value1);
                    };
                    return _1460;
                };
            });
        };
    };
    var curry = function (f) {
        return function (a) {
            return function (b) {
                return f(new Tuple(a, b));
            };
        };
    };
    var comonadTuple = new Control_Comonad.Comonad(function () {
        return extendTuple;
    }, snd);
    var applyTuple = function (__dict_Semigroup_131) {
        return new Prelude.Apply(function (_282) {
            return function (_283) {
                return new Tuple(Prelude["<>"](__dict_Semigroup_131)(_282.value0)(_283.value0), _282.value1(_283.value1));
            };
        }, function () {
            return functorTuple;
        });
    };
    var bindTuple = function (__dict_Semigroup_130) {
        return new Prelude.Bind(function (_284) {
            return function (_285) {
                var _1473 = _285(_284.value1);
                return new Tuple(Prelude["<>"](__dict_Semigroup_130)(_284.value0)(_1473.value0), _1473.value1);
            };
        }, function () {
            return applyTuple(__dict_Semigroup_130);
        });
    };
    var applicativeTuple = function (__dict_Monoid_132) {
        return new Prelude.Applicative(function () {
            return applyTuple(__dict_Monoid_132["__superclass_Prelude.Semigroup_0"]());
        }, Tuple.create(Data_Monoid.mempty(__dict_Monoid_132)));
    };
    var monadTuple = function (__dict_Monoid_121) {
        return new Prelude.Monad(function () {
            return applicativeTuple(__dict_Monoid_121);
        }, function () {
            return bindTuple(__dict_Monoid_121["__superclass_Prelude.Semigroup_0"]());
        });
    };
    return {
        Tuple: Tuple, 
        swap: swap, 
        unzip: unzip, 
        zip: zip, 
        uncurry: uncurry, 
        curry: curry, 
        snd: snd, 
        fst: fst, 
        showTuple: showTuple, 
        eqTuple: eqTuple, 
        ordTuple: ordTuple, 
        semigroupoidTuple: semigroupoidTuple, 
        semigroupTuple: semigroupTuple, 
        monoidTuple: monoidTuple, 
        functorTuple: functorTuple, 
        applyTuple: applyTuple, 
        applicativeTuple: applicativeTuple, 
        bindTuple: bindTuple, 
        monadTuple: monadTuple, 
        extendTuple: extendTuple, 
        comonadTuple: comonadTuple, 
        lazyTuple: lazyTuple, 
        lazyLazy1Tuple: lazyLazy1Tuple, 
        lazyLazy2Tuple: lazyLazy2Tuple
    };
})();
var PS = PS || {};
PS.Control_Comonad_Env_Trans = (function () {
    "use strict";
    var Control_Comonad = PS.Control_Comonad;
    var Prelude = PS.Prelude;
    var Control_Comonad_Trans = PS.Control_Comonad_Trans;
    var Control_Extend = PS.Control_Extend;
    var Data_Tuple = PS.Data_Tuple;
    var EnvT = function (x) {
        return x;
    };
    var withEnvT = function (_289) {
        return function (_290) {
            return EnvT(new Data_Tuple.Tuple(_289(_290.value0), _290.value1));
        };
    };
    var runEnvT = function (_288) {
        return _288;
    };
    var mapEnvT = function (_291) {
        return function (_292) {
            return EnvT(new Data_Tuple.Tuple(_292.value0, _291(_292.value1)));
        };
    };
    var functorEnvT = function (__dict_Functor_133) {
        return new Prelude.Functor(function (_293) {
            return function (_294) {
                return EnvT(new Data_Tuple.Tuple(_294.value0, Prelude["<$>"](__dict_Functor_133)(_293)(_294.value1)));
            };
        });
    };
    var extendEnvT = function (__dict_Extend_134) {
        return new Control_Extend.Extend(function (_295) {
            return function (_296) {
                return EnvT(new Data_Tuple.Tuple(_296.value0, Prelude["<$>"](__dict_Extend_134["__superclass_Prelude.Functor_0"]())(_295)(Control_Extend["<<="](__dict_Extend_134)(Prelude[">>>"](Prelude.semigroupoidArr)(Data_Tuple.Tuple.create(_296.value0))(EnvT))(_296.value1))));
            };
        }, function () {
            return functorEnvT(__dict_Extend_134["__superclass_Prelude.Functor_0"]());
        });
    };
    var comonadTransEnvT = new Control_Comonad_Trans.ComonadTrans(function (__dict_Comonad_135) {
        return function (_298) {
            return _298.value1;
        };
    });
    var comonadEnvT = function (__dict_Comonad_136) {
        return new Control_Comonad.Comonad(function () {
            return extendEnvT(__dict_Comonad_136["__superclass_Control.Extend.Extend_0"]());
        }, function (_297) {
            return Control_Comonad.extract(__dict_Comonad_136)(_297.value1);
        });
    };
    return {
        EnvT: EnvT, 
        mapEnvT: mapEnvT, 
        withEnvT: withEnvT, 
        runEnvT: runEnvT, 
        functorEnvT: functorEnvT, 
        extendEnvT: extendEnvT, 
        comonadEnvT: comonadEnvT, 
        comonadTransEnvT: comonadTransEnvT
    };
})();
var PS = PS || {};
PS.Control_Comonad_Store_Trans = (function () {
    "use strict";
    var Control_Comonad = PS.Control_Comonad;
    var Prelude = PS.Prelude;
    var Control_Extend = PS.Control_Extend;
    var Control_Comonad_Trans = PS.Control_Comonad_Trans;
    var Data_Tuple = PS.Data_Tuple;
    var StoreT = function (x) {
        return x;
    };
    var runStoreT = function (_299) {
        return _299;
    };
    var functorStoreT = function (__dict_Functor_137) {
        return new Prelude.Functor(function (_300) {
            return function (_301) {
                return StoreT(new Data_Tuple.Tuple(Prelude["<$>"](__dict_Functor_137)(function (h) {
                    return Prelude[">>>"](Prelude.semigroupoidArr)(h)(_300);
                })(_301.value0), _301.value1));
            };
        });
    };
    var extendStoreT = function (__dict_Extend_138) {
        return new Control_Extend.Extend(function (_302) {
            return function (_303) {
                return StoreT(new Data_Tuple.Tuple(Control_Extend["<<="](__dict_Extend_138)(function (w$prime) {
                    return function (s$prime) {
                        return _302(StoreT(new Data_Tuple.Tuple(w$prime, s$prime)));
                    };
                })(_303.value0), _303.value1));
            };
        }, function () {
            return functorStoreT(__dict_Extend_138["__superclass_Prelude.Functor_0"]());
        });
    };
    var comonadTransStoreT = new Control_Comonad_Trans.ComonadTrans(function (__dict_Comonad_139) {
        return function (_305) {
            return Prelude["<$>"]((__dict_Comonad_139["__superclass_Control.Extend.Extend_0"]())["__superclass_Prelude.Functor_0"]())(function (f) {
                return f(_305.value1);
            })(_305.value0);
        };
    });
    var comonadStoreT = function (__dict_Comonad_140) {
        return new Control_Comonad.Comonad(function () {
            return extendStoreT(__dict_Comonad_140["__superclass_Control.Extend.Extend_0"]());
        }, function (_304) {
            return Control_Comonad.extract(__dict_Comonad_140)(_304.value0)(_304.value1);
        });
    };
    return {
        StoreT: StoreT, 
        runStoreT: runStoreT, 
        functorStoreT: functorStoreT, 
        extendStoreT: extendStoreT, 
        comonadStoreT: comonadStoreT, 
        comonadTransStoreT: comonadTransStoreT
    };
})();
var PS = PS || {};
PS.Control_Comonad_Store_Class = (function () {
    "use strict";
    var Control_Comonad = PS.Control_Comonad;
    var Prelude = PS.Prelude;
    var Control_Extend = PS.Control_Extend;
    var Control_Comonad_Store_Trans = PS.Control_Comonad_Store_Trans;
    var Data_Tuple = PS.Data_Tuple;
    var ComonadStore = function (__superclass_Control$dotComonad$dotComonad_0, peek, pos) {
        this["__superclass_Control.Comonad.Comonad_0"] = __superclass_Control$dotComonad$dotComonad_0;
        this.peek = peek;
        this.pos = pos;
    };
    var pos = function (dict) {
        return dict.pos;
    };
    var peek = function (dict) {
        return dict.peek;
    };
    var peeks = function (__dict_ComonadStore_141) {
        return function (f) {
            return function (x) {
                return peek(__dict_ComonadStore_141)(f(pos(__dict_ComonadStore_141)(x)))(x);
            };
        };
    };
    var seeks = function (__dict_ComonadStore_142) {
        return function (__dict_Extend_143) {
            return function (f) {
                return function (x) {
                    return peeks(__dict_ComonadStore_142)(f)(Control_Extend.duplicate(__dict_Extend_143)(x));
                };
            };
        };
    };
    var seek = function (__dict_ComonadStore_144) {
        return function (__dict_Extend_145) {
            return function (s) {
                return function (x) {
                    return peek(__dict_ComonadStore_144)(s)(Control_Extend.duplicate(__dict_Extend_145)(x));
                };
            };
        };
    };
    var experiment = function (__dict_ComonadStore_146) {
        return function (__dict_Functor_147) {
            return function (f) {
                return function (x) {
                    return Prelude["<$>"](__dict_Functor_147)(Prelude.flip(peek(__dict_ComonadStore_146))(x))(f(pos(__dict_ComonadStore_146)(x)));
                };
            };
        };
    };
    var comonadStoreStoreT = function (__dict_Comonad_148) {
        return new ComonadStore(function () {
            return Control_Comonad_Store_Trans.comonadStoreT(__dict_Comonad_148);
        }, function (_307) {
            return function (_308) {
                return Control_Comonad.extract(__dict_Comonad_148)(_308.value0)(_307);
            };
        }, function (_306) {
            return _306.value1;
        });
    };
    return {
        ComonadStore: ComonadStore, 
        seeks: seeks, 
        seek: seek, 
        peeks: peeks, 
        experiment: experiment, 
        peek: peek, 
        pos: pos, 
        comonadStoreStoreT: comonadStoreStoreT
    };
})();
var PS = PS || {};
PS.Control_Comonad_Traced_Trans = (function () {
    "use strict";
    var Control_Comonad = PS.Control_Comonad;
    var Data_Monoid = PS.Data_Monoid;
    var Prelude = PS.Prelude;
    var Control_Comonad_Trans = PS.Control_Comonad_Trans;
    var Control_Extend = PS.Control_Extend;
    var Data_Tuple = PS.Data_Tuple;
    var TracedT = function (x) {
        return x;
    };
    var runTracedT = function (_309) {
        return _309;
    };
    var functorTracedT = function (__dict_Functor_149) {
        return new Prelude.Functor(function (_310) {
            return function (_311) {
                return Prelude["<$>"](__dict_Functor_149)(function (g) {
                    return function (t) {
                        return _310(g(t));
                    };
                })(_311);
            };
        });
    };
    var extendTracedT = function (__dict_Extend_150) {
        return function (__dict_Semigroup_151) {
            return new Control_Extend.Extend(function (_312) {
                return function (_313) {
                    return Control_Extend["<<="](__dict_Extend_150)(function (w_1) {
                        return function (t) {
                            return _312(Prelude["<$>"](__dict_Extend_150["__superclass_Prelude.Functor_0"]())(function (h) {
                                return function (t$prime) {
                                    return h(Prelude["<>"](__dict_Semigroup_151)(t)(t$prime));
                                };
                            })(w_1));
                        };
                    })(_313);
                };
            }, function () {
                return functorTracedT(__dict_Extend_150["__superclass_Prelude.Functor_0"]());
            });
        };
    };
    var comonadTransTracedT = function (__dict_Monoid_152) {
        return new Control_Comonad_Trans.ComonadTrans(function (__dict_Comonad_153) {
            return function (_315) {
                return Prelude["<$>"]((__dict_Comonad_153["__superclass_Control.Extend.Extend_0"]())["__superclass_Prelude.Functor_0"]())(function (f) {
                    return f(Data_Monoid.mempty(__dict_Monoid_152));
                })(_315);
            };
        });
    };
    var comonadTracedT = function (__dict_Comonad_154) {
        return function (__dict_Monoid_155) {
            return new Control_Comonad.Comonad(function () {
                return extendTracedT(__dict_Comonad_154["__superclass_Control.Extend.Extend_0"]())(__dict_Monoid_155["__superclass_Prelude.Semigroup_0"]());
            }, function (_314) {
                return Control_Comonad.extract(__dict_Comonad_154)(_314)(Data_Monoid.mempty(__dict_Monoid_155));
            });
        };
    };
    return {
        TracedT: TracedT, 
        runTracedT: runTracedT, 
        functorTracedT: functorTracedT, 
        extendTracedT: extendTracedT, 
        comonadTracedT: comonadTracedT, 
        comonadTransTracedT: comonadTransTracedT
    };
})();
var PS = PS || {};
PS.Control_Comonad_Traced_Class = (function () {
    "use strict";
    var Control_Comonad = PS.Control_Comonad;
    var Control_Comonad_Traced_Trans = PS.Control_Comonad_Traced_Trans;
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var Data_Tuple = PS.Data_Tuple;
    var ComonadTraced = function (__superclass_Control$dotComonad$dotComonad_0, track) {
        this["__superclass_Control.Comonad.Comonad_0"] = __superclass_Control$dotComonad$dotComonad_0;
        this.track = track;
    };
    var track = function (dict) {
        return dict.track;
    };
    var tracks = function (__dict_Comonad_156) {
        return function (__dict_ComonadTraced_157) {
            return function (f) {
                return function (w) {
                    return track(__dict_ComonadTraced_157)(f(Control_Comonad.extract(__dict_Comonad_156)(w)))(w);
                };
            };
        };
    };
    var listens = function (__dict_Functor_158) {
        return function (f) {
            return function (tr) {
                return Prelude["<$>"](__dict_Functor_158)(function (g) {
                    return function (t) {
                        return new Data_Tuple.Tuple(g(t), f(t));
                    };
                })(Control_Comonad_Traced_Trans.runTracedT(tr));
            };
        };
    };
    var listen = function (__dict_Functor_159) {
        return function (tr) {
            return Prelude["<$>"](__dict_Functor_159)(function (f) {
                return function (t) {
                    return new Data_Tuple.Tuple(f(t), t);
                };
            })(Control_Comonad_Traced_Trans.runTracedT(tr));
        };
    };
    var comonadTracedTracedT = function (__dict_Comonad_160) {
        return function (__dict_Monoid_161) {
            return new ComonadTraced(function () {
                return Control_Comonad_Traced_Trans.comonadTracedT(__dict_Comonad_160)(__dict_Monoid_161);
            }, function (t) {
                return function (tr) {
                    return Control_Comonad.extract(__dict_Comonad_160)(Control_Comonad_Traced_Trans.runTracedT(tr))(t);
                };
            });
        };
    };
    var censor = function (__dict_Functor_162) {
        return function (f) {
            return function (tr) {
                return Prelude["<$>"](__dict_Functor_162)(Prelude[">>>"](Prelude.semigroupoidArr)(f))(Control_Comonad_Traced_Trans.runTracedT(tr));
            };
        };
    };
    return {
        ComonadTraced: ComonadTraced, 
        censor: censor, 
        listens: listens, 
        listen: listen, 
        tracks: tracks, 
        track: track, 
        comonadTracedTracedT: comonadTracedTracedT
    };
})();
var PS = PS || {};
PS.Control_Monad_Error_Trans = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Apply = PS.Control_Apply;
    var Control_Monad_Error = PS.Control_Monad_Error;
    var Control_Alt = PS.Control_Alt;
    var Control_Alternative = PS.Control_Alternative;
    var Control_Plus = PS.Control_Plus;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var Control_MonadPlus = PS.Control_MonadPlus;
    var Data_Either = PS.Data_Either;
    var Data_Monoid = PS.Data_Monoid;
    var Data_Tuple = PS.Data_Tuple;
    var ErrorT = function (x) {
        return x;
    };
    var runErrorT = function (_316) {
        return _316;
    };
    var monadTransErrorT = function (__dict_Error_165) {
        return new Control_Monad_Trans.MonadTrans(function (__dict_Monad_166) {
            return function (m) {
                return ErrorT(Prelude[">>="](__dict_Monad_166["__superclass_Prelude.Bind_1"]())(m)(function (_9) {
                    return Prelude["return"](__dict_Monad_166)(new Data_Either.Right(_9));
                }));
            };
        });
    };
    var mapErrorT = function (f) {
        return function (m) {
            return ErrorT(f(runErrorT(m)));
        };
    };
    var liftPassError = function (__dict_Monad_171) {
        return function (pass) {
            return mapErrorT(function (m) {
                return pass(Prelude[">>="](__dict_Monad_171["__superclass_Prelude.Bind_1"]())(m)(function (_11) {
                    return Prelude["return"](__dict_Monad_171)((function () {
                        if (_11 instanceof Data_Either.Left) {
                            return new Data_Tuple.Tuple(new Data_Either.Left(_11.value0), Prelude.id(Prelude.categoryArr));
                        };
                        if (_11 instanceof Data_Either.Right) {
                            return new Data_Tuple.Tuple(new Data_Either.Right(_11.value0.value0), _11.value0.value1);
                        };
                        throw new Error("Failed pattern match");
                    })());
                }));
            });
        };
    };
    var liftListenError = function (__dict_Monad_172) {
        return function (listen) {
            return mapErrorT(function (m) {
                return Prelude[">>="](__dict_Monad_172["__superclass_Prelude.Bind_1"]())(listen(m))(function (_10) {
                    return Prelude["return"](__dict_Monad_172)(Prelude["<$>"](Data_Either.functorEither)(function (r) {
                        return new Data_Tuple.Tuple(r, _10.value1);
                    })(_10.value0));
                });
            });
        };
    };
    var liftCallCCError = function (callCC) {
        return function (f) {
            return ErrorT(callCC(function (c) {
                return runErrorT(f(function (a) {
                    return ErrorT(c(new Data_Either.Right(a)));
                }));
            }));
        };
    };
    var functorErrorT = function (__dict_Functor_173) {
        return new Prelude.Functor(function (f) {
            return Prelude["<<<"](Prelude.semigroupoidArr)(ErrorT)(Prelude["<<<"](Prelude.semigroupoidArr)(Prelude["<$>"](__dict_Functor_173)(Prelude["<$>"](Data_Either.functorEither)(f)))(runErrorT));
        });
    };
    var applyErrorT = function (__dict_Apply_176) {
        return new Prelude.Apply(function (_317) {
            return function (_318) {
                return ErrorT(Prelude["<*>"](__dict_Apply_176)(Prelude["<$>"](__dict_Apply_176["__superclass_Prelude.Functor_0"]())(Control_Apply.lift2(Data_Either.applyEither)(Prelude["$"]))(_317))(_318));
            };
        }, function () {
            return functorErrorT(__dict_Apply_176["__superclass_Prelude.Functor_0"]());
        });
    };
    var bindErrorT = function (__dict_Monad_174) {
        return function (__dict_Error_175) {
            return new Prelude.Bind(function (m) {
                return function (f) {
                    return ErrorT(Prelude[">>="](__dict_Monad_174["__superclass_Prelude.Bind_1"]())(runErrorT(m))(function (_8) {
                        if (_8 instanceof Data_Either.Left) {
                            return Prelude["return"](__dict_Monad_174)(new Data_Either.Left(_8.value0));
                        };
                        if (_8 instanceof Data_Either.Right) {
                            return runErrorT(f(_8.value0));
                        };
                        throw new Error("Failed pattern match");
                    }));
                };
            }, function () {
                return applyErrorT((__dict_Monad_174["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]());
            });
        };
    };
    var applicativeErrorT = function (__dict_Applicative_177) {
        return new Prelude.Applicative(function () {
            return applyErrorT(__dict_Applicative_177["__superclass_Prelude.Apply_0"]());
        }, function (a) {
            return ErrorT(Prelude.pure(__dict_Applicative_177)(new Data_Either.Right(a)));
        });
    };
    var monadErrorT = function (__dict_Monad_169) {
        return function (__dict_Error_170) {
            return new Prelude.Monad(function () {
                return applicativeErrorT(__dict_Monad_169["__superclass_Prelude.Applicative_0"]());
            }, function () {
                return bindErrorT(__dict_Monad_169)(__dict_Error_170);
            });
        };
    };
    var altErrorT = function (__dict_Monad_180) {
        return function (__dict_Error_181) {
            return new Control_Alt.Alt(function (x) {
                return function (y) {
                    return ErrorT(Prelude[">>="](__dict_Monad_180["__superclass_Prelude.Bind_1"]())(runErrorT(x))(function (e) {
                        if (e instanceof Data_Either.Left) {
                            return runErrorT(y);
                        };
                        return Prelude["return"](__dict_Monad_180)(e);
                    }));
                };
            }, function () {
                return functorErrorT(((__dict_Monad_180["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]());
            });
        };
    };
    var plusErrorT = function (__dict_Monad_163) {
        return function (__dict_Error_164) {
            return new Control_Plus.Plus(function () {
                return altErrorT(__dict_Monad_163)(__dict_Error_164);
            }, Prelude["return"](__dict_Monad_163)(Data_Either.Left.create(Control_Monad_Error.strMsg(__dict_Error_164)("No alternative"))));
        };
    };
    var alternativeErrorT = function (__dict_Monad_178) {
        return function (__dict_Error_179) {
            return new Control_Alternative.Alternative(function () {
                return plusErrorT(__dict_Monad_178)(__dict_Error_179);
            }, function () {
                return applicativeErrorT(__dict_Monad_178["__superclass_Prelude.Applicative_0"]());
            });
        };
    };
    var monadPlusErrorT = function (__dict_Monad_167) {
        return function (__dict_Error_168) {
            return new Control_MonadPlus.MonadPlus(function () {
                return alternativeErrorT(__dict_Monad_167)(__dict_Error_168);
            }, function () {
                return monadErrorT(__dict_Monad_167)(__dict_Error_168);
            });
        };
    };
    return {
        ErrorT: ErrorT, 
        liftCallCCError: liftCallCCError, 
        liftPassError: liftPassError, 
        liftListenError: liftListenError, 
        mapErrorT: mapErrorT, 
        runErrorT: runErrorT, 
        functorErrorT: functorErrorT, 
        applyErrorT: applyErrorT, 
        applicativeErrorT: applicativeErrorT, 
        altErrorT: altErrorT, 
        plusErrorT: plusErrorT, 
        alternativeErrorT: alternativeErrorT, 
        bindErrorT: bindErrorT, 
        monadErrorT: monadErrorT, 
        monadPlusErrorT: monadPlusErrorT, 
        monadTransErrorT: monadTransErrorT
    };
})();
var PS = PS || {};
PS.Test_Unit = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Eff_Ref = PS.Control_Monad_Eff_Ref;
    var Control_Monad_Cont_Trans = PS.Control_Monad_Cont_Trans;
    var Control_Monad_Error_Trans = PS.Control_Monad_Error_Trans;
    var Control_Timer = PS.Control_Timer;
    var Test_Unit_Console = PS.Test_Unit_Console;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Data_Either = PS.Data_Either;
    
  function exit(rv) {
    return function() {
      process.exit(rv);
    }
  };
    var testC = function (c) {
        return Control_Monad_Error_Trans.ErrorT(function (cb) {
            return Control_Monad_Cont_Trans.runContT(c)(cb);
        });
    };
    var testFn = function (f) {
        return testC(f);
    };
    var success = new Data_Either.Right(Prelude.unit);
    var test = function (l) {
        return function (t) {
            var run = function (cb) {
                var handler = function (_323) {
                    if (_323 instanceof Data_Either.Right) {
                        return function __do() {
                            Test_Unit_Console.restorePos();
                            Test_Unit_Console.eraseLine();
                            Test_Unit_Console.printPass("\u2713 Passed: ")();
                            Test_Unit_Console.printLabel(l)();
                            Test_Unit_Console.print("\n")();
                            return cb(success)();
                        };
                    };
                    if (_323 instanceof Data_Either.Left) {
                        return function __do() {
                            Test_Unit_Console.restorePos();
                            Test_Unit_Console.eraseLine();
                            Test_Unit_Console.printFail("\u2620 Failed: ")();
                            Test_Unit_Console.printLabel(l)();
                            Test_Unit_Console.print(" because ")();
                            Test_Unit_Console.printFail(_323.value0)();
                            Test_Unit_Console.print("\n")();
                            return cb(_323)();
                        };
                    };
                    throw new Error("Failed pattern match");
                };
                return function __do() {
                    Test_Unit_Console.savePos();
                    Test_Unit_Console.print("\u2192 Running: ")();
                    Test_Unit_Console.printLabel(l)();
                    return Control_Monad_Cont_Trans.runContT(Control_Monad_Error_Trans.runErrorT(t))(handler)();
                };
            };
            return Control_Monad_Error_Trans.ErrorT(run);
        };
    };
    var runTest = function (t) {
        var handler = function (_324) {
            if (_324 instanceof Data_Either.Left) {
                return exit(1);
            };
            return exit(0);
        };
        return Control_Monad_Cont_Trans.runContT(Control_Monad_Error_Trans.runErrorT(t))(handler);
    };
    var pickFirst = function (t1) {
        return function (t2) {
            return Control_Monad_Error_Trans.ErrorT(Control_Monad_Cont_Trans.ContT(function (cb) {
                return function __do() {
                    var _13 = Control_Monad_Eff_Ref.newRef(false)();
                    return (function () {
                        var $$yield = function (t) {
                            return Control_Monad_Cont_Trans.runContT(Control_Monad_Error_Trans.runErrorT(t))(function (res) {
                                return function __do() {
                                    var _12 = Control_Monad_Eff_Ref.readRef(_13)();
                                    Control_Monad_Eff_Ref.writeRef(_13)(true)();
                                    if (_12) {
                                        return Prelude.unit;
                                    };
                                    if (!_12) {
                                        return cb(res)();
                                    };
                                    throw new Error("Failed pattern match");
                                };
                            });
                        };
                        return function __do() {
                            $$yield(t1)();
                            return $$yield(t2)();
                        };
                    })()();
                };
            }));
        };
    };
    var failure = Data_Either.Left.create;
    var timeout = function (time) {
        return function (test_1) {
            return pickFirst(test_1)(Control_Monad_Error_Trans.ErrorT(function (cb) {
                return function __do() {
                    Control_Timer.timeout(time)(cb(failure("test timed out after " + (Prelude.show(Prelude.showNumber)(time) + "ms"))))();
                    return Prelude.unit;
                };
            }));
        };
    };
    var assertFalse = function (_321) {
        return function (_322) {
            if (!_322) {
                return Control_Monad_Error_Trans.ErrorT(function (cb) {
                    return cb(success);
                });
            };
            if (_322) {
                return Control_Monad_Error_Trans.ErrorT(function (cb) {
                    return cb(failure(_321));
                });
            };
            throw new Error("Failed pattern match");
        };
    };
    var assertC = function (reason) {
        return function (c) {
            return Control_Monad_Error_Trans.ErrorT(function (cb) {
                return Control_Monad_Cont_Trans.runContT(c)(function (res) {
                    if (res) {
                        return cb(new Data_Either.Right(Prelude.unit));
                    };
                    if (!res) {
                        return cb(new Data_Either.Left(reason));
                    };
                    throw new Error("Failed pattern match");
                });
            });
        };
    };
    var assertFn = function (reason) {
        return function (f) {
            return assertC(reason)(f);
        };
    };
    var assert = function (_319) {
        return function (_320) {
            if (_320) {
                return Control_Monad_Error_Trans.ErrorT(function (cb) {
                    return cb(success);
                });
            };
            if (!_320) {
                return Control_Monad_Error_Trans.ErrorT(function (cb) {
                    return cb(failure(_319));
                });
            };
            throw new Error("Failed pattern match");
        };
    };
    return {
        runTest: runTest, 
        test: test, 
        assertFn: assertFn, 
        assertC: assertC, 
        testFn: testFn, 
        testC: testC, 
        assertFalse: assertFalse, 
        assert: assert, 
        timeout: timeout, 
        pickFirst: pickFirst, 
        failure: failure, 
        success: success
    };
})();
var PS = PS || {};
PS.Control_Monad_Maybe_Trans = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad = PS.Control_Monad;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var Data_Either = PS.Data_Either;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Tuple = PS.Data_Tuple;
    var MaybeT = function (x) {
        return x;
    };
    var runMaybeT = function (_325) {
        return _325;
    };
    var monadTransMaybeT = new Control_Monad_Trans.MonadTrans(function (__dict_Monad_182) {
        return Prelude["<<<"](Prelude.semigroupoidArr)(MaybeT)(Prelude.liftM1(__dict_Monad_182)(Data_Maybe.Just.create));
    });
    var mapMaybeT = function (f) {
        return Prelude["<<<"](Prelude.semigroupoidArr)(MaybeT)(Prelude["<<<"](Prelude.semigroupoidArr)(f)(runMaybeT));
    };
    var liftPassMaybe = function (__dict_Monad_184) {
        return function (pass) {
            return mapMaybeT(function (m) {
                return pass(Prelude[">>="](__dict_Monad_184["__superclass_Prelude.Bind_1"]())(m)(function (_16) {
                    return Prelude["return"](__dict_Monad_184)((function () {
                        if (_16 instanceof Data_Maybe.Nothing) {
                            return new Data_Tuple.Tuple(Data_Maybe.Nothing.value, Prelude.id(Prelude.categoryArr));
                        };
                        if (_16 instanceof Data_Maybe.Just) {
                            return new Data_Tuple.Tuple(new Data_Maybe.Just(_16.value0.value0), _16.value0.value1);
                        };
                        throw new Error("Failed pattern match");
                    })());
                }));
            });
        };
    };
    var liftListenMaybe = function (__dict_Monad_185) {
        return function (listen) {
            return mapMaybeT(function (m) {
                return Prelude[">>="](__dict_Monad_185["__superclass_Prelude.Bind_1"]())(listen(m))(function (_15) {
                    return Prelude["return"](__dict_Monad_185)(Prelude["<$>"](Data_Maybe.functorMaybe)(function (r) {
                        return new Data_Tuple.Tuple(r, _15.value1);
                    })(_15.value0));
                });
            });
        };
    };
    var liftCatchMaybe = function ($$catch) {
        return function (m) {
            return function (h) {
                return MaybeT($$catch(runMaybeT(m))(Prelude["<<<"](Prelude.semigroupoidArr)(runMaybeT)(h)));
            };
        };
    };
    var liftCallCCMaybe = function (callCC) {
        return function (f) {
            return MaybeT(callCC(function (c) {
                return runMaybeT(f(function (a) {
                    return MaybeT(c(new Data_Maybe.Just(a)));
                }));
            }));
        };
    };
    var monadMaybeT = function (__dict_Monad_183) {
        return new Prelude.Monad(function () {
            return applicativeMaybeT(__dict_Monad_183);
        }, function () {
            return bindMaybeT(__dict_Monad_183);
        });
    };
    var functorMaybeT = function (__dict_Monad_186) {
        return new Prelude.Functor(Prelude.liftA1(applicativeMaybeT(__dict_Monad_186)));
    };
    var bindMaybeT = function (__dict_Monad_187) {
        return new Prelude.Bind(function (x) {
            return function (f) {
                return MaybeT(Prelude[">>="](__dict_Monad_187["__superclass_Prelude.Bind_1"]())(runMaybeT(x))(function (_14) {
                    if (_14 instanceof Data_Maybe.Nothing) {
                        return Prelude["return"](__dict_Monad_187)(Data_Maybe.Nothing.value);
                    };
                    if (_14 instanceof Data_Maybe.Just) {
                        return runMaybeT(f(_14.value0));
                    };
                    throw new Error("Failed pattern match");
                }));
            };
        }, function () {
            return applyMaybeT(__dict_Monad_187);
        });
    };
    var applyMaybeT = function (__dict_Monad_188) {
        return new Prelude.Apply(Prelude.ap(monadMaybeT(__dict_Monad_188)), function () {
            return functorMaybeT(__dict_Monad_188);
        });
    };
    var applicativeMaybeT = function (__dict_Monad_189) {
        return new Prelude.Applicative(function () {
            return applyMaybeT(__dict_Monad_189);
        }, Prelude["<<<"](Prelude.semigroupoidArr)(MaybeT)(Prelude["<<<"](Prelude.semigroupoidArr)(Prelude.pure(__dict_Monad_189["__superclass_Prelude.Applicative_0"]()))(Data_Maybe.Just.create)));
    };
    return {
        MaybeT: MaybeT, 
        liftCallCCMaybe: liftCallCCMaybe, 
        liftPassMaybe: liftPassMaybe, 
        liftListenMaybe: liftListenMaybe, 
        liftCatchMaybe: liftCatchMaybe, 
        mapMaybeT: mapMaybeT, 
        runMaybeT: runMaybeT, 
        functorMaybeT: functorMaybeT, 
        applyMaybeT: applyMaybeT, 
        applicativeMaybeT: applicativeMaybeT, 
        bindMaybeT: bindMaybeT, 
        monadMaybeT: monadMaybeT, 
        monadTransMaybeT: monadTransMaybeT
    };
})();
var PS = PS || {};
PS.Control_Monad_RWS_Trans = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Monoid = PS.Data_Monoid;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var RWST = function (x) {
        return x;
    };
    var runRWST = function (_328) {
        return _328;
    };
    var withRWST = function (f) {
        return function (m) {
            return function (r) {
                return function (s) {
                    return Data_Tuple.uncurry(runRWST(m))(f(r)(s));
                };
            };
        };
    };
    var mkSee = function (__dict_Monoid_192) {
        return function (s) {
            return function (a) {
                return function (w) {
                    return {
                        state: s, 
                        result: a, 
                        log: w
                    };
                };
            };
        };
    };
    var monadTransRWST = function (__dict_Monoid_193) {
        return new Control_Monad_Trans.MonadTrans(function (__dict_Monad_194) {
            return function (m) {
                return function (_) {
                    return function (s) {
                        return Prelude[">>="](__dict_Monad_194["__superclass_Prelude.Bind_1"]())(m)(function (a) {
                            return Prelude["return"](__dict_Monad_194)(mkSee(__dict_Monoid_193)(s)(a)(Data_Monoid.mempty(__dict_Monoid_193)));
                        });
                    };
                };
            };
        });
    };
    var mapRWST = function (f) {
        return function (m) {
            return function (r) {
                return function (s) {
                    return f(runRWST(m)(r)(s));
                };
            };
        };
    };
    var functorRWST = function (__dict_Functor_195) {
        return new Prelude.Functor(function (f) {
            return function (m) {
                return function (r) {
                    return function (s) {
                        return Prelude["<$>"](__dict_Functor_195)(function (see) {
                            var _1575 = {};
                            for (var _1576 in see) {
                                if (see.hasOwnProperty(_1576)) {
                                    _1575[_1576] = see[_1576];
                                };
                            };
                            _1575.result = f(see.result);
                            return _1575;
                        })(runRWST(m)(r)(s));
                    };
                };
            };
        });
    };
    var execRWST = function (__dict_Monad_196) {
        return function (m) {
            return function (r) {
                return function (s) {
                    return Prelude[">>="](__dict_Monad_196["__superclass_Prelude.Bind_1"]())(runRWST(m)(r)(s))(function (see) {
                        return Prelude["return"](__dict_Monad_196)(new Data_Tuple.Tuple(see.state, see.log));
                    });
                };
            };
        };
    };
    var evalRWST = function (__dict_Monad_197) {
        return function (m) {
            return function (r) {
                return function (s) {
                    return Prelude[">>="](__dict_Monad_197["__superclass_Prelude.Bind_1"]())(runRWST(m)(r)(s))(function (see) {
                        return Prelude["return"](__dict_Monad_197)(new Data_Tuple.Tuple(see.result, see.log));
                    });
                };
            };
        };
    };
    var applyRWST = function (__dict_Apply_200) {
        return function (__dict_Semigroup_201) {
            return new Prelude.Apply(function (f) {
                return function (m) {
                    return function (r) {
                        return function (s) {
                            return Prelude["<*>"](__dict_Apply_200)(Prelude["<$>"](__dict_Apply_200["__superclass_Prelude.Functor_0"]())(function (_326) {
                                return function (see) {
                                    var _1578 = {};
                                    for (var _1579 in see) {
                                        if (see.hasOwnProperty(_1579)) {
                                            _1578[_1579] = see[_1579];
                                        };
                                    };
                                    _1578.result = _326.result(see.result);
                                    _1578.log = Prelude["<>"](__dict_Semigroup_201)(_326.log)(see.log);
                                    return _1578;
                                };
                            })(runRWST(f)(r)(s)))(runRWST(m)(r)(s));
                        };
                    };
                };
            }, function () {
                return functorRWST(__dict_Apply_200["__superclass_Prelude.Functor_0"]());
            });
        };
    };
    var bindRWST = function (__dict_Bind_198) {
        return function (__dict_Semigroup_199) {
            return new Prelude.Bind(function (m) {
                return function (f) {
                    return function (r) {
                        return function (s) {
                            return Prelude[">>="](__dict_Bind_198)(runRWST(m)(r)(s))(function (_327) {
                                return Prelude["<$>"]((__dict_Bind_198["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(function (see$prime) {
                                    var _1583 = {};
                                    for (var _1584 in see$prime) {
                                        if (see$prime.hasOwnProperty(_1584)) {
                                            _1583[_1584] = see$prime[_1584];
                                        };
                                    };
                                    _1583.log = Prelude["<>"](__dict_Semigroup_199)(_327.log)(see$prime.log);
                                    return _1583;
                                })(runRWST(f(_327.result))(r)(_327.state));
                            });
                        };
                    };
                };
            }, function () {
                return applyRWST(__dict_Bind_198["__superclass_Prelude.Apply_0"]())(__dict_Semigroup_199);
            });
        };
    };
    var applicativeRWST = function (__dict_Applicative_202) {
        return function (__dict_Monoid_203) {
            return new Prelude.Applicative(function () {
                return applyRWST(__dict_Applicative_202["__superclass_Prelude.Apply_0"]())(__dict_Monoid_203["__superclass_Prelude.Semigroup_0"]());
            }, function (a) {
                return function (_) {
                    return function (s) {
                        return Prelude.pure(__dict_Applicative_202)(mkSee(__dict_Monoid_203)(s)(a)(Data_Monoid.mempty(__dict_Monoid_203)));
                    };
                };
            });
        };
    };
    var monadRWST = function (__dict_Monad_190) {
        return function (__dict_Monoid_191) {
            return new Prelude.Monad(function () {
                return applicativeRWST(__dict_Monad_190["__superclass_Prelude.Applicative_0"]())(__dict_Monoid_191);
            }, function () {
                return bindRWST(__dict_Monad_190["__superclass_Prelude.Bind_1"]())(__dict_Monoid_191["__superclass_Prelude.Semigroup_0"]());
            });
        };
    };
    return {
        RWST: RWST, 
        withRWST: withRWST, 
        mapRWST: mapRWST, 
        execRWST: execRWST, 
        evalRWST: evalRWST, 
        runRWST: runRWST, 
        mkSee: mkSee, 
        functorRWST: functorRWST, 
        applyRWST: applyRWST, 
        bindRWST: bindRWST, 
        applicativeRWST: applicativeRWST, 
        monadRWST: monadRWST, 
        monadTransRWST: monadTransRWST
    };
})();
var PS = PS || {};
PS.Control_Monad_State_Trans = (function () {
    "use strict";
    var Data_Tuple = PS.Data_Tuple;
    var Prelude = PS.Prelude;
    var Control_Plus = PS.Control_Plus;
    var Control_Alt = PS.Control_Alt;
    var Control_Alternative = PS.Control_Alternative;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var Control_MonadPlus = PS.Control_MonadPlus;
    var Control_Lazy = PS.Control_Lazy;
    var StateT = function (x) {
        return x;
    };
    var runStateT = function (_329) {
        return _329;
    };
    var withStateT = function (f) {
        return function (s) {
            return StateT(Prelude["<<<"](Prelude.semigroupoidArr)(runStateT(s))(f));
        };
    };
    var monadTransStateT = new Control_Monad_Trans.MonadTrans(function (__dict_Monad_206) {
        return function (m) {
            return function (s) {
                return Prelude[">>="](__dict_Monad_206["__superclass_Prelude.Bind_1"]())(m)(function (_18) {
                    return Prelude["return"](__dict_Monad_206)(new Data_Tuple.Tuple(_18, s));
                });
            };
        };
    });
    var mapStateT = function (f) {
        return function (m) {
            return StateT(Prelude["<<<"](Prelude.semigroupoidArr)(f)(runStateT(m)));
        };
    };
    var liftPassState = function (__dict_Monad_209) {
        return function (pass) {
            return function (m) {
                return StateT(function (s) {
                    return pass(Prelude[">>="](__dict_Monad_209["__superclass_Prelude.Bind_1"]())(runStateT(m)(s))(function (_20) {
                        return Prelude["return"](__dict_Monad_209)(new Data_Tuple.Tuple(new Data_Tuple.Tuple(_20.value0.value0, _20.value1), _20.value0.value1));
                    }));
                });
            };
        };
    };
    var liftListenState = function (__dict_Monad_210) {
        return function (listen) {
            return function (m) {
                return StateT(function (s) {
                    return Prelude[">>="](__dict_Monad_210["__superclass_Prelude.Bind_1"]())(listen(runStateT(m)(s)))(function (_19) {
                        return Prelude["return"](__dict_Monad_210)(new Data_Tuple.Tuple(new Data_Tuple.Tuple(_19.value0.value0, _19.value1), _19.value0.value1));
                    });
                });
            };
        };
    };
    var liftCatchState = function ($$catch) {
        return function (m) {
            return function (h) {
                return StateT(function (s) {
                    return $$catch(runStateT(m)(s))(function (e) {
                        return runStateT(h(e))(s);
                    });
                });
            };
        };
    };
    var liftCallCCState$prime = function (callCC) {
        return function (f) {
            return StateT(function (s) {
                return callCC(function (c) {
                    return runStateT(f(function (a) {
                        return StateT(function (s$prime) {
                            return c(new Data_Tuple.Tuple(a, s$prime));
                        });
                    }))(s);
                });
            });
        };
    };
    var liftCallCCState = function (callCC) {
        return function (f) {
            return StateT(function (s) {
                return callCC(function (c) {
                    return runStateT(f(function (a) {
                        return StateT(function (_) {
                            return c(new Data_Tuple.Tuple(a, s));
                        });
                    }))(s);
                });
            });
        };
    };
    var lazy1StateT = new Control_Lazy.Lazy1(function (f) {
        return StateT(function (s) {
            return runStateT(f(Prelude.unit))(s);
        });
    });
    var execStateT = function (__dict_Apply_212) {
        return function (m) {
            return function (s) {
                return Prelude["<$>"](__dict_Apply_212["__superclass_Prelude.Functor_0"]())(Data_Tuple.snd)(runStateT(m)(s));
            };
        };
    };
    var evalStateT = function (__dict_Apply_213) {
        return function (m) {
            return function (s) {
                return Prelude["<$>"](__dict_Apply_213["__superclass_Prelude.Functor_0"]())(Data_Tuple.fst)(runStateT(m)(s));
            };
        };
    };
    var monadStateT = function (__dict_Monad_207) {
        return new Prelude.Monad(function () {
            return applicativeStateT(__dict_Monad_207);
        }, function () {
            return bindStateT(__dict_Monad_207);
        });
    };
    var functorStateT = function (__dict_Monad_211) {
        return new Prelude.Functor(Prelude.liftM1(monadStateT(__dict_Monad_211)));
    };
    var bindStateT = function (__dict_Monad_214) {
        return new Prelude.Bind(function (_330) {
            return function (_331) {
                return function (s) {
                    return Prelude[">>="](__dict_Monad_214["__superclass_Prelude.Bind_1"]())(_330(s))(function (_17) {
                        return runStateT(_331(_17.value0))(_17.value1);
                    });
                };
            };
        }, function () {
            return applyStateT(__dict_Monad_214);
        });
    };
    var applyStateT = function (__dict_Monad_215) {
        return new Prelude.Apply(Prelude.ap(monadStateT(__dict_Monad_215)), function () {
            return functorStateT(__dict_Monad_215);
        });
    };
    var applicativeStateT = function (__dict_Monad_216) {
        return new Prelude.Applicative(function () {
            return applyStateT(__dict_Monad_216);
        }, function (a) {
            return StateT(function (s) {
                return Prelude["return"](__dict_Monad_216)(new Data_Tuple.Tuple(a, s));
            });
        });
    };
    var altStateT = function (__dict_Monad_219) {
        return function (__dict_Alt_220) {
            return new Control_Alt.Alt(function (x) {
                return function (y) {
                    return StateT(function (s) {
                        return Control_Alt["<|>"](__dict_Alt_220)(runStateT(x)(s))(runStateT(y)(s));
                    });
                };
            }, function () {
                return functorStateT(__dict_Monad_219);
            });
        };
    };
    var plusStateT = function (__dict_Monad_204) {
        return function (__dict_Plus_205) {
            return new Control_Plus.Plus(function () {
                return altStateT(__dict_Monad_204)(__dict_Plus_205["__superclass_Control.Alt.Alt_0"]());
            }, StateT(function (_) {
                return Control_Plus.empty(__dict_Plus_205);
            }));
        };
    };
    var alternativeStateT = function (__dict_Monad_217) {
        return function (__dict_Alternative_218) {
            return new Control_Alternative.Alternative(function () {
                return plusStateT(__dict_Monad_217)(__dict_Alternative_218["__superclass_Control.Plus.Plus_1"]());
            }, function () {
                return applicativeStateT(__dict_Monad_217);
            });
        };
    };
    var monadPlusStateT = function (__dict_MonadPlus_208) {
        return new Control_MonadPlus.MonadPlus(function () {
            return alternativeStateT(__dict_MonadPlus_208["__superclass_Prelude.Monad_0"]())(__dict_MonadPlus_208["__superclass_Control.Alternative.Alternative_1"]());
        }, function () {
            return monadStateT(__dict_MonadPlus_208["__superclass_Prelude.Monad_0"]());
        });
    };
    return {
        StateT: StateT, 
        "liftCallCCState'": liftCallCCState$prime, 
        liftCallCCState: liftCallCCState, 
        liftPassState: liftPassState, 
        liftListenState: liftListenState, 
        liftCatchState: liftCatchState, 
        withStateT: withStateT, 
        mapStateT: mapStateT, 
        execStateT: execStateT, 
        evalStateT: evalStateT, 
        runStateT: runStateT, 
        functorStateT: functorStateT, 
        applyStateT: applyStateT, 
        applicativeStateT: applicativeStateT, 
        altStateT: altStateT, 
        plusStateT: plusStateT, 
        alternativeStateT: alternativeStateT, 
        bindStateT: bindStateT, 
        monadStateT: monadStateT, 
        monadPlusStateT: monadPlusStateT, 
        monadTransStateT: monadTransStateT, 
        lazy1StateT: lazy1StateT
    };
})();
var PS = PS || {};
PS.Control_Monad_Writer_Trans = (function () {
    "use strict";
    var Data_Tuple = PS.Data_Tuple;
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var Control_Plus = PS.Control_Plus;
    var Control_Alt = PS.Control_Alt;
    var Control_Alternative = PS.Control_Alternative;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var Control_MonadPlus = PS.Control_MonadPlus;
    var WriterT = function (x) {
        return x;
    };
    var runWriterT = function (_333) {
        return _333;
    };
    var monadTransWriterT = function (__dict_Monoid_225) {
        return new Control_Monad_Trans.MonadTrans(function (__dict_Monad_226) {
            return function (m) {
                return WriterT(Prelude[">>="](__dict_Monad_226["__superclass_Prelude.Bind_1"]())(m)(function (_23) {
                    return Prelude["return"](__dict_Monad_226)(new Data_Tuple.Tuple(_23, Data_Monoid.mempty(__dict_Monoid_225)));
                }));
            };
        });
    };
    var mapWriterT = function (f) {
        return function (m) {
            return WriterT(f(runWriterT(m)));
        };
    };
    var liftCatchWriter = function ($$catch) {
        return function (m) {
            return function (h) {
                return WriterT($$catch(runWriterT(m))(function (e) {
                    return runWriterT(h(e));
                }));
            };
        };
    };
    var liftCallCCWriter = function (__dict_Monoid_229) {
        return function (callCC) {
            return function (f) {
                return WriterT(callCC(function (c) {
                    return runWriterT(f(function (a) {
                        return WriterT(c(new Data_Tuple.Tuple(a, Data_Monoid.mempty(__dict_Monoid_229))));
                    }));
                }));
            };
        };
    };
    var functorWriterT = function (__dict_Functor_230) {
        return new Prelude.Functor(function (f) {
            return mapWriterT(Prelude["<$>"](__dict_Functor_230)(function (_332) {
                return new Data_Tuple.Tuple(f(_332.value0), _332.value1);
            }));
        });
    };
    var execWriterT = function (__dict_Apply_231) {
        return function (m) {
            return Prelude["<$>"](__dict_Apply_231["__superclass_Prelude.Functor_0"]())(Data_Tuple.snd)(runWriterT(m));
        };
    };
    var applyWriterT = function (__dict_Monoid_234) {
        return function (__dict_Apply_235) {
            return new Prelude.Apply(function (f) {
                return function (v) {
                    return WriterT((function () {
                        var k = function (_334) {
                            return function (_335) {
                                return new Data_Tuple.Tuple(_334.value0(_335.value0), Prelude["<>"](__dict_Monoid_234["__superclass_Prelude.Semigroup_0"]())(_334.value1)(_335.value1));
                            };
                        };
                        return Prelude["<*>"](__dict_Apply_235)(Prelude["<$>"](__dict_Apply_235["__superclass_Prelude.Functor_0"]())(k)(runWriterT(f)))(runWriterT(v));
                    })());
                };
            }, function () {
                return functorWriterT(__dict_Apply_235["__superclass_Prelude.Functor_0"]());
            });
        };
    };
    var bindWriterT = function (__dict_Monoid_232) {
        return function (__dict_Monad_233) {
            return new Prelude.Bind(function (m) {
                return function (k) {
                    return WriterT(Prelude[">>="](__dict_Monad_233["__superclass_Prelude.Bind_1"]())(runWriterT(m))(function (_22) {
                        return Prelude[">>="](__dict_Monad_233["__superclass_Prelude.Bind_1"]())(runWriterT(k(_22.value0)))(function (_21) {
                            return Prelude["return"](__dict_Monad_233)(new Data_Tuple.Tuple(_21.value0, Prelude["<>"](__dict_Monoid_232["__superclass_Prelude.Semigroup_0"]())(_22.value1)(_21.value1)));
                        });
                    }));
                };
            }, function () {
                return applyWriterT(__dict_Monoid_232)((__dict_Monad_233["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]());
            });
        };
    };
    var applicativeWriterT = function (__dict_Monoid_236) {
        return function (__dict_Applicative_237) {
            return new Prelude.Applicative(function () {
                return applyWriterT(__dict_Monoid_236)(__dict_Applicative_237["__superclass_Prelude.Apply_0"]());
            }, function (a) {
                return WriterT(Prelude.pure(__dict_Applicative_237)(new Data_Tuple.Tuple(a, Data_Monoid.mempty(__dict_Monoid_236))));
            });
        };
    };
    var monadWriterT = function (__dict_Monoid_223) {
        return function (__dict_Monad_224) {
            return new Prelude.Monad(function () {
                return applicativeWriterT(__dict_Monoid_223)(__dict_Monad_224["__superclass_Prelude.Applicative_0"]());
            }, function () {
                return bindWriterT(__dict_Monoid_223)(__dict_Monad_224);
            });
        };
    };
    var altWriterT = function (__dict_Monoid_240) {
        return function (__dict_Alt_241) {
            return new Control_Alt.Alt(function (m) {
                return function (n) {
                    return WriterT(Control_Alt["<|>"](__dict_Alt_241)(runWriterT(m))(runWriterT(n)));
                };
            }, function () {
                return functorWriterT(__dict_Alt_241["__superclass_Prelude.Functor_0"]());
            });
        };
    };
    var plusWriterT = function (__dict_Monoid_221) {
        return function (__dict_Plus_222) {
            return new Control_Plus.Plus(function () {
                return altWriterT(__dict_Monoid_221)(__dict_Plus_222["__superclass_Control.Alt.Alt_0"]());
            }, Control_Plus.empty(__dict_Plus_222));
        };
    };
    var alternativeWriterT = function (__dict_Monoid_238) {
        return function (__dict_Alternative_239) {
            return new Control_Alternative.Alternative(function () {
                return plusWriterT(__dict_Monoid_238)(__dict_Alternative_239["__superclass_Control.Plus.Plus_1"]());
            }, function () {
                return applicativeWriterT(__dict_Monoid_238)(__dict_Alternative_239["__superclass_Prelude.Applicative_0"]());
            });
        };
    };
    var monadPlusWriterT = function (__dict_Monoid_227) {
        return function (__dict_MonadPlus_228) {
            return new Control_MonadPlus.MonadPlus(function () {
                return alternativeWriterT(__dict_Monoid_227)(__dict_MonadPlus_228["__superclass_Control.Alternative.Alternative_1"]());
            }, function () {
                return monadWriterT(__dict_Monoid_227)(__dict_MonadPlus_228["__superclass_Prelude.Monad_0"]());
            });
        };
    };
    return {
        WriterT: WriterT, 
        liftCallCCWriter: liftCallCCWriter, 
        liftCatchWriter: liftCatchWriter, 
        mapWriterT: mapWriterT, 
        execWriterT: execWriterT, 
        runWriterT: runWriterT, 
        functorWriterT: functorWriterT, 
        applyWriterT: applyWriterT, 
        applicativeWriterT: applicativeWriterT, 
        altWriterT: altWriterT, 
        plusWriterT: plusWriterT, 
        alternativeWriterT: alternativeWriterT, 
        bindWriterT: bindWriterT, 
        monadWriterT: monadWriterT, 
        monadPlusWriterT: monadPlusWriterT, 
        monadTransWriterT: monadTransWriterT
    };
})();
var PS = PS || {};
PS.Control_Monad_Cont_Class = (function () {
    "use strict";
    var Control_Monad_Cont_Trans = PS.Control_Monad_Cont_Trans;
    var Control_Monad_Error_Trans = PS.Control_Monad_Error_Trans;
    var Control_Monad_Maybe_Trans = PS.Control_Monad_Maybe_Trans;
    var Control_Monad_Reader_Trans = PS.Control_Monad_Reader_Trans;
    var Control_Monad_State_Trans = PS.Control_Monad_State_Trans;
    var Control_Monad_Writer_Trans = PS.Control_Monad_Writer_Trans;
    var Prelude = PS.Prelude;
    var Control_Monad_Error = PS.Control_Monad_Error;
    var Data_Monoid = PS.Data_Monoid;
    var MonadCont = function (callCC) {
        this.callCC = callCC;
    };
    var monadContContT = function (__dict_Monad_242) {
        return new MonadCont(Control_Monad_Cont_Trans.callCC);
    };
    var callCC = function (dict) {
        return dict.callCC;
    };
    var monadContErrorT = function (__dict_Error_243) {
        return function (__dict_MonadCont_244) {
            return new MonadCont(Control_Monad_Error_Trans.liftCallCCError(callCC(__dict_MonadCont_244)));
        };
    };
    var monadContMaybeT = function (__dict_MonadCont_245) {
        return new MonadCont(Control_Monad_Maybe_Trans.liftCallCCMaybe(callCC(__dict_MonadCont_245)));
    };
    var monadContReaderT = function (__dict_MonadCont_246) {
        return new MonadCont(Control_Monad_Reader_Trans.liftCallCCReader(callCC(__dict_MonadCont_246)));
    };
    var monadContStateT = function (__dict_MonadCont_247) {
        return new MonadCont(Control_Monad_State_Trans["liftCallCCState'"](callCC(__dict_MonadCont_247)));
    };
    var monadWriterT = function (__dict_Monoid_248) {
        return function (__dict_MonadCont_249) {
            return new MonadCont(Control_Monad_Writer_Trans.liftCallCCWriter(__dict_Monoid_248)(callCC(__dict_MonadCont_249)));
        };
    };
    return {
        MonadCont: MonadCont, 
        callCC: callCC, 
        monadContContT: monadContContT, 
        monadContErrorT: monadContErrorT, 
        monadContMaybeT: monadContMaybeT, 
        monadContReaderT: monadContReaderT, 
        monadContStateT: monadContStateT, 
        monadWriterT: monadWriterT
    };
})();
var PS = PS || {};
PS.Control_Monad_Error_Class = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Error_Trans = PS.Control_Monad_Error_Trans;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var Control_Monad_Maybe_Trans = PS.Control_Monad_Maybe_Trans;
    var Control_Monad_Reader_Trans = PS.Control_Monad_Reader_Trans;
    var Control_Monad_Writer_Trans = PS.Control_Monad_Writer_Trans;
    var Control_Monad_State_Trans = PS.Control_Monad_State_Trans;
    var Control_Monad_Error = PS.Control_Monad_Error;
    var Data_Either = PS.Data_Either;
    var Data_Monoid = PS.Data_Monoid;
    var MonadError = function (catchError, throwError) {
        this.catchError = catchError;
        this.throwError = throwError;
    };
    var throwError = function (dict) {
        return dict.throwError;
    };
    var monadErrorErrorT = function (__dict_Monad_250) {
        return function (__dict_Error_251) {
            return new MonadError(function (m) {
                return function (h) {
                    return Control_Monad_Error_Trans.ErrorT(Prelude[">>="](__dict_Monad_250["__superclass_Prelude.Bind_1"]())(Control_Monad_Error_Trans.runErrorT(m))(function (_24) {
                        if (_24 instanceof Data_Either.Left) {
                            return Control_Monad_Error_Trans.runErrorT(h(_24.value0));
                        };
                        if (_24 instanceof Data_Either.Right) {
                            return Prelude["return"](__dict_Monad_250)(new Data_Either.Right(_24.value0));
                        };
                        throw new Error("Failed pattern match");
                    }));
                };
            }, function (e) {
                return Control_Monad_Error_Trans.ErrorT(Prelude["return"](__dict_Monad_250)(new Data_Either.Left(e)));
            });
        };
    };
    var monadErrorError = function (__dict_Error_252) {
        return new MonadError(function (_336) {
            return function (_337) {
                if (_336 instanceof Data_Either.Left) {
                    return _337(_336.value0);
                };
                if (_336 instanceof Data_Either.Right) {
                    return new Data_Either.Right(_336.value0);
                };
                throw new Error("Failed pattern match");
            };
        }, Data_Either.Left.create);
    };
    var catchError = function (dict) {
        return dict.catchError;
    };
    var monadErrorMaybeT = function (__dict_Monad_253) {
        return function (__dict_MonadError_254) {
            return new MonadError(Control_Monad_Maybe_Trans.liftCatchMaybe(catchError(__dict_MonadError_254)), function (e) {
                return Control_Monad_Trans.lift(Control_Monad_Maybe_Trans.monadTransMaybeT)(__dict_Monad_253)(throwError(__dict_MonadError_254)(e));
            });
        };
    };
    var monadErrorReaderT = function (__dict_Monad_255) {
        return function (__dict_MonadError_256) {
            return new MonadError(Control_Monad_Reader_Trans.liftCatchReader(catchError(__dict_MonadError_256)), function (e) {
                return Control_Monad_Trans.lift(Control_Monad_Reader_Trans.monadTransReaderT)(__dict_Monad_255)(throwError(__dict_MonadError_256)(e));
            });
        };
    };
    var monadErrorStateT = function (__dict_Monad_257) {
        return function (__dict_MonadError_258) {
            return new MonadError(Control_Monad_State_Trans.liftCatchState(catchError(__dict_MonadError_258)), function (e) {
                return Control_Monad_Trans.lift(Control_Monad_State_Trans.monadTransStateT)(__dict_Monad_257)(throwError(__dict_MonadError_258)(e));
            });
        };
    };
    var monadErrorWriterT = function (__dict_Monad_259) {
        return function (__dict_Monoid_260) {
            return function (__dict_MonadError_261) {
                return new MonadError(Control_Monad_Writer_Trans.liftCatchWriter(catchError(__dict_MonadError_261)), function (e) {
                    return Control_Monad_Trans.lift(Control_Monad_Writer_Trans.monadTransWriterT(__dict_Monoid_260))(__dict_Monad_259)(throwError(__dict_MonadError_261)(e));
                });
            };
        };
    };
    return {
        MonadError: MonadError, 
        catchError: catchError, 
        throwError: throwError, 
        monadErrorError: monadErrorError, 
        monadErrorErrorT: monadErrorErrorT, 
        monadErrorMaybeT: monadErrorMaybeT, 
        monadErrorReaderT: monadErrorReaderT, 
        monadErrorWriterT: monadErrorWriterT, 
        monadErrorStateT: monadErrorStateT
    };
})();
var PS = PS || {};
PS.Data_Profunctor_Strong = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Profunctor = PS.Data_Profunctor;
    var Data_Tuple = PS.Data_Tuple;
    var Strong = function (__superclass_Data$dotProfunctor$dotProfunctor_0, first, second) {
        this["__superclass_Data.Profunctor.Profunctor_0"] = __superclass_Data$dotProfunctor$dotProfunctor_0;
        this.first = first;
        this.second = second;
    };
    var strongArr = new Strong(function () {
        return Data_Profunctor.profunctorArr;
    }, function (_338) {
        return function (_339) {
            return new Data_Tuple.Tuple(_338(_339.value0), _339.value1);
        };
    }, Prelude["<$>"](Data_Tuple.functorTuple));
    var second = function (dict) {
        return dict.second;
    };
    var first = function (dict) {
        return dict.first;
    };
    return {
        Strong: Strong, 
        second: second, 
        first: first, 
        strongArr: strongArr
    };
})();
var PS = PS || {};
PS.Control_Arrow = (function () {
    "use strict";
    var Data_Profunctor_Strong = PS.Data_Profunctor_Strong;
    var Prelude = PS.Prelude;
    var Data_Tuple = PS.Data_Tuple;
    var Arrow = function (__superclass_Data$dotProfunctor$dotStrong$dotStrong_1, __superclass_Prelude$dotCategory_0, arr) {
        this["__superclass_Data.Profunctor.Strong.Strong_1"] = __superclass_Data$dotProfunctor$dotStrong$dotStrong_1;
        this["__superclass_Prelude.Category_0"] = __superclass_Prelude$dotCategory_0;
        this.arr = arr;
    };
    var ArrowZero = function (azero) {
        this.azero = azero;
    };
    var ArrowPlus = function ($less$plus$greater) {
        this["<+>"] = $less$plus$greater;
    };
    var $less$plus$greater = function (dict) {
        return dict["<+>"];
    };
    var $times$times$times = function (__dict_Arrow_262) {
        return function (f) {
            return function (g) {
                return Prelude[">>>"]((__dict_Arrow_262["__superclass_Prelude.Category_0"]())["__superclass_Prelude.Semigroupoid_0"]())(Data_Profunctor_Strong.first(__dict_Arrow_262["__superclass_Data.Profunctor.Strong.Strong_1"]())(f))(Data_Profunctor_Strong.second(__dict_Arrow_262["__superclass_Data.Profunctor.Strong.Strong_1"]())(g));
            };
        };
    };
    var azero = function (dict) {
        return dict.azero;
    };
    var arrowFunction = new Arrow(function () {
        return Data_Profunctor_Strong.strongArr;
    }, function () {
        return Prelude.categoryArr;
    }, function (f) {
        return f;
    });
    var arr = function (dict) {
        return dict.arr;
    };
    var $amp$amp$amp = function (__dict_Arrow_263) {
        return function (f) {
            return function (g) {
                return Prelude[">>>"]((__dict_Arrow_263["__superclass_Prelude.Category_0"]())["__superclass_Prelude.Semigroupoid_0"]())(arr(__dict_Arrow_263)(function (b) {
                    return new Data_Tuple.Tuple(b, b);
                }))($times$times$times(__dict_Arrow_263)(f)(g));
            };
        };
    };
    return {
        ArrowPlus: ArrowPlus, 
        ArrowZero: ArrowZero, 
        Arrow: Arrow, 
        "<+>": $less$plus$greater, 
        azero: azero, 
        "&&&": $amp$amp$amp, 
        "***": $times$times$times, 
        arr: arr, 
        arrowFunction: arrowFunction
    };
})();
var PS = PS || {};
PS.Control_Arrow_Kleisli = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Arrow = PS.Control_Arrow;
    var Data_Profunctor = PS.Data_Profunctor;
    var Data_Profunctor_Strong = PS.Data_Profunctor_Strong;
    var Data_Tuple = PS.Data_Tuple;
    var Kleisli = function (x) {
        return x;
    };
    var semigroupoidKleisli = function (__dict_Monad_265) {
        return new Prelude.Semigroupoid(function (_343) {
            return function (_344) {
                return function (b) {
                    return Prelude[">>="](__dict_Monad_265["__superclass_Prelude.Bind_1"]())(_344(b))(_343);
                };
            };
        });
    };
    var runKleisli = function (_342) {
        return _342;
    };
    var profunctorKleisli = function (__dict_Functor_266) {
        return new Data_Profunctor.Profunctor(function (_345) {
            return function (_346) {
                return function (_347) {
                    return Prelude["<<<"](Prelude.semigroupoidArr)(Prelude["<$>"](__dict_Functor_266)(_346))(Prelude["<<<"](Prelude.semigroupoidArr)(_347)(_345));
                };
            };
        });
    };
    var strongKleisli = function (__dict_Monad_264) {
        return new Data_Profunctor_Strong.Strong(function () {
            return profunctorKleisli(((__dict_Monad_264["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]());
        }, function (_348) {
            return function (_340) {
                return Prelude[">>="](__dict_Monad_264["__superclass_Prelude.Bind_1"]())(_348(_340.value0))(function (b) {
                    return Prelude["return"](__dict_Monad_264)(new Data_Tuple.Tuple(b, _340.value1));
                });
            };
        }, function (_349) {
            return function (_341) {
                return Prelude[">>="](__dict_Monad_264["__superclass_Prelude.Bind_1"]())(_349(_341.value1))(function (b) {
                    return Prelude["return"](__dict_Monad_264)(new Data_Tuple.Tuple(_341.value0, b));
                });
            };
        });
    };
    var categoryKleisli = function (__dict_Monad_267) {
        return new Prelude.Category(function () {
            return semigroupoidKleisli(__dict_Monad_267);
        }, Prelude["return"](__dict_Monad_267));
    };
    var arrowKleisli = function (__dict_Monad_268) {
        return new Control_Arrow.Arrow(function () {
            return strongKleisli(__dict_Monad_268);
        }, function () {
            return categoryKleisli(__dict_Monad_268);
        }, function (f) {
            return Prelude["<<<"](Prelude.semigroupoidArr)(Prelude["return"](__dict_Monad_268))(f);
        });
    };
    return {
        Kleisli: Kleisli, 
        runKleisli: runKleisli, 
        semigroupoidKleisli: semigroupoidKleisli, 
        categoryKleisli: categoryKleisli, 
        profunctorKleisli: profunctorKleisli, 
        strongKleisli: strongKleisli, 
        arrowKleisli: arrowKleisli
    };
})();
var PS = PS || {};
PS.Data_Machine_Mealy = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Bind = PS.Control_Bind;
    var Data_Array = PS.Data_Array;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Profunctor_Strong = PS.Data_Profunctor_Strong;
    var Data_Profunctor = PS.Data_Profunctor;
    var Data_Monoid = PS.Data_Monoid;
    var Data_Maybe = PS.Data_Maybe;
    var Control_Arrow = PS.Control_Arrow;
    var Control_Monad = PS.Control_Monad;
    var Control_Plus = PS.Control_Plus;
    var Control_Alt = PS.Control_Alt;
    var Control_Alternative = PS.Control_Alternative;
    var Control_MonadPlus = PS.Control_MonadPlus;
    var MealyT = (function () {
        function MealyT(value0) {
            this.value0 = value0;
        };
        MealyT.create = function (value0) {
            return new MealyT(value0);
        };
        return MealyT;
    })();
    var Emit = (function () {
        function Emit(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        };
        Emit.create = function (value0) {
            return function (value1) {
                return new Emit(value0, value1);
            };
        };
        return Emit;
    })();
    var Halt = (function () {
        function Halt() {

        };
        Halt.value = new Halt();
        return Halt;
    })();
    var stepMealy = function (__dict_Monad_270) {
        return function (_350) {
            return function (_351) {
                return Control_Bind.join(__dict_Monad_270["__superclass_Prelude.Bind_1"]())(Prelude["<*>"]((__dict_Monad_270["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())(_351.value0)(Prelude.pure(__dict_Monad_270["__superclass_Prelude.Applicative_0"]())(_350)));
            };
        };
    };
    var runMealy = function (__dict_Monad_271) {
        return function (m) {
            var f = function (_353) {
                if (_353 instanceof Halt) {
                    return Prelude.pure(__dict_Monad_271["__superclass_Prelude.Applicative_0"]())(Prelude.unit);
                };
                if (_353 instanceof Emit) {
                    return runMealy(__dict_Monad_271)(_353.value1);
                };
                throw new Error("Failed pattern match");
            };
            return Prelude[">>="](__dict_Monad_271["__superclass_Prelude.Bind_1"]())(stepMealy(__dict_Monad_271)(Prelude.unit)(m))(f);
        };
    };
    var pureMealy = function (__dict_Applicative_272) {
        return function (f) {
            return MealyT.create(Prelude.pure(__dict_Applicative_272)(function (s) {
                return Prelude.pure(__dict_Applicative_272)(f(s));
            }));
        };
    };
    var mealy = function (__dict_Applicative_275) {
        return function (f) {
            return MealyT.create(Prelude.pure(__dict_Applicative_275)(f));
        };
    };
    var profunctorMealy = function (__dict_Monad_277) {
        return new Data_Profunctor.Profunctor(function (l) {
            return function (r) {
                var remap = function (m) {
                    var g = function (_367) {
                        if (_367 instanceof Emit) {
                            return new Emit(r(_367.value0), remap(_367.value1));
                        };
                        if (_367 instanceof Halt) {
                            return Halt.value;
                        };
                        throw new Error("Failed pattern match");
                    };
                    return mealy(__dict_Monad_277["__superclass_Prelude.Applicative_0"]())(function (s) {
                        return Prelude["<$>"](((__dict_Monad_277["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(g)(stepMealy(__dict_Monad_277)(l(s))(m));
                    });
                };
                return remap;
            };
        });
    };
    var semigroupMealy = function (__dict_Monad_278) {
        return new Prelude.Semigroup(function (l) {
            return function (r) {
                return mealy(__dict_Monad_278["__superclass_Prelude.Applicative_0"]())(function (s) {
                    var g = function (_369) {
                        if (_369 instanceof Emit) {
                            return Prelude.pure(__dict_Monad_278["__superclass_Prelude.Applicative_0"]())(new Emit(_369.value0, Prelude["<>"](semigroupMealy(__dict_Monad_278))(_369.value1)(r)));
                        };
                        if (_369 instanceof Halt) {
                            return stepMealy(__dict_Monad_278)(s)(r);
                        };
                        throw new Error("Failed pattern match");
                    };
                    return Prelude[">>="](__dict_Monad_278["__superclass_Prelude.Bind_1"]())(stepMealy(__dict_Monad_278)(s)(l))(g);
                });
            };
        });
    };
    var monoidMealy = function (__dict_Monad_276) {
        return new Data_Monoid.Monoid(function () {
            return semigroupMealy(__dict_Monad_276);
        }, mealy(__dict_Monad_276["__superclass_Prelude.Applicative_0"]())(function (s) {
            return Prelude.pure(__dict_Monad_276["__superclass_Prelude.Applicative_0"]())(Halt.value);
        }));
    };
    var semigroupoidMealy = function (__dict_Monad_279) {
        return new Prelude.Semigroupoid(function (f) {
            return function (g) {
                var gb = function (_370) {
                    if (_370 instanceof Halt) {
                        return Prelude.pure(__dict_Monad_279["__superclass_Prelude.Applicative_0"]())(Halt.value);
                    };
                    if (_370 instanceof Emit) {
                        var fc = function (_371) {
                            if (_371 instanceof Emit) {
                                return new Emit(_371.value0, Prelude["<<<"](semigroupoidMealy(__dict_Monad_279))(_371.value1)(_370.value1));
                            };
                            if (_371 instanceof Halt) {
                                return Halt.value;
                            };
                            throw new Error("Failed pattern match");
                        };
                        return Prelude["<$>"](((__dict_Monad_279["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(fc)(stepMealy(__dict_Monad_279)(_370.value0)(f));
                    };
                    throw new Error("Failed pattern match");
                };
                return mealy(__dict_Monad_279["__superclass_Prelude.Applicative_0"]())(function (b) {
                    return Prelude[">>="](__dict_Monad_279["__superclass_Prelude.Bind_1"]())(stepMealy(__dict_Monad_279)(b)(g))(gb);
                });
            };
        });
    };
    var sink = function (__dict_Monad_280) {
        return function (f) {
            return mealy(__dict_Monad_280["__superclass_Prelude.Applicative_0"]())(function (a) {
                return Prelude["<$>"](((__dict_Monad_280["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Prelude["const"](new Emit(Prelude.unit, sink(__dict_Monad_280)(f))))(f(a));
            });
        };
    };
    var source = function (__dict_Monad_281) {
        return function (src) {
            return mealy(__dict_Monad_281["__superclass_Prelude.Applicative_0"]())(function (_) {
                return Prelude["<$>"](((__dict_Monad_281["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Prelude.flip(Emit.create)(source(__dict_Monad_281)(src)))(src);
            });
        };
    };
    var strongMealy = function (__dict_Monad_282) {
        return new Data_Profunctor_Strong.Strong(function () {
            return profunctorMealy(__dict_Monad_282);
        }, function (m) {
            return mealy(__dict_Monad_282["__superclass_Prelude.Applicative_0"]())(function (s) {
                var d = Data_Tuple.snd(s);
                var g = function (_368) {
                    if (_368 instanceof Emit) {
                        return new Emit(new Data_Tuple.Tuple(_368.value0, d), Data_Profunctor_Strong.first(strongMealy(__dict_Monad_282))(_368.value1));
                    };
                    if (_368 instanceof Halt) {
                        return Halt.value;
                    };
                    throw new Error("Failed pattern match");
                };
                var b = Data_Tuple.fst(s);
                return Prelude["<$>"](((__dict_Monad_282["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(g)(stepMealy(__dict_Monad_282)(b)(m));
            });
        }, Prelude["<<<"](Prelude.semigroupoidArr)(Data_Profunctor.dimap(profunctorMealy(__dict_Monad_282))(Data_Tuple.swap)(Data_Tuple.swap))(Data_Profunctor_Strong.first(strongMealy(__dict_Monad_282))));
    };
    var loop = function (__dict_Monad_283) {
        return function (m) {
            var loop$prime = function (m_1) {
                return mealy(__dict_Monad_283["__superclass_Prelude.Applicative_0"]())(function (s) {
                    var f = function (_356) {
                        if (_356 instanceof Halt) {
                            return stepMealy(__dict_Monad_283)(s)(loop(__dict_Monad_283)(m));
                        };
                        if (_356 instanceof Emit) {
                            return Prelude.pure(__dict_Monad_283["__superclass_Prelude.Applicative_0"]())(new Emit(_356.value0, loop$prime(_356.value1)));
                        };
                        throw new Error("Failed pattern match");
                    };
                    return Prelude[">>="](__dict_Monad_283["__superclass_Prelude.Bind_1"]())(stepMealy(__dict_Monad_283)(s)(m_1))(f);
                });
            };
            return loop$prime(m);
        };
    };
    var scanl = function (__dict_Monad_284) {
        return function (f) {
            var loop_1 = function (b) {
                return function (m) {
                    return mealy(__dict_Monad_284["__superclass_Prelude.Applicative_0"]())(function (s) {
                        var g = function (_357) {
                            if (_357 instanceof Halt) {
                                return Halt.value;
                            };
                            if (_357 instanceof Emit) {
                                var b$prime = f(b)(_357.value0);
                                return new Emit(b$prime, loop_1(b$prime)(_357.value1));
                            };
                            throw new Error("Failed pattern match");
                        };
                        return Prelude["<$>"](((__dict_Monad_284["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(g)(stepMealy(__dict_Monad_284)(s)(m));
                    });
                };
            };
            return loop_1;
        };
    };
    var interleave = function (__dict_Monad_285) {
        return function (m1) {
            return function (m2) {
                return mealy(__dict_Monad_285["__superclass_Prelude.Applicative_0"]())(function (s) {
                    var f = function (_360) {
                        if (_360 instanceof Halt) {
                            return stepMealy(__dict_Monad_285)(s)(m2);
                        };
                        if (_360 instanceof Emit) {
                            return Prelude.pure(__dict_Monad_285["__superclass_Prelude.Applicative_0"]())(new Emit(_360.value0, interleave(__dict_Monad_285)(m2)(_360.value1)));
                        };
                        throw new Error("Failed pattern match");
                    };
                    return Prelude[">>="](__dict_Monad_285["__superclass_Prelude.Bind_1"]())(stepMealy(__dict_Monad_285)(s)(m1))(f);
                });
            };
        };
    };
    var ifte = function (__dict_Monad_286) {
        return function (ma) {
            return function (f) {
                return function (mb) {
                    return mealy(__dict_Monad_286["__superclass_Prelude.Applicative_0"]())(function (s) {
                        var h = function (_362) {
                            return function (_363) {
                                if (_363 instanceof Halt) {
                                    return Halt.value;
                                };
                                if (_363 instanceof Emit) {
                                    return new Emit(_363.value0, Prelude["<>"](semigroupMealy(__dict_Monad_286))(_363.value1)(ifte(__dict_Monad_286)(_362)(f)(mb)));
                                };
                                throw new Error("Failed pattern match");
                            };
                        };
                        var g = function (_361) {
                            if (_361 instanceof Halt) {
                                return stepMealy(__dict_Monad_286)(s)(mb);
                            };
                            if (_361 instanceof Emit) {
                                return Prelude["<$>"](((__dict_Monad_286["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(h(_361.value1))(stepMealy(__dict_Monad_286)(s)(f(_361.value0)));
                            };
                            throw new Error("Failed pattern match");
                        };
                        return Prelude[">>="](__dict_Monad_286["__superclass_Prelude.Bind_1"]())(stepMealy(__dict_Monad_286)(s)(ma))(g);
                    });
                };
            };
        };
    };
    var halt = function (__dict_Applicative_287) {
        return pureMealy(__dict_Applicative_287)(Prelude["const"](Halt.value));
    };
    
    /**
     *  MonadLogic -- TODO: Create a purescript-logic package
     */
    var msplit = function (__dict_Monad_288) {
        return function (m) {
            var f = function (_359) {
                if (_359 instanceof Halt) {
                    return new Emit(Data_Maybe.Nothing.value, halt(__dict_Monad_288["__superclass_Prelude.Applicative_0"]()));
                };
                if (_359 instanceof Emit) {
                    return new Emit(Data_Maybe.Just.create(new Data_Tuple.Tuple(_359.value0, _359.value1)), msplit(__dict_Monad_288)(_359.value1));
                };
                throw new Error("Failed pattern match");
            };
            return mealy(__dict_Monad_288["__superclass_Prelude.Applicative_0"]())(function (s) {
                return Prelude["<$>"](((__dict_Monad_288["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(f)(stepMealy(__dict_Monad_288)(s)(m));
            });
        };
    };
    var singleton = function (__dict_Monad_290) {
        return function (a) {
            return pureMealy(__dict_Monad_290["__superclass_Prelude.Applicative_0"]())(function (s) {
                return new Emit(a, halt(__dict_Monad_290["__superclass_Prelude.Applicative_0"]()));
            });
        };
    };
    var take = function (__dict_Monad_291) {
        return function (n) {
            return function (m) {
                var f = function (_354) {
                    if (_354 instanceof Halt) {
                        return Halt.value;
                    };
                    if (_354 instanceof Emit) {
                        return new Emit(_354.value0, take(__dict_Monad_291)(n - 1)(_354.value1));
                    };
                    throw new Error("Failed pattern match");
                };
                var _1691 = n <= 0;
                if (_1691) {
                    return halt(__dict_Monad_291["__superclass_Prelude.Applicative_0"]());
                };
                if (!_1691) {
                    return mealy(__dict_Monad_291["__superclass_Prelude.Applicative_0"]())(function (s) {
                        return Prelude["<$>"](((__dict_Monad_291["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(f)(stepMealy(__dict_Monad_291)(s)(m));
                    });
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var once = function (__dict_Monad_292) {
        return take(__dict_Monad_292)(1);
    };
    var wrapEffect = function (__dict_Monad_293) {
        return function (fa) {
            return Prelude["<<<"](Prelude.semigroupoidArr)(MealyT.create)(Prelude.pure(__dict_Monad_293["__superclass_Prelude.Applicative_0"]()))(Prelude["const"](Prelude["<$>"](((__dict_Monad_293["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Prelude.flip(Emit.create)(halt(__dict_Monad_293["__superclass_Prelude.Applicative_0"]())))(fa)));
        };
    };
    var $greater$greater$minus = function (__dict_Monad_294) {
        return function (ma) {
            return function (f) {
                return ifte(__dict_Monad_294)(ma)(f)(halt(__dict_Monad_294["__superclass_Prelude.Applicative_0"]()));
            };
        };
    };
    var functorMealy = function (__dict_Monad_295) {
        return new Prelude.Functor(function (f) {
            return function (m) {
                var g = function (_364) {
                    if (_364 instanceof Emit) {
                        return new Emit(f(_364.value0), Prelude["<$>"](functorMealy(__dict_Monad_295))(f)(_364.value1));
                    };
                    if (_364 instanceof Halt) {
                        return Halt.value;
                    };
                    throw new Error("Failed pattern match");
                };
                return mealy(__dict_Monad_295["__superclass_Prelude.Applicative_0"]())(function (s) {
                    return Prelude["<$>"](((__dict_Monad_295["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(g)(stepMealy(__dict_Monad_295)(s)(m));
                });
            };
        });
    };
    var fromMaybe = function (__dict_Monad_296) {
        return function (_352) {
            if (_352 instanceof Data_Maybe.Nothing) {
                return halt(__dict_Monad_296["__superclass_Prelude.Applicative_0"]());
            };
            if (_352 instanceof Data_Maybe.Just) {
                return singleton(__dict_Monad_296)(_352.value0);
            };
            throw new Error("Failed pattern match");
        };
    };
    var fromArray = function (__dict_Monad_297) {
        return function (a) {
            var len = Data_Array.length(a);
            var loop_1 = function (_358) {
                if (_358 < 0 || _358 >= len) {
                    return halt(__dict_Monad_297["__superclass_Prelude.Applicative_0"]());
                };
                return Prelude["<>"](semigroupMealy(__dict_Monad_297))(fromMaybe(__dict_Monad_297)(Data_Array["!!"](a)(_358)))(loop_1(_358 + 1));
            };
            return loop_1(0);
        };
    };
    var drop = function (__dict_Monad_298) {
        return function (n) {
            return function (m) {
                var _1698 = n <= 0;
                if (_1698) {
                    return m;
                };
                if (!_1698) {
                    return mealy(__dict_Monad_298["__superclass_Prelude.Applicative_0"]())(function (s) {
                        var f = function (_355) {
                            if (_355 instanceof Halt) {
                                return Prelude.pure(__dict_Monad_298["__superclass_Prelude.Applicative_0"]())(Halt.value);
                            };
                            if (_355 instanceof Emit) {
                                return stepMealy(__dict_Monad_298)(s)(drop(__dict_Monad_298)(n - 1)(_355.value1));
                            };
                            throw new Error("Failed pattern match");
                        };
                        return Prelude[">>="](__dict_Monad_298["__superclass_Prelude.Bind_1"]())(stepMealy(__dict_Monad_298)(s)(m))(f);
                    });
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var collect = function (__dict_Monad_299) {
        return scanl(__dict_Monad_299)(Prelude.flip(Prelude[":"]))([  ]);
    };
    var categoryMealy = function (__dict_Monad_300) {
        return new Prelude.Category(function () {
            return semigroupoidMealy(__dict_Monad_300);
        }, pureMealy(__dict_Monad_300["__superclass_Prelude.Applicative_0"]())(function (t) {
            return new Emit(t, Prelude.id(categoryMealy(__dict_Monad_300)));
        }));
    };
    var arrowMealy = function (__dict_Monad_302) {
        return new Control_Arrow.Arrow(function () {
            return strongMealy(__dict_Monad_302);
        }, function () {
            return categoryMealy(__dict_Monad_302);
        }, function (f) {
            return pureMealy(__dict_Monad_302["__superclass_Prelude.Applicative_0"]())(function (b) {
                return new Emit(f(b), halt(__dict_Monad_302["__superclass_Prelude.Applicative_0"]()));
            });
        });
    };
    var applyMealy = function (__dict_Monad_303) {
        return new Prelude.Apply(function (f) {
            return function (x) {
                return mealy(__dict_Monad_303["__superclass_Prelude.Applicative_0"]())(function (s) {
                    var ap = function (_365) {
                        return function (_366) {
                            if (_365 instanceof Halt) {
                                return Halt.value;
                            };
                            if (_366 instanceof Halt) {
                                return Halt.value;
                            };
                            if (_365 instanceof Emit && _366 instanceof Emit) {
                                return new Emit(_365.value0(_366.value0), Prelude["<*>"](applyMealy(__dict_Monad_303))(_365.value1)(_366.value1));
                            };
                            throw new Error("Failed pattern match");
                        };
                    };
                    return Prelude["<*>"]((__dict_Monad_303["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())(Prelude["<$>"](((__dict_Monad_303["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(ap)(stepMealy(__dict_Monad_303)(s)(f)))(stepMealy(__dict_Monad_303)(s)(x));
                });
            };
        }, function () {
            return functorMealy(__dict_Monad_303);
        });
    };
    var bindMealy = function (__dict_Monad_301) {
        return new Prelude.Bind(function (m) {
            return function (f) {
                return mealy(__dict_Monad_301["__superclass_Prelude.Applicative_0"]())(function (s) {
                    var g = function (_372) {
                        if (_372 instanceof Emit) {
                            var h = function (_373) {
                                if (_373 instanceof Emit) {
                                    return new Emit(_373.value0, Prelude["<>"](semigroupMealy(__dict_Monad_301))(_373.value1)(Prelude[">>="](bindMealy(__dict_Monad_301))(_372.value1)(f)));
                                };
                                if (_373 instanceof Halt) {
                                    return Halt.value;
                                };
                                throw new Error("Failed pattern match");
                            };
                            return Prelude["<$>"](((__dict_Monad_301["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(h)(stepMealy(__dict_Monad_301)(s)(f(_372.value0)));
                        };
                        if (_372 instanceof Halt) {
                            return Prelude.pure(__dict_Monad_301["__superclass_Prelude.Applicative_0"]())(Halt.value);
                        };
                        throw new Error("Failed pattern match");
                    };
                    return Prelude[">>="](__dict_Monad_301["__superclass_Prelude.Bind_1"]())(stepMealy(__dict_Monad_301)(s)(m))(g);
                });
            };
        }, function () {
            return applyMealy(__dict_Monad_301);
        });
    };
    var zipWith = function (__dict_Monad_269) {
        return function (f) {
            return function (a) {
                return function (b) {
                    return Prelude["<*>"](applyMealy(__dict_Monad_269))(Prelude["<$>"](functorMealy(__dict_Monad_269))(f)(a))(b);
                };
            };
        };
    };
    var applicativeMealy = function (__dict_Monad_304) {
        return new Prelude.Applicative(function () {
            return applyMealy(__dict_Monad_304);
        }, function (t) {
            return pureMealy(__dict_Monad_304["__superclass_Prelude.Applicative_0"]())(function (s) {
                return new Emit(t, halt(__dict_Monad_304["__superclass_Prelude.Applicative_0"]()));
            });
        });
    };
    var monadMealy = function (__dict_Monad_274) {
        return new Prelude.Monad(function () {
            return applicativeMealy(__dict_Monad_274);
        }, function () {
            return bindMealy(__dict_Monad_274);
        });
    };
    var altMealy = function (__dict_Monad_306) {
        return new Control_Alt.Alt(function (x) {
            return function (y) {
                return mealy(__dict_Monad_306["__superclass_Prelude.Applicative_0"]())(function (s) {
                    var f = function (_374) {
                        if (_374 instanceof Halt) {
                            return stepMealy(__dict_Monad_306)(s)(y);
                        };
                        if (_374 instanceof Emit) {
                            return Prelude.pure(__dict_Monad_306["__superclass_Prelude.Applicative_0"]())(new Emit(_374.value0, _374.value1));
                        };
                        throw new Error("Failed pattern match");
                    };
                    return Prelude[">>="](__dict_Monad_306["__superclass_Prelude.Bind_1"]())(stepMealy(__dict_Monad_306)(s)(x))(f);
                });
            };
        }, function () {
            return functorMealy(__dict_Monad_306);
        });
    };
    var plusMealy = function (__dict_Monad_289) {
        return new Control_Plus.Plus(function () {
            return altMealy(__dict_Monad_289);
        }, halt(__dict_Monad_289["__superclass_Prelude.Applicative_0"]()));
    };
    var alternativeMealy = function (__dict_Monad_305) {
        return new Control_Alternative.Alternative(function () {
            return plusMealy(__dict_Monad_305);
        }, function () {
            return applicativeMealy(__dict_Monad_305);
        });
    };
    var monadPlus = function (__dict_Monad_273) {
        return new Control_MonadPlus.MonadPlus(function () {
            return alternativeMealy(__dict_Monad_273);
        }, function () {
            return monadMealy(__dict_Monad_273);
        });
    };
    return {
        Emit: Emit, 
        Halt: Halt, 
        MealyT: MealyT, 
        wrapEffect: wrapEffect, 
        ifte: ifte, 
        ">>-": $greater$greater$minus, 
        interleave: interleave, 
        msplit: msplit, 
        fromArray: fromArray, 
        fromMaybe: fromMaybe, 
        singleton: singleton, 
        collect: collect, 
        scanl: scanl, 
        zipWith: zipWith, 
        loop: loop, 
        drop: drop, 
        take: take, 
        halt: halt, 
        mealy: mealy, 
        pureMealy: pureMealy, 
        runMealy: runMealy, 
        stepMealy: stepMealy, 
        sink: sink, 
        source: source, 
        functorMealy: functorMealy, 
        applyMealy: applyMealy, 
        applicativeMealy: applicativeMealy, 
        profunctorMealy: profunctorMealy, 
        strongMealy: strongMealy, 
        semigroupMealy: semigroupMealy, 
        monoidMealy: monoidMealy, 
        semigroupoidMealy: semigroupoidMealy, 
        categoryMealy: categoryMealy, 
        arrowMealy: arrowMealy, 
        bindMealy: bindMealy, 
        monadMealy: monadMealy, 
        altMealy: altMealy, 
        plusMealy: plusMealy, 
        alternativeMealy: alternativeMealy, 
        monadPlus: monadPlus
    };
})();
var PS = PS || {};
PS.Data_Tuple_Nested = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Tuple = PS.Data_Tuple;
    var $div$bslash = function (a) {
        return function (b) {
            return new Data_Tuple.Tuple(a, b);
        };
    };
    var con9 = function (f) {
        return function (_382) {
            return f(_382.value0)(_382.value1.value0)(_382.value1.value1.value0)(_382.value1.value1.value1.value0)(_382.value1.value1.value1.value1.value0)(_382.value1.value1.value1.value1.value1.value0)(_382.value1.value1.value1.value1.value1.value1.value0)(_382.value1.value1.value1.value1.value1.value1.value1.value0)(_382.value1.value1.value1.value1.value1.value1.value1.value1);
        };
    };
    var con8 = function (f) {
        return function (_381) {
            return f(_381.value0)(_381.value1.value0)(_381.value1.value1.value0)(_381.value1.value1.value1.value0)(_381.value1.value1.value1.value1.value0)(_381.value1.value1.value1.value1.value1.value0)(_381.value1.value1.value1.value1.value1.value1.value0)(_381.value1.value1.value1.value1.value1.value1.value1);
        };
    };
    var con7 = function (f) {
        return function (_380) {
            return f(_380.value0)(_380.value1.value0)(_380.value1.value1.value0)(_380.value1.value1.value1.value0)(_380.value1.value1.value1.value1.value0)(_380.value1.value1.value1.value1.value1.value0)(_380.value1.value1.value1.value1.value1.value1);
        };
    };
    var con6 = function (f) {
        return function (_379) {
            return f(_379.value0)(_379.value1.value0)(_379.value1.value1.value0)(_379.value1.value1.value1.value0)(_379.value1.value1.value1.value1.value0)(_379.value1.value1.value1.value1.value1);
        };
    };
    var con5 = function (f) {
        return function (_378) {
            return f(_378.value0)(_378.value1.value0)(_378.value1.value1.value0)(_378.value1.value1.value1.value0)(_378.value1.value1.value1.value1);
        };
    };
    var con4 = function (f) {
        return function (_377) {
            return f(_377.value0)(_377.value1.value0)(_377.value1.value1.value0)(_377.value1.value1.value1);
        };
    };
    var con3 = function (f) {
        return function (_376) {
            return f(_376.value0)(_376.value1.value0)(_376.value1.value1);
        };
    };
    var con2 = function (f) {
        return function (_375) {
            return f(_375.value0)(_375.value1);
        };
    };
    var con10 = function (f) {
        return function (_383) {
            return f(_383.value0)(_383.value1.value0)(_383.value1.value1.value0)(_383.value1.value1.value1.value0)(_383.value1.value1.value1.value1.value0)(_383.value1.value1.value1.value1.value1.value0)(_383.value1.value1.value1.value1.value1.value1.value0)(_383.value1.value1.value1.value1.value1.value1.value1.value0)(_383.value1.value1.value1.value1.value1.value1.value1.value1.value0)(_383.value1.value1.value1.value1.value1.value1.value1.value1.value1);
        };
    };
    return {
        "/\\": $div$bslash, 
        con10: con10, 
        con9: con9, 
        con8: con8, 
        con7: con7, 
        con6: con6, 
        con5: con5, 
        con4: con4, 
        con3: con3, 
        con2: con2
    };
})();
var PS = PS || {};
PS.Data_Monoid_First = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Monoid = PS.Data_Monoid;
    var First = function (x) {
        return x;
    };
    var showFirst = function (__dict_Show_307) {
        return new Prelude.Show(function (_391) {
            return "First (" + (Prelude.show(Data_Maybe.showMaybe(__dict_Show_307))(_391) + ")");
        });
    };
    var semigroupFirst = new Prelude.Semigroup(function (_392) {
        return function (_393) {
            if (_392 instanceof Data_Maybe.Just) {
                return _392;
            };
            return _393;
        };
    });
    var runFirst = function (_384) {
        return _384;
    };
    var monoidFirst = new Data_Monoid.Monoid(function () {
        return semigroupFirst;
    }, Data_Maybe.Nothing.value);
    var eqFirst = function (__dict_Eq_309) {
        return new Prelude.Eq(function (_387) {
            return function (_388) {
                return Prelude["/="](Data_Maybe.eqMaybe(__dict_Eq_309))(_387)(_388);
            };
        }, function (_385) {
            return function (_386) {
                return Prelude["=="](Data_Maybe.eqMaybe(__dict_Eq_309))(_385)(_386);
            };
        });
    };
    var ordFirst = function (__dict_Ord_308) {
        return new Prelude.Ord(function () {
            return eqFirst(__dict_Ord_308["__superclass_Prelude.Eq_0"]());
        }, function (_389) {
            return function (_390) {
                return Prelude.compare(Data_Maybe.ordMaybe(__dict_Ord_308))(_389)(_390);
            };
        });
    };
    return {
        First: First, 
        runFirst: runFirst, 
        eqFirst: eqFirst, 
        ordFirst: ordFirst, 
        showFirst: showFirst, 
        semigroupFirst: semigroupFirst, 
        monoidFirst: monoidFirst
    };
})();
var PS = PS || {};
PS.Data_Foldable = (function () {
    "use strict";
    var Data_Monoid = PS.Data_Monoid;
    var Prelude = PS.Prelude;
    var Control_Apply = PS.Control_Apply;
    var Data_Monoid_First = PS.Data_Monoid_First;
    var Data_Either = PS.Data_Either;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Tuple = PS.Data_Tuple;
    
  function foldrArray(f) {
    return function(z) {
      return function(xs) {
        var acc = z;
        for (var i = xs.length - 1; i >= 0; --i) {
          acc = f(xs[i])(acc);
        }
        return acc;
      }
    }
  };
    
  function foldlArray(f) {
    return function(z) {
      return function(xs) {
        var acc = z;
        for (var i = 0, len = xs.length; i < len; ++i) {
          acc = f(acc)(xs[i]);
        }
        return acc;
      }
    }
  };
    var Foldable = function (foldMap, foldl, foldr) {
        this.foldMap = foldMap;
        this.foldl = foldl;
        this.foldr = foldr;
    };
    var foldr = function (dict) {
        return dict.foldr;
    };
    var traverse_ = function (__dict_Applicative_310) {
        return function (__dict_Foldable_311) {
            return function (f) {
                return foldr(__dict_Foldable_311)(Prelude["<<<"](Prelude.semigroupoidArr)(Control_Apply["*>"](__dict_Applicative_310["__superclass_Prelude.Apply_0"]()))(f))(Prelude.pure(__dict_Applicative_310)(Prelude.unit));
            };
        };
    };
    var for_ = function (__dict_Applicative_312) {
        return function (__dict_Foldable_313) {
            return Prelude.flip(traverse_(__dict_Applicative_312)(__dict_Foldable_313));
        };
    };
    var sequence_ = function (__dict_Applicative_314) {
        return function (__dict_Foldable_315) {
            return traverse_(__dict_Applicative_314)(__dict_Foldable_315)(Prelude.id(Prelude.categoryArr));
        };
    };
    var foldl = function (dict) {
        return dict.foldl;
    };
    var intercalate = function (__dict_Foldable_316) {
        return function (__dict_Monoid_317) {
            return function (sep) {
                return function (xs) {
                    var go = function (_419) {
                        return function (_420) {
                            if (_419.init) {
                                return {
                                    init: false, 
                                    acc: _420
                                };
                            };
                            return {
                                init: false, 
                                acc: Prelude["<>"](__dict_Monoid_317["__superclass_Prelude.Semigroup_0"]())(_419.acc)(Prelude["<>"](__dict_Monoid_317["__superclass_Prelude.Semigroup_0"]())(sep)(_420))
                            };
                        };
                    };
                    return (foldl(__dict_Foldable_316)(go)({
                        init: true, 
                        acc: Data_Monoid.mempty(__dict_Monoid_317)
                    })(xs)).acc;
                };
            };
        };
    };
    var mconcat = function (__dict_Foldable_318) {
        return function (__dict_Monoid_319) {
            return foldl(__dict_Foldable_318)(Prelude["<>"](__dict_Monoid_319["__superclass_Prelude.Semigroup_0"]()))(Data_Monoid.mempty(__dict_Monoid_319));
        };
    };
    var or = function (__dict_Foldable_320) {
        return foldl(__dict_Foldable_320)(Prelude["||"](Prelude.boolLikeBoolean))(false);
    };
    var product = function (__dict_Foldable_321) {
        return foldl(__dict_Foldable_321)(Prelude["*"](Prelude.numNumber))(1);
    };
    var sum = function (__dict_Foldable_322) {
        return foldl(__dict_Foldable_322)(Prelude["+"](Prelude.numNumber))(0);
    };
    var foldableTuple = new Foldable(function (__dict_Monoid_323) {
        return function (_417) {
            return function (_418) {
                return _417(_418.value1);
            };
        };
    }, function (_414) {
        return function (_415) {
            return function (_416) {
                return _414(_415)(_416.value1);
            };
        };
    }, function (_411) {
        return function (_412) {
            return function (_413) {
                return _411(_413.value1)(_412);
            };
        };
    });
    var foldableMaybe = new Foldable(function (__dict_Monoid_324) {
        return function (_409) {
            return function (_410) {
                if (_410 instanceof Data_Maybe.Nothing) {
                    return Data_Monoid.mempty(__dict_Monoid_324);
                };
                if (_410 instanceof Data_Maybe.Just) {
                    return _409(_410.value0);
                };
                throw new Error("Failed pattern match");
            };
        };
    }, function (_406) {
        return function (_407) {
            return function (_408) {
                if (_408 instanceof Data_Maybe.Nothing) {
                    return _407;
                };
                if (_408 instanceof Data_Maybe.Just) {
                    return _406(_407)(_408.value0);
                };
                throw new Error("Failed pattern match");
            };
        };
    }, function (_403) {
        return function (_404) {
            return function (_405) {
                if (_405 instanceof Data_Maybe.Nothing) {
                    return _404;
                };
                if (_405 instanceof Data_Maybe.Just) {
                    return _403(_405.value0)(_404);
                };
                throw new Error("Failed pattern match");
            };
        };
    });
    var foldableEither = new Foldable(function (__dict_Monoid_325) {
        return function (_401) {
            return function (_402) {
                if (_402 instanceof Data_Either.Left) {
                    return Data_Monoid.mempty(__dict_Monoid_325);
                };
                if (_402 instanceof Data_Either.Right) {
                    return _401(_402.value0);
                };
                throw new Error("Failed pattern match");
            };
        };
    }, function (_398) {
        return function (_399) {
            return function (_400) {
                if (_400 instanceof Data_Either.Left) {
                    return _399;
                };
                if (_400 instanceof Data_Either.Right) {
                    return _398(_399)(_400.value0);
                };
                throw new Error("Failed pattern match");
            };
        };
    }, function (_395) {
        return function (_396) {
            return function (_397) {
                if (_397 instanceof Data_Either.Left) {
                    return _396;
                };
                if (_397 instanceof Data_Either.Right) {
                    return _395(_397.value0)(_396);
                };
                throw new Error("Failed pattern match");
            };
        };
    });
    var foldableArray = new Foldable(function (__dict_Monoid_326) {
        return function (f) {
            return function (xs) {
                return foldr(foldableArray)(function (x) {
                    return function (acc) {
                        return Prelude["<>"](__dict_Monoid_326["__superclass_Prelude.Semigroup_0"]())(f(x))(acc);
                    };
                })(Data_Monoid.mempty(__dict_Monoid_326))(xs);
            };
        };
    }, function (f) {
        return function (z) {
            return function (xs) {
                return foldlArray(f)(z)(xs);
            };
        };
    }, function (f) {
        return function (z) {
            return function (xs) {
                return foldrArray(f)(z)(xs);
            };
        };
    });
    var foldMap = function (dict) {
        return dict.foldMap;
    };
    var lookup = function (__dict_Eq_327) {
        return function (__dict_Foldable_328) {
            return function (a) {
                return function (f) {
                    return Data_Monoid_First.runFirst(foldMap(__dict_Foldable_328)(Data_Monoid_First.monoidFirst)(function (_394) {
                        var _1871 = Prelude["=="](__dict_Eq_327)(a)(_394.value0);
                        if (_1871) {
                            return new Data_Maybe.Just(_394.value1);
                        };
                        if (!_1871) {
                            return Data_Maybe.Nothing.value;
                        };
                        throw new Error("Failed pattern match");
                    })(f));
                };
            };
        };
    };
    var fold = function (__dict_Foldable_329) {
        return function (__dict_Monoid_330) {
            return foldMap(__dict_Foldable_329)(__dict_Monoid_330)(Prelude.id(Prelude.categoryArr));
        };
    };
    var find = function (__dict_Foldable_331) {
        return function (p) {
            return function (f) {
                var _1875 = foldMap(__dict_Foldable_331)(Data_Monoid.monoidArray)(function (x) {
                    var _1874 = p(x);
                    if (_1874) {
                        return [ x ];
                    };
                    if (!_1874) {
                        return [  ];
                    };
                    throw new Error("Failed pattern match");
                })(f);
                if (_1875.length >= 1) {
                    var _1877 = _1875.slice(1);
                    return new Data_Maybe.Just(_1875[0]);
                };
                if (_1875.length === 0) {
                    return Data_Maybe.Nothing.value;
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var any = function (__dict_Foldable_332) {
        return function (p) {
            return Prelude["<<<"](Prelude.semigroupoidArr)(or(foldableArray))(foldMap(__dict_Foldable_332)(Data_Monoid.monoidArray)(function (x) {
                return [ p(x) ];
            }));
        };
    };
    var elem = function (__dict_Eq_333) {
        return function (__dict_Foldable_334) {
            return Prelude["<<<"](Prelude.semigroupoidArr)(any(__dict_Foldable_334))(Prelude["=="](__dict_Eq_333));
        };
    };
    var notElem = function (__dict_Eq_335) {
        return function (__dict_Foldable_336) {
            return function (x) {
                return Prelude["<<<"](Prelude.semigroupoidArr)(Prelude.not(Prelude.boolLikeBoolean))(elem(__dict_Eq_335)(__dict_Foldable_336)(x));
            };
        };
    };
    var and = function (__dict_Foldable_337) {
        return foldl(__dict_Foldable_337)(Prelude["&&"](Prelude.boolLikeBoolean))(true);
    };
    var all = function (__dict_Foldable_338) {
        return function (p) {
            return Prelude["<<<"](Prelude.semigroupoidArr)(and(foldableArray))(foldMap(__dict_Foldable_338)(Data_Monoid.monoidArray)(function (x) {
                return [ p(x) ];
            }));
        };
    };
    return {
        Foldable: Foldable, 
        foldlArray: foldlArray, 
        foldrArray: foldrArray, 
        lookup: lookup, 
        find: find, 
        notElem: notElem, 
        elem: elem, 
        product: product, 
        sum: sum, 
        all: all, 
        any: any, 
        or: or, 
        and: and, 
        intercalate: intercalate, 
        mconcat: mconcat, 
        sequence_: sequence_, 
        for_: for_, 
        traverse_: traverse_, 
        fold: fold, 
        foldMap: foldMap, 
        foldl: foldl, 
        foldr: foldr, 
        foldableArray: foldableArray, 
        foldableEither: foldableEither, 
        foldableMaybe: foldableMaybe, 
        foldableTuple: foldableTuple
    };
})();
var PS = PS || {};
PS.Data_Monoid_Last = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Monoid = PS.Data_Monoid;
    var Last = function (x) {
        return x;
    };
    var showLast = function (__dict_Show_339) {
        return new Prelude.Show(function (_428) {
            return "Last (" + (Prelude.show(Data_Maybe.showMaybe(__dict_Show_339))(_428) + ")");
        });
    };
    var semigroupLast = new Prelude.Semigroup(function (_429) {
        return function (_430) {
            if (_430 instanceof Data_Maybe.Just) {
                return _430;
            };
            if (_430 instanceof Data_Maybe.Nothing) {
                return _429;
            };
            throw new Error("Failed pattern match");
        };
    });
    var runLast = function (_421) {
        return _421;
    };
    var monoidLast = new Data_Monoid.Monoid(function () {
        return semigroupLast;
    }, Data_Maybe.Nothing.value);
    var eqLast = function (__dict_Eq_341) {
        return new Prelude.Eq(function (_424) {
            return function (_425) {
                return Prelude["/="](Data_Maybe.eqMaybe(__dict_Eq_341))(_424)(_425);
            };
        }, function (_422) {
            return function (_423) {
                return Prelude["=="](Data_Maybe.eqMaybe(__dict_Eq_341))(_422)(_423);
            };
        });
    };
    var ordLast = function (__dict_Ord_340) {
        return new Prelude.Ord(function () {
            return eqLast(__dict_Ord_340["__superclass_Prelude.Eq_0"]());
        }, function (_426) {
            return function (_427) {
                return Prelude.compare(Data_Maybe.ordMaybe(__dict_Ord_340))(_426)(_427);
            };
        });
    };
    return {
        Last: Last, 
        runLast: runLast, 
        eqLast: eqLast, 
        ordLast: ordLast, 
        showLast: showLast, 
        semigroupLast: semigroupLast, 
        monoidLast: monoidLast
    };
})();
var PS = PS || {};
PS.Data_StrMap_ST = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Control_Monad_ST = PS.Control_Monad_ST;
    var Data_Maybe = PS.Data_Maybe;
    
  function _new() {
    return {};
  }
  ;
    
  function peek(m) {
    return function(k) {
      return function() {
        return m[k];
      }
    }
  }
  ;
    
  function poke(m) {
    return function(k) {
      return function(v) {
        return function() {
          m[k] = v;
          return m;
        };
      };
    };
  }
  ;
    
  function _delete(m) {
    return function(k) {
      return function() {
        delete m[k];
        return m;
      };
    };
  }
  ;
    var $$new = _new;
    var $$delete = _delete;
    return {
        "delete": $$delete, 
        poke: poke, 
        peek: peek, 
        "new": $$new
    };
})();
var PS = PS || {};
PS.Data_String = (function () {
    "use strict";
    var Data_Function = PS.Data_Function;
    var Data_Char = PS.Data_Char;
    var Data_String_Unsafe = PS.Data_String_Unsafe;
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    
    function _charAt(i, s, Just, Nothing) {
      return i >= 0 && i < s.length ? Just(s.charAt(i)) : Nothing;
    }
    ;
    
    function _charCodeAt(i, s, Just, Nothing) {
      return i >= 0 && i < s.length ? Just(s.charCodeAt(i)) : Nothing;
    }
    ;
    
    function fromCharArray(a) {
      return a.join('');
    }
    ;
    
    function indexOf(x) {
      return function(s) {
        return s.indexOf(x);
      };
    }
    ;
    
    function indexOf$prime(x) {
      return function(startAt) {
        return function(s) {
          return s.indexOf(x, startAt);
        };
      };
    }
    ;
    
    function lastIndexOf(x) {
      return function(s) {
        return s.lastIndexOf(x);
      };
    }
    ;
    
    function lastIndexOf$prime(x) {
      return function(startAt) {
        return function(s) {
          return s.lastIndexOf(x, startAt);
        };
      };
    }
    ;
    
    function length(s) {
      return s.length;
    }
    ;
    
    function localeCompare(s1) {
      return function(s2) {
        return s1.localeCompare(s2);
      };
    }
    ;
    
    function replace(s1) {
      return function(s2) {
        return function(s3) {
          return s3.replace(s1, s2);
        };
      };
    }
    ;
    
    function take(n) {
      return function(s) {
        return s.substr(0, n);
      };
    }
    ;
    
    function drop(n) {
      return function(s) {
        return s.substr(n);
      };
    }
    ;
    
    function count(p){      
      return function(s){
        var i;
        for(i = 0; i < s.length && p(s.charAt(i)); i++){};
        return i;
      };      
    }
    ;
    
    function split(sep) {
      return function(s) {
        return s.split(sep);
      };
    }
    ;
    
    function toCharArray(s) {
      return s.split('');
    }
    ;
    
    function toLower(s) {
      return s.toLowerCase();
    }
    ;
    
    function toUpper(s) {
      return s.toUpperCase();
    }
    ;
    
    function trim(s) {
      return s.trim();
    }
    ;
    
    function joinWith(s) {
      return function(xs) {
        return xs.join(s);
      };
    }
    ;
    var takeWhile = function (p) {
        return function (s) {
            return take(count(p)(s))(s);
        };
    };
    var $$null = function (s) {
        return length(s) === 0;
    };
    var uncons = function (_431) {
        if ($$null(_431)) {
            return Data_Maybe.Nothing.value;
        };
        return new Data_Maybe.Just({
            head: Data_String_Unsafe.charAt(0)(_431), 
            tail: drop(1)(_431)
        });
    };
    var fromChar = Data_Char.charString;
    var singleton = fromChar;
    var dropWhile = function (p) {
        return function (s) {
            return drop(count(p)(s))(s);
        };
    };
    var charCodeAt = function (n) {
        return function (s) {
            return _charCodeAt(n, s, Data_Maybe.Just.create, Data_Maybe.Nothing.value);
        };
    };
    var charAt = function (n) {
        return function (s) {
            return _charAt(n, s, Data_Maybe.Just.create, Data_Maybe.Nothing.value);
        };
    };
    return {
        joinWith: joinWith, 
        trim: trim, 
        toUpper: toUpper, 
        toLower: toLower, 
        toCharArray: toCharArray, 
        split: split, 
        dropWhile: dropWhile, 
        drop: drop, 
        takeWhile: takeWhile, 
        take: take, 
        count: count, 
        replace: replace, 
        localeCompare: localeCompare, 
        singleton: singleton, 
        length: length, 
        uncons: uncons, 
        "null": $$null, 
        "lastIndexOf'": lastIndexOf$prime, 
        lastIndexOf: lastIndexOf, 
        "indexOf'": indexOf$prime, 
        indexOf: indexOf, 
        fromChar: fromChar, 
        fromCharArray: fromCharArray, 
        charCodeAt: charCodeAt, 
        charAt: charAt
    };
})();
var PS = PS || {};
PS.Data_String_Regex = (function () {
    "use strict";
    var Data_String = PS.Data_String;
    var Data_Function = PS.Data_Function;
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    
  function showRegex$prime(r) {
    return '' + r;
  }
  ;
    
  function regex$prime(s1) {
    return function(s2) {
      return new RegExp(s1, s2);
    };
  }
  ;
    
  function source(r) {
    return r.source;
  }
  ;
    
  function flags(r) {
    return {
      multiline: r.multiline,
      ignoreCase: r.ignoreCase,
      global: r.global,
      sticky: !!r.sticky,
      unicode: !!r.unicode
    };
  }
  ;
    
  function test(r) {
    return function(s) {
      return r.test(s);
    };
  }
  ;
    
  function _match(r, s, Just, Nothing) {
    var m = s.match(r);
    return m == null ? Nothing : Just(m);
  }
  ;
    
  function replace(r) {
    return function(s1) {
      return function(s2) {
        return s2.replace(r, s1);
      };
    };
  }
  ;
    
  function replace$prime(r) {
    return function(f) {
      return function(s2) {
        return s2.replace(r, function(match) {
          return f(match)(Array.prototype.splice.call(arguments, 1, arguments.length - 3));
        });
      };
    };
  }
  ;
    
  function search(r) {
    return function(s) {
      return s.search(r);
    };
  }
  ;
    
  function split(r) {
    return function(s) {
      return s.split(r);
    };
  }
  ;
    var showRegex = new Prelude.Show(showRegex$prime);
    var renderFlags = function (flags) {
        return (function () {
            if (flags.global) {
                return "g";
            };
            if (!flags.global) {
                return "";
            };
            throw new Error("Failed pattern match");
        })() + ((function () {
            if (flags.ignoreCase) {
                return "i";
            };
            if (!flags.ignoreCase) {
                return "";
            };
            throw new Error("Failed pattern match");
        })() + ((function () {
            if (flags.multiline) {
                return "m";
            };
            if (!flags.multiline) {
                return "";
            };
            throw new Error("Failed pattern match");
        })() + ((function () {
            if (flags.sticky) {
                return "y";
            };
            if (!flags.sticky) {
                return "";
            };
            throw new Error("Failed pattern match");
        })() + (function () {
            if (flags.unicode) {
                return "u";
            };
            if (!flags.unicode) {
                return "";
            };
            throw new Error("Failed pattern match");
        })())));
    };
    var regex = function (source) {
        return function (flags) {
            return regex$prime(source)(renderFlags(flags));
        };
    };
    var parseFlags = function (s) {
        return {
            global: Data_String.indexOf("g")(s) >= 0, 
            ignoreCase: Data_String.indexOf("i")(s) >= 0, 
            multiline: Data_String.indexOf("m")(s) >= 0, 
            sticky: Data_String.indexOf("y")(s) >= 0, 
            unicode: Data_String.indexOf("u")(s) >= 0
        };
    };
    var noFlags = {
        global: false, 
        ignoreCase: false, 
        multiline: false, 
        sticky: false, 
        unicode: false
    };
    var match = function (r) {
        return function (s) {
            return _match(r, s, Data_Maybe.Just.create, Data_Maybe.Nothing.value);
        };
    };
    return {
        noFlags: noFlags, 
        split: split, 
        search: search, 
        "replace'": replace$prime, 
        replace: replace, 
        match: match, 
        test: test, 
        parseFlags: parseFlags, 
        renderFlags: renderFlags, 
        flags: flags, 
        source: source, 
        regex: regex, 
        showRegex: showRegex
    };
})();
var PS = PS || {};
PS.Data_Traversable = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Array = PS.Data_Array;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Either = PS.Data_Either;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Maybe = PS.Data_Maybe;
    var StateR = function (x) {
        return x;
    };
    var StateL = function (x) {
        return x;
    };
    var Traversable = function (__superclass_Data$dotFoldable$dotFoldable_1, __superclass_Prelude$dotFunctor_0, sequence, traverse) {
        this["__superclass_Data.Foldable.Foldable_1"] = __superclass_Data$dotFoldable$dotFoldable_1;
        this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
        this.sequence = sequence;
        this.traverse = traverse;
    };
    var traverse = function (dict) {
        return dict.traverse;
    };
    var traversableTuple = new Traversable(function () {
        return Data_Foldable.foldableTuple;
    }, function () {
        return Data_Tuple.functorTuple;
    }, function (__dict_Applicative_343) {
        return function (_445) {
            return Prelude["<$>"]((__dict_Applicative_343["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Tuple.Tuple.create(_445.value0))(_445.value1);
        };
    }, function (__dict_Applicative_342) {
        return function (_443) {
            return function (_444) {
                return Prelude["<$>"]((__dict_Applicative_342["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Tuple.Tuple.create(_444.value0))(_443(_444.value1));
            };
        };
    });
    var traversableMaybe = new Traversable(function () {
        return Data_Foldable.foldableMaybe;
    }, function () {
        return Data_Maybe.functorMaybe;
    }, function (__dict_Applicative_345) {
        return function (_442) {
            if (_442 instanceof Data_Maybe.Nothing) {
                return Prelude.pure(__dict_Applicative_345)(Data_Maybe.Nothing.value);
            };
            if (_442 instanceof Data_Maybe.Just) {
                return Prelude["<$>"]((__dict_Applicative_345["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Maybe.Just.create)(_442.value0);
            };
            throw new Error("Failed pattern match");
        };
    }, function (__dict_Applicative_344) {
        return function (_440) {
            return function (_441) {
                if (_441 instanceof Data_Maybe.Nothing) {
                    return Prelude.pure(__dict_Applicative_344)(Data_Maybe.Nothing.value);
                };
                if (_441 instanceof Data_Maybe.Just) {
                    return Prelude["<$>"]((__dict_Applicative_344["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Maybe.Just.create)(_440(_441.value0));
                };
                throw new Error("Failed pattern match");
            };
        };
    });
    var traversableEither = new Traversable(function () {
        return Data_Foldable.foldableEither;
    }, function () {
        return Data_Either.functorEither;
    }, function (__dict_Applicative_347) {
        return function (_439) {
            if (_439 instanceof Data_Either.Left) {
                return Prelude.pure(__dict_Applicative_347)(new Data_Either.Left(_439.value0));
            };
            if (_439 instanceof Data_Either.Right) {
                return Prelude["<$>"]((__dict_Applicative_347["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Either.Right.create)(_439.value0);
            };
            throw new Error("Failed pattern match");
        };
    }, function (__dict_Applicative_346) {
        return function (_437) {
            return function (_438) {
                if (_438 instanceof Data_Either.Left) {
                    return Prelude.pure(__dict_Applicative_346)(new Data_Either.Left(_438.value0));
                };
                if (_438 instanceof Data_Either.Right) {
                    return Prelude["<$>"]((__dict_Applicative_346["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Either.Right.create)(_437(_438.value0));
                };
                throw new Error("Failed pattern match");
            };
        };
    });
    var stateR = function (_433) {
        return _433;
    };
    var stateL = function (_432) {
        return _432;
    };
    var sequence = function (dict) {
        return dict.sequence;
    };
    var traversableArray = new Traversable(function () {
        return Data_Foldable.foldableArray;
    }, function () {
        return Data_Array.functorArray;
    }, function (__dict_Applicative_349) {
        return function (_436) {
            if (_436.length === 0) {
                return Prelude.pure(__dict_Applicative_349)([  ]);
            };
            if (_436.length >= 1) {
                var _1918 = _436.slice(1);
                return Prelude["<*>"](__dict_Applicative_349["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((__dict_Applicative_349["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Prelude[":"])(_436[0]))(sequence(traversableArray)(__dict_Applicative_349)(_1918));
            };
            throw new Error("Failed pattern match");
        };
    }, function (__dict_Applicative_348) {
        return function (_434) {
            return function (_435) {
                if (_435.length === 0) {
                    return Prelude.pure(__dict_Applicative_348)([  ]);
                };
                if (_435.length >= 1) {
                    var _1922 = _435.slice(1);
                    return Prelude["<*>"](__dict_Applicative_348["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((__dict_Applicative_348["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Prelude[":"])(_434(_435[0])))(traverse(traversableArray)(__dict_Applicative_348)(_434)(_1922));
                };
                throw new Error("Failed pattern match");
            };
        };
    });
    var zipWithA = function (__dict_Applicative_350) {
        return function (f) {
            return function (xs) {
                return function (ys) {
                    return sequence(traversableArray)(__dict_Applicative_350)(Data_Array.zipWith(f)(xs)(ys));
                };
            };
        };
    };
    var functorStateR = new Prelude.Functor(function (f) {
        return function (k) {
            return StateR(function (s) {
                var _1923 = stateR(k)(s);
                return new Data_Tuple.Tuple(_1923.value0, f(_1923.value1));
            });
        };
    });
    var functorStateL = new Prelude.Functor(function (f) {
        return function (k) {
            return StateL(function (s) {
                var _1926 = stateL(k)(s);
                return new Data_Tuple.Tuple(_1926.value0, f(_1926.value1));
            });
        };
    });
    var $$for = function (__dict_Applicative_355) {
        return function (__dict_Traversable_356) {
            return function (x) {
                return function (f) {
                    return traverse(__dict_Traversable_356)(__dict_Applicative_355)(f)(x);
                };
            };
        };
    };
    var applyStateR = new Prelude.Apply(function (f) {
        return function (x) {
            return StateR(function (s) {
                var _1929 = stateR(x)(s);
                var _1930 = stateR(f)(_1929.value0);
                return new Data_Tuple.Tuple(_1930.value0, _1930.value1(_1929.value1));
            });
        };
    }, function () {
        return functorStateR;
    });
    var applyStateL = new Prelude.Apply(function (f) {
        return function (x) {
            return StateL(function (s) {
                var _1935 = stateL(f)(s);
                var _1936 = stateL(x)(_1935.value0);
                return new Data_Tuple.Tuple(_1936.value0, _1935.value1(_1936.value1));
            });
        };
    }, function () {
        return functorStateL;
    });
    var applicativeStateR = new Prelude.Applicative(function () {
        return applyStateR;
    }, function (a) {
        return StateR(function (s) {
            return new Data_Tuple.Tuple(s, a);
        });
    });
    var mapAccumR = function (__dict_Traversable_351) {
        return function (f) {
            return function (s0) {
                return function (xs) {
                    return stateR(traverse(__dict_Traversable_351)(applicativeStateR)(function (a) {
                        return StateR(function (s) {
                            return f(s)(a);
                        });
                    })(xs))(s0);
                };
            };
        };
    };
    var scanr = function (__dict_Traversable_352) {
        return function (f) {
            return function (b0) {
                return function (xs) {
                    return Data_Tuple.snd(mapAccumR(__dict_Traversable_352)(function (b) {
                        return function (a) {
                            var b$prime = f(a)(b);
                            return new Data_Tuple.Tuple(b$prime, b$prime);
                        };
                    })(b0)(xs));
                };
            };
        };
    };
    var applicativeStateL = new Prelude.Applicative(function () {
        return applyStateL;
    }, function (a) {
        return StateL(function (s) {
            return new Data_Tuple.Tuple(s, a);
        });
    });
    var mapAccumL = function (__dict_Traversable_353) {
        return function (f) {
            return function (s0) {
                return function (xs) {
                    return stateL(traverse(__dict_Traversable_353)(applicativeStateL)(function (a) {
                        return StateL(function (s) {
                            return f(s)(a);
                        });
                    })(xs))(s0);
                };
            };
        };
    };
    var scanl = function (__dict_Traversable_354) {
        return function (f) {
            return function (b0) {
                return function (xs) {
                    return Data_Tuple.snd(mapAccumL(__dict_Traversable_354)(function (b) {
                        return function (a) {
                            var b$prime = f(b)(a);
                            return new Data_Tuple.Tuple(b$prime, b$prime);
                        };
                    })(b0)(xs));
                };
            };
        };
    };
    return {
        Traversable: Traversable, 
        mapAccumR: mapAccumR, 
        mapAccumL: mapAccumL, 
        scanr: scanr, 
        scanl: scanl, 
        zipWithA: zipWithA, 
        "for": $$for, 
        sequence: sequence, 
        traverse: traverse, 
        traversableArray: traversableArray, 
        traversableEither: traversableEither, 
        traversableMaybe: traversableMaybe, 
        traversableTuple: traversableTuple
    };
})();
var PS = PS || {};
PS.Data_Const = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var Data_Contravariant = PS.Data_Contravariant;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Traversable = PS.Data_Traversable;
    var Const = function (x) {
        return x;
    };
    var showConst = function (__dict_Show_359) {
        return new Prelude.Show(function (_451) {
            return "Const (" + (Prelude.show(__dict_Show_359)(_451) + ")");
        });
    };
    var semigroupoidConst = new Prelude.Semigroupoid(function (_452) {
        return function (_453) {
            return _453;
        };
    });
    var semigroupConst = function (__dict_Semigroup_360) {
        return new Prelude.Semigroup(function (_454) {
            return function (_455) {
                return Prelude["<>"](__dict_Semigroup_360)(_454)(_455);
            };
        });
    };
    var monoidConst = function (__dict_Monoid_362) {
        return new Data_Monoid.Monoid(function () {
            return semigroupConst(__dict_Monoid_362["__superclass_Prelude.Semigroup_0"]());
        }, Data_Monoid.mempty(__dict_Monoid_362));
    };
    var getConst = function (_446) {
        return _446;
    };
    var functorConst = new Prelude.Functor(function (_456) {
        return function (_457) {
            return _457;
        };
    });
    var foldableConst = new Data_Foldable.Foldable(function (__dict_Monoid_363) {
        return function (_471) {
            return function (_472) {
                return Data_Monoid.mempty(__dict_Monoid_363);
            };
        };
    }, function (_468) {
        return function (_469) {
            return function (_470) {
                return _469;
            };
        };
    }, function (_465) {
        return function (_466) {
            return function (_467) {
                return _466;
            };
        };
    });
    var traversableConst = new Data_Traversable.Traversable(function () {
        return foldableConst;
    }, function () {
        return functorConst;
    }, function (__dict_Applicative_358) {
        return function (_475) {
            return Prelude.pure(__dict_Applicative_358)(_475);
        };
    }, function (__dict_Applicative_357) {
        return function (_473) {
            return function (_474) {
                return Prelude.pure(__dict_Applicative_357)(_474);
            };
        };
    });
    var eqConst = function (__dict_Eq_364) {
        return new Prelude.Eq(function (c) {
            return function (c$prime) {
                return !Prelude["=="](eqConst(__dict_Eq_364))(c)(c$prime);
            };
        }, function (_447) {
            return function (_448) {
                return Prelude["=="](__dict_Eq_364)(_447)(_448);
            };
        });
    };
    var ordConst = function (__dict_Ord_361) {
        return new Prelude.Ord(function () {
            return eqConst(__dict_Ord_361["__superclass_Prelude.Eq_0"]());
        }, function (_449) {
            return function (_450) {
                return Prelude.compare(__dict_Ord_361)(_449)(_450);
            };
        });
    };
    var contravariantConst = new Data_Contravariant.Contravariant(function (_463) {
        return function (_464) {
            return _464;
        };
    });
    var applyConst = function (__dict_Semigroup_366) {
        return new Prelude.Apply(function (_458) {
            return function (_459) {
                return Prelude["<>"](__dict_Semigroup_366)(_458)(_459);
            };
        }, function () {
            return functorConst;
        });
    };
    var bindConst = function (__dict_Semigroup_365) {
        return new Prelude.Bind(function (_460) {
            return function (_461) {
                return _460;
            };
        }, function () {
            return applyConst(__dict_Semigroup_365);
        });
    };
    var applicativeConst = function (__dict_Monoid_367) {
        return new Prelude.Applicative(function () {
            return applyConst(__dict_Monoid_367["__superclass_Prelude.Semigroup_0"]());
        }, function (_462) {
            return Data_Monoid.mempty(__dict_Monoid_367);
        });
    };
    return {
        Const: Const, 
        getConst: getConst, 
        eqConst: eqConst, 
        ordConst: ordConst, 
        showConst: showConst, 
        semigroupoidConst: semigroupoidConst, 
        semigroupConst: semigroupConst, 
        monoidConst: monoidConst, 
        functorConst: functorConst, 
        applyConst: applyConst, 
        bindConst: bindConst, 
        applicativeConst: applicativeConst, 
        contravariantConst: contravariantConst, 
        foldableConst: foldableConst, 
        traversableConst: traversableConst
    };
})();
var PS = PS || {};
PS.Data_Bifoldable = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Apply = PS.Control_Apply;
    var Data_Monoid_Any = PS.Data_Monoid_Any;
    var Data_Monoid_All = PS.Data_Monoid_All;
    var Data_Const = PS.Data_Const;
    var Data_Either = PS.Data_Either;
    var Data_Monoid = PS.Data_Monoid;
    var Data_Tuple = PS.Data_Tuple;
    var Control_Bind = PS.Control_Bind;
    var Bifoldable = function (bifoldMap, bifoldl, bifoldr) {
        this.bifoldMap = bifoldMap;
        this.bifoldl = bifoldl;
        this.bifoldr = bifoldr;
    };
    var bifoldr = function (dict) {
        return dict.bifoldr;
    };
    var bitraverse_ = function (__dict_Bifoldable_368) {
        return function (__dict_Applicative_369) {
            return function (f) {
                return function (g) {
                    return bifoldr(__dict_Bifoldable_368)(Prelude["<<<"](Prelude.semigroupoidArr)(Control_Apply["*>"](__dict_Applicative_369["__superclass_Prelude.Apply_0"]()))(f))(Prelude["<<<"](Prelude.semigroupoidArr)(Control_Apply["*>"](__dict_Applicative_369["__superclass_Prelude.Apply_0"]()))(g))(Prelude.pure(__dict_Applicative_369)(Prelude.unit));
                };
            };
        };
    };
    var bifor_ = function (__dict_Bifoldable_370) {
        return function (__dict_Applicative_371) {
            return function (t) {
                return function (f) {
                    return function (g) {
                        return bitraverse_(__dict_Bifoldable_370)(__dict_Applicative_371)(f)(g)(t);
                    };
                };
            };
        };
    };
    var bisequence_ = function (__dict_Bifoldable_372) {
        return function (__dict_Applicative_373) {
            return bitraverse_(__dict_Bifoldable_372)(__dict_Applicative_373)(Prelude.id(Prelude.categoryArr))(Prelude.id(Prelude.categoryArr));
        };
    };
    var bifoldl = function (dict) {
        return dict.bifoldl;
    };
    var bifoldableTuple = new Bifoldable(function (__dict_Monoid_374) {
        return function (_476) {
            return function (_477) {
                return function (_478) {
                    return Prelude["<>"](__dict_Monoid_374["__superclass_Prelude.Semigroup_0"]())(_476(_478.value0))(_477(_478.value1));
                };
            };
        };
    }, function (_483) {
        return function (_484) {
            return function (_485) {
                return function (_486) {
                    return _484(_483(_485)(_486.value0))(_486.value1);
                };
            };
        };
    }, function (_479) {
        return function (_480) {
            return function (_481) {
                return function (_482) {
                    return _479(_482.value0)(_480(_482.value1)(_481));
                };
            };
        };
    });
    var bifoldableEither = new Bifoldable(function (__dict_Monoid_375) {
        return function (_487) {
            return function (_488) {
                return function (_489) {
                    if (_489 instanceof Data_Either.Left) {
                        return _487(_489.value0);
                    };
                    if (_489 instanceof Data_Either.Right) {
                        return _488(_489.value0);
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
    }, function (_494) {
        return function (_495) {
            return function (_496) {
                return function (_497) {
                    if (_497 instanceof Data_Either.Left) {
                        return _494(_496)(_497.value0);
                    };
                    if (_497 instanceof Data_Either.Right) {
                        return _495(_496)(_497.value0);
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
    }, function (_490) {
        return function (_491) {
            return function (_492) {
                return function (_493) {
                    if (_493 instanceof Data_Either.Left) {
                        return _490(_493.value0)(_492);
                    };
                    if (_493 instanceof Data_Either.Right) {
                        return _491(_493.value0)(_492);
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
    });
    var bifoldableConst = new Bifoldable(function (__dict_Monoid_376) {
        return function (_498) {
            return function (_499) {
                return function (_500) {
                    return _498(_500);
                };
            };
        };
    }, function (_505) {
        return function (_506) {
            return function (_507) {
                return function (_508) {
                    return _505(_507)(_508);
                };
            };
        };
    }, function (_501) {
        return function (_502) {
            return function (_503) {
                return function (_504) {
                    return _501(_504)(_503);
                };
            };
        };
    });
    var bifoldMap = function (dict) {
        return dict.bifoldMap;
    };
    var bifold = function (__dict_Bifoldable_377) {
        return function (__dict_Monoid_378) {
            return bifoldMap(__dict_Bifoldable_377)(__dict_Monoid_378)(Prelude.id(Prelude.categoryArr))(Prelude.id(Prelude.categoryArr));
        };
    };
    var biany = function (__dict_Bifoldable_379) {
        return function (p) {
            return function (q) {
                return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Monoid_Any.runAny)(bifoldMap(__dict_Bifoldable_379)(Data_Monoid_Any.monoidAny)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Monoid_Any.Any)(p))(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Monoid_Any.Any)(q)));
            };
        };
    };
    var biall = function (__dict_Bifoldable_380) {
        return function (p) {
            return function (q) {
                return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Monoid_All.runAll)(bifoldMap(__dict_Bifoldable_380)(Data_Monoid_All.monoidAll)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Monoid_All.All)(p))(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Monoid_All.All)(q)));
            };
        };
    };
    return {
        Bifoldable: Bifoldable, 
        biall: biall, 
        biany: biany, 
        bisequence_: bisequence_, 
        bifor_: bifor_, 
        bitraverse_: bitraverse_, 
        bifold: bifold, 
        bifoldMap: bifoldMap, 
        bifoldl: bifoldl, 
        bifoldr: bifoldr, 
        bifoldableTuple: bifoldableTuple, 
        bifoldableEither: bifoldableEither, 
        bifoldableConst: bifoldableConst
    };
})();
var PS = PS || {};
PS.Data_Bifunctor = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Const = PS.Data_Const;
    var Data_Either = PS.Data_Either;
    var Data_Tuple = PS.Data_Tuple;
    var Bifunctor = function (bimap) {
        this.bimap = bimap;
    };
    var bimap = function (dict) {
        return dict.bimap;
    };
    var lmap = function (__dict_Bifunctor_381) {
        return function (f) {
            return bimap(__dict_Bifunctor_381)(f)(Prelude.id(Prelude.categoryArr));
        };
    };
    var rmap = function (__dict_Bifunctor_382) {
        return bimap(__dict_Bifunctor_382)(Prelude.id(Prelude.categoryArr));
    };
    var bifunctorTuple = new Bifunctor(function (_512) {
        return function (_513) {
            return function (_514) {
                return new Data_Tuple.Tuple(_512(_514.value0), _513(_514.value1));
            };
        };
    });
    var bifunctorEither = new Bifunctor(function (_509) {
        return function (_510) {
            return function (_511) {
                if (_511 instanceof Data_Either.Left) {
                    return new Data_Either.Left(_509(_511.value0));
                };
                if (_511 instanceof Data_Either.Right) {
                    return new Data_Either.Right(_510(_511.value0));
                };
                throw new Error("Failed pattern match");
            };
        };
    });
    var bifunctorConst = new Bifunctor(function (_515) {
        return function (_516) {
            return function (_517) {
                return _515(_517);
            };
        };
    });
    return {
        Bifunctor: Bifunctor, 
        rmap: rmap, 
        lmap: lmap, 
        bimap: bimap, 
        bifunctorEither: bifunctorEither, 
        bifunctorTuple: bifunctorTuple, 
        bifunctorConst: bifunctorConst
    };
})();
var PS = PS || {};
PS.Control_Biapply = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Bifunctor = PS.Data_Bifunctor;
    var Data_Const = PS.Data_Const;
    var Data_Tuple = PS.Data_Tuple;
    var Control_Apply = PS.Control_Apply;
    var Biapply = function ($less$less$times$greater$greater, __superclass_Data$dotBifunctor$dotBifunctor_0) {
        this["<<*>>"] = $less$less$times$greater$greater;
        this["__superclass_Data.Bifunctor.Bifunctor_0"] = __superclass_Data$dotBifunctor$dotBifunctor_0;
    };
    var $less$less$times$greater$greater = function (dict) {
        return dict["<<*>>"];
    };
    var $less$less$dollar$greater$greater = Prelude.id(Prelude.categoryArr);
    var $less$less$times = function (__dict_Biapply_383) {
        return function (a) {
            return function (b) {
                return $less$less$times$greater$greater(__dict_Biapply_383)($less$less$dollar$greater$greater(Data_Bifunctor.bimap(__dict_Biapply_383["__superclass_Data.Bifunctor.Bifunctor_0"]())(Prelude["const"])(Prelude["const"]))(a))(b);
            };
        };
    };
    var $times$greater$greater = function (__dict_Biapply_384) {
        return function (a) {
            return function (b) {
                return $less$less$times$greater$greater(__dict_Biapply_384)($less$less$dollar$greater$greater(Data_Bifunctor.bimap(__dict_Biapply_384["__superclass_Data.Bifunctor.Bifunctor_0"]())(Prelude["const"](Prelude.id(Prelude.categoryArr)))(Prelude["const"](Prelude.id(Prelude.categoryArr))))(a))(b);
            };
        };
    };
    var bilift3 = function (__dict_Biapply_385) {
        return function (f) {
            return function (g) {
                return function (a) {
                    return function (b) {
                        return function (c) {
                            return $less$less$times$greater$greater(__dict_Biapply_385)($less$less$times$greater$greater(__dict_Biapply_385)($less$less$dollar$greater$greater(Data_Bifunctor.bimap(__dict_Biapply_385["__superclass_Data.Bifunctor.Bifunctor_0"]())(f)(g))(a))(b))(c);
                        };
                    };
                };
            };
        };
    };
    var bilift2 = function (__dict_Biapply_386) {
        return function (f) {
            return function (g) {
                return function (a) {
                    return function (b) {
                        return $less$less$times$greater$greater(__dict_Biapply_386)($less$less$dollar$greater$greater(Data_Bifunctor.bimap(__dict_Biapply_386["__superclass_Data.Bifunctor.Bifunctor_0"]())(f)(g))(a))(b);
                    };
                };
            };
        };
    };
    var biapplyTuple = new Biapply(function (_518) {
        return function (_519) {
            return new Data_Tuple.Tuple(_518.value0(_519.value0), _518.value1(_519.value1));
        };
    }, function () {
        return Data_Bifunctor.bifunctorTuple;
    });
    var biapplyConst = new Biapply(function (_520) {
        return function (_521) {
            return _520(_521);
        };
    }, function () {
        return Data_Bifunctor.bifunctorConst;
    });
    return {
        Biapply: Biapply, 
        bilift3: bilift3, 
        bilift2: bilift2, 
        "<<*": $less$less$times, 
        "*>>": $times$greater$greater, 
        "<<*>>": $less$less$times$greater$greater, 
        "<<$>>": $less$less$dollar$greater$greater, 
        biapplyTuple: biapplyTuple, 
        biapplyConst: biapplyConst
    };
})();
var PS = PS || {};
PS.Control_Biapplicative = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Const = PS.Data_Const;
    var Data_Tuple = PS.Data_Tuple;
    var Control_Biapply = PS.Control_Biapply;
    var Biapplicative = function (__superclass_Control$dotBiapply$dotBiapply_0, bipure) {
        this["__superclass_Control.Biapply.Biapply_0"] = __superclass_Control$dotBiapply$dotBiapply_0;
        this.bipure = bipure;
    };
    var bipure = function (dict) {
        return dict.bipure;
    };
    var biapplicativeTuple = new Biapplicative(function () {
        return Control_Biapply.biapplyTuple;
    }, Data_Tuple.Tuple.create);
    var biapplicativeConst = new Biapplicative(function () {
        return Control_Biapply.biapplyConst;
    }, function (_522) {
        return function (_523) {
            return _522;
        };
    });
    return {
        Biapplicative: Biapplicative, 
        bipure: bipure, 
        biapplicativeTuple: biapplicativeTuple, 
        biapplicativeConst: biapplicativeConst
    };
})();
var PS = PS || {};
PS.Data_Bitraversable = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Bifoldable = PS.Data_Bifoldable;
    var Data_Bifunctor = PS.Data_Bifunctor;
    var Data_Const = PS.Data_Const;
    var Data_Either = PS.Data_Either;
    var Data_Tuple = PS.Data_Tuple;
    var Bitraversable = function (__superclass_Data$dotBifoldable$dotBifoldable_1, __superclass_Data$dotBifunctor$dotBifunctor_0, bisequence, bitraverse) {
        this["__superclass_Data.Bifoldable.Bifoldable_1"] = __superclass_Data$dotBifoldable$dotBifoldable_1;
        this["__superclass_Data.Bifunctor.Bifunctor_0"] = __superclass_Data$dotBifunctor$dotBifunctor_0;
        this.bisequence = bisequence;
        this.bitraverse = bitraverse;
    };
    var bitraverse = function (dict) {
        return dict.bitraverse;
    };
    var bitraversableTuple = new Bitraversable(function () {
        return Data_Bifoldable.bifoldableTuple;
    }, function () {
        return Data_Bifunctor.bifunctorTuple;
    }, function (__dict_Applicative_388) {
        return function (_527) {
            return Prelude["<*>"](__dict_Applicative_388["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((__dict_Applicative_388["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Tuple.Tuple.create)(_527.value0))(_527.value1);
        };
    }, function (__dict_Applicative_387) {
        return function (_524) {
            return function (_525) {
                return function (_526) {
                    return Prelude["<*>"](__dict_Applicative_387["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((__dict_Applicative_387["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Tuple.Tuple.create)(_524(_526.value0)))(_525(_526.value1));
                };
            };
        };
    });
    var bitraversableEither = new Bitraversable(function () {
        return Data_Bifoldable.bifoldableEither;
    }, function () {
        return Data_Bifunctor.bifunctorEither;
    }, function (__dict_Applicative_390) {
        return function (_531) {
            if (_531 instanceof Data_Either.Left) {
                return Prelude["<$>"]((__dict_Applicative_390["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Either.Left.create)(_531.value0);
            };
            if (_531 instanceof Data_Either.Right) {
                return Prelude["<$>"]((__dict_Applicative_390["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Either.Right.create)(_531.value0);
            };
            throw new Error("Failed pattern match");
        };
    }, function (__dict_Applicative_389) {
        return function (_528) {
            return function (_529) {
                return function (_530) {
                    if (_530 instanceof Data_Either.Left) {
                        return Prelude["<$>"]((__dict_Applicative_389["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Either.Left.create)(_528(_530.value0));
                    };
                    if (_530 instanceof Data_Either.Right) {
                        return Prelude["<$>"]((__dict_Applicative_389["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Either.Right.create)(_529(_530.value0));
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
    });
    var bitraversableConst = new Bitraversable(function () {
        return Data_Bifoldable.bifoldableConst;
    }, function () {
        return Data_Bifunctor.bifunctorConst;
    }, function (__dict_Applicative_392) {
        return function (_535) {
            return Prelude["<$>"]((__dict_Applicative_392["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Const.Const)(_535);
        };
    }, function (__dict_Applicative_391) {
        return function (_532) {
            return function (_533) {
                return function (_534) {
                    return Prelude["<$>"]((__dict_Applicative_391["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Const.Const)(_532(_534));
                };
            };
        };
    });
    var bisequence = function (dict) {
        return dict.bisequence;
    };
    var bifor = function (__dict_Bitraversable_393) {
        return function (__dict_Applicative_394) {
            return function (t) {
                return function (f) {
                    return function (g) {
                        return bitraverse(__dict_Bitraversable_393)(__dict_Applicative_394)(f)(g)(t);
                    };
                };
            };
        };
    };
    return {
        Bitraversable: Bitraversable, 
        bifor: bifor, 
        bisequence: bisequence, 
        bitraverse: bitraverse, 
        bitraversableTuple: bitraversableTuple, 
        bitraversableEither: bitraversableEither, 
        bitraversableConst: bitraversableConst
    };
})();
var PS = PS || {};
PS.Data_Bifunctor_Clown = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Monoid = PS.Data_Monoid;
    var Data_Traversable = PS.Data_Traversable;
    var Data_Bitraversable = PS.Data_Bitraversable;
    var Data_Bifoldable = PS.Data_Bifoldable;
    var Data_Bifunctor = PS.Data_Bifunctor;
    var Control_Apply = PS.Control_Apply;
    var Control_Biapplicative = PS.Control_Biapplicative;
    var Control_Biapply = PS.Control_Biapply;
    var Clown = (function () {
        function Clown(value0) {
            this.value0 = value0;
        };
        Clown.create = function (value0) {
            return new Clown(value0);
        };
        return Clown;
    })();
    var runClown = function (_536) {
        return _536.value0;
    };
    var clownFunctor = new Prelude.Functor(function (_539) {
        return Prelude["<<<"](Prelude.semigroupoidArr)(Clown.create)(runClown);
    });
    var clownFoldable = new Data_Foldable.Foldable(function (__dict_Monoid_397) {
        return function (_556) {
            return function (_557) {
                return Data_Monoid.mempty(__dict_Monoid_397);
            };
        };
    }, function (_554) {
        return function (_555) {
            return Prelude["const"](_555);
        };
    }, function (_552) {
        return function (_553) {
            return Prelude["const"](_553);
        };
    });
    var clownTraversable = new Data_Traversable.Traversable(function () {
        return clownFoldable;
    }, function () {
        return clownFunctor;
    }, function (__dict_Applicative_396) {
        return Data_Traversable.traverse(clownTraversable)(__dict_Applicative_396)(Prelude.id(Prelude.categoryArr));
    }, function (__dict_Applicative_395) {
        return function (_560) {
            return Prelude["<<<"](Prelude.semigroupoidArr)(Prelude.pure(__dict_Applicative_395))(Prelude["<<<"](Prelude.semigroupoidArr)(Clown.create)(runClown));
        };
    });
    var clownBifunctor = function (__dict_Functor_401) {
        return new Data_Bifunctor.Bifunctor(function (_537) {
            return function (_538) {
                return Prelude["<<<"](Prelude.semigroupoidArr)(Clown.create)(Prelude["<<<"](Prelude.semigroupoidArr)(Prelude["<$>"](__dict_Functor_401)(_537))(runClown));
            };
        });
    };
    var clownBifoldable = function (__dict_Foldable_402) {
        return new Data_Bifoldable.Bifoldable(function (__dict_Monoid_403) {
            return function (_550) {
                return function (_551) {
                    return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Foldable.foldMap(__dict_Foldable_402)(__dict_Monoid_403)(_550))(runClown);
                };
            };
        }, function (_547) {
            return function (_548) {
                return function (_549) {
                    return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Foldable.foldl(__dict_Foldable_402)(_547)(_549))(runClown);
                };
            };
        }, function (_544) {
            return function (_545) {
                return function (_546) {
                    return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Foldable.foldr(__dict_Foldable_402)(_544)(_546))(runClown);
                };
            };
        });
    };
    var clownBitraversable = function (__dict_Traversable_398) {
        return new Data_Bitraversable.Bitraversable(function () {
            return clownBifoldable(__dict_Traversable_398["__superclass_Data.Foldable.Foldable_1"]());
        }, function () {
            return clownBifunctor(__dict_Traversable_398["__superclass_Prelude.Functor_0"]());
        }, function (__dict_Applicative_400) {
            return Data_Bitraversable.bitraverse(clownBitraversable(__dict_Traversable_398))(__dict_Applicative_400)(Prelude.id(Prelude.categoryArr))(Prelude.id(Prelude.categoryArr));
        }, function (__dict_Applicative_399) {
            return function (_558) {
                return function (_559) {
                    return Prelude["<<<"](Prelude.semigroupoidArr)(Prelude["<$>"]((__dict_Applicative_399["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Clown.create))(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Traversable.traverse(__dict_Traversable_398)(__dict_Applicative_399)(_558))(runClown));
                };
            };
        });
    };
    var clownBiapply = function (__dict_Apply_404) {
        return new Control_Biapply.Biapply(function (_540) {
            return function (_541) {
                return new Clown(Prelude["<*>"](__dict_Apply_404)(_540.value0)(_541.value0));
            };
        }, function () {
            return clownBifunctor(__dict_Apply_404["__superclass_Prelude.Functor_0"]());
        });
    };
    var clownBiapplicative = function (__dict_Applicative_405) {
        return new Control_Biapplicative.Biapplicative(function () {
            return clownBiapply(__dict_Applicative_405["__superclass_Prelude.Apply_0"]());
        }, function (_542) {
            return function (_543) {
                return new Clown(Prelude.pure(__dict_Applicative_405)(_542));
            };
        });
    };
    return {
        Clown: Clown, 
        runClown: runClown, 
        clownBifunctor: clownBifunctor, 
        clownFunctor: clownFunctor, 
        clownBiapply: clownBiapply, 
        clownBiapplicative: clownBiapplicative, 
        clownBifoldable: clownBifoldable, 
        clownFoldable: clownFoldable, 
        clownBitraversable: clownBitraversable, 
        clownTraversable: clownTraversable
    };
})();
var PS = PS || {};
PS.Data_Bifunctor_Flip = (function () {
    "use strict";
    var Data_Bifunctor = PS.Data_Bifunctor;
    var Control_Biapplicative = PS.Control_Biapplicative;
    var Data_Bifoldable = PS.Data_Bifoldable;
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var Data_Bitraversable = PS.Data_Bitraversable;
    var Data_Traversable = PS.Data_Traversable;
    var Data_Foldable = PS.Data_Foldable;
    var Control_Apply = PS.Control_Apply;
    var Control_Biapply = PS.Control_Biapply;
    var Flip = (function () {
        function Flip(value0) {
            this.value0 = value0;
        };
        Flip.create = function (value0) {
            return new Flip(value0);
        };
        return Flip;
    })();
    var runFlip = function (_561) {
        return _561.value0;
    };
    var flipFunctor = function (__dict_Bifunctor_409) {
        return new Prelude.Functor(function (f) {
            return Prelude["<<<"](Prelude.semigroupoidArr)(Flip.create)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Bifunctor.lmap(__dict_Bifunctor_409)(f))(runFlip));
        });
    };
    var flipFoldable = function (__dict_Bifoldable_410) {
        return new Data_Foldable.Foldable(function (__dict_Monoid_411) {
            return function (f) {
                return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Bifoldable.bifoldMap(__dict_Bifoldable_410)(__dict_Monoid_411)(f)(Prelude["const"](Data_Monoid.mempty(__dict_Monoid_411))))(runFlip);
            };
        }, function (f) {
            return function (z) {
                return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Bifoldable.bifoldl(__dict_Bifoldable_410)(f)(Prelude["const"])(z))(runFlip);
            };
        }, function (f) {
            return function (z) {
                return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Bifoldable.bifoldr(__dict_Bifoldable_410)(f)(Prelude.flip(Prelude["const"]))(z))(runFlip);
            };
        });
    };
    var flipTraversable = function (__dict_Bitraversable_406) {
        return new Data_Traversable.Traversable(function () {
            return flipFoldable(__dict_Bitraversable_406["__superclass_Data.Bifoldable.Bifoldable_1"]());
        }, function () {
            return flipFunctor(__dict_Bitraversable_406["__superclass_Data.Bifunctor.Bifunctor_0"]());
        }, function (__dict_Applicative_408) {
            return Data_Traversable.traverse(flipTraversable(__dict_Bitraversable_406))(__dict_Applicative_408)(Prelude.id(Prelude.categoryArr));
        }, function (__dict_Applicative_407) {
            return function (f) {
                return Prelude["<<<"](Prelude.semigroupoidArr)(Prelude["<$>"]((__dict_Applicative_407["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Flip.create))(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Bitraversable.bitraverse(__dict_Bitraversable_406)(__dict_Applicative_407)(f)(Prelude.pure(__dict_Applicative_407)))(runFlip));
            };
        });
    };
    var flipBifunctor = function (__dict_Bifunctor_415) {
        return new Data_Bifunctor.Bifunctor(function (f) {
            return function (g) {
                return Prelude["<<<"](Prelude.semigroupoidArr)(Flip.create)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Bifunctor.bimap(__dict_Bifunctor_415)(g)(f))(runFlip));
            };
        });
    };
    var flipBifoldable = function (__dict_Bifoldable_416) {
        return new Data_Bifoldable.Bifoldable(function (__dict_Monoid_417) {
            return function (f) {
                return function (g) {
                    return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Bifoldable.bifoldMap(__dict_Bifoldable_416)(__dict_Monoid_417)(g)(f))(runFlip);
                };
            };
        }, function (f) {
            return function (g) {
                return function (z) {
                    return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Bifoldable.bifoldl(__dict_Bifoldable_416)(g)(f)(z))(runFlip);
                };
            };
        }, function (f) {
            return function (g) {
                return function (z) {
                    return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Bifoldable.bifoldr(__dict_Bifoldable_416)(g)(f)(z))(runFlip);
                };
            };
        });
    };
    var flipBitraversable = function (__dict_Bitraversable_412) {
        return new Data_Bitraversable.Bitraversable(function () {
            return flipBifoldable(__dict_Bitraversable_412["__superclass_Data.Bifoldable.Bifoldable_1"]());
        }, function () {
            return flipBifunctor(__dict_Bitraversable_412["__superclass_Data.Bifunctor.Bifunctor_0"]());
        }, function (__dict_Applicative_414) {
            return Data_Bitraversable.bitraverse(flipBitraversable(__dict_Bitraversable_412))(__dict_Applicative_414)(Prelude.id(Prelude.categoryArr))(Prelude.id(Prelude.categoryArr));
        }, function (__dict_Applicative_413) {
            return function (f) {
                return function (g) {
                    return Prelude["<<<"](Prelude.semigroupoidArr)(Prelude["<$>"]((__dict_Applicative_413["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Flip.create))(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Bitraversable.bitraverse(__dict_Bitraversable_412)(__dict_Applicative_413)(g)(f))(runFlip));
                };
            };
        });
    };
    var flipBiapply = function (__dict_Biapply_418) {
        return new Control_Biapply.Biapply(function (_562) {
            return function (_563) {
                return new Flip(Control_Biapply["<<*>>"](__dict_Biapply_418)(_562.value0)(_563.value0));
            };
        }, function () {
            return flipBifunctor(__dict_Biapply_418["__superclass_Data.Bifunctor.Bifunctor_0"]());
        });
    };
    var flipBiapplicative = function (__dict_Biapplicative_419) {
        return new Control_Biapplicative.Biapplicative(function () {
            return flipBiapply(__dict_Biapplicative_419["__superclass_Control.Biapply.Biapply_0"]());
        }, function (a) {
            return function (b) {
                return new Flip(Control_Biapplicative.bipure(__dict_Biapplicative_419)(b)(a));
            };
        });
    };
    return {
        Flip: Flip, 
        runFlip: runFlip, 
        flipBifunctor: flipBifunctor, 
        flipFunctor: flipFunctor, 
        flipBiapply: flipBiapply, 
        flipBiapplicative: flipBiapplicative, 
        flipBifoldable: flipBifoldable, 
        flipFoldable: flipFoldable, 
        flipBitraversable: flipBitraversable, 
        flipTraversable: flipTraversable
    };
})();
var PS = PS || {};
PS.Data_Bifunctor_Join = (function () {
    "use strict";
    var Data_Bifunctor = PS.Data_Bifunctor;
    var Control_Biapplicative = PS.Control_Biapplicative;
    var Data_Bifoldable = PS.Data_Bifoldable;
    var Data_Bitraversable = PS.Data_Bitraversable;
    var Data_Traversable = PS.Data_Traversable;
    var Prelude = PS.Prelude;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Monoid = PS.Data_Monoid;
    var Control_Apply = PS.Control_Apply;
    var Control_Biapply = PS.Control_Biapply;
    var Join = (function () {
        function Join(value0) {
            this.value0 = value0;
        };
        Join.create = function (value0) {
            return new Join(value0);
        };
        return Join;
    })();
    var runJoin = function (_564) {
        return _564.value0;
    };
    var joinFunctor = function (__dict_Bifunctor_423) {
        return new Prelude.Functor(function (f) {
            return Prelude["<$>"](Prelude.functorArr)(Join.create)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Bifunctor.bimap(__dict_Bifunctor_423)(f)(f))(runJoin));
        });
    };
    var joinFoldable = function (__dict_Bifoldable_424) {
        return new Data_Foldable.Foldable(function (__dict_Monoid_425) {
            return function (f) {
                return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Bifoldable.bifoldMap(__dict_Bifoldable_424)(__dict_Monoid_425)(f)(f))(runJoin);
            };
        }, function (f) {
            return function (z) {
                return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Bifoldable.bifoldl(__dict_Bifoldable_424)(f)(f)(z))(runJoin);
            };
        }, function (f) {
            return function (z) {
                return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Bifoldable.bifoldr(__dict_Bifoldable_424)(f)(f)(z))(runJoin);
            };
        });
    };
    var joinTraversable = function (__dict_Bitraversable_420) {
        return new Data_Traversable.Traversable(function () {
            return joinFoldable(__dict_Bitraversable_420["__superclass_Data.Bifoldable.Bifoldable_1"]());
        }, function () {
            return joinFunctor(__dict_Bitraversable_420["__superclass_Data.Bifunctor.Bifunctor_0"]());
        }, function (__dict_Applicative_422) {
            return Data_Traversable.traverse(joinTraversable(__dict_Bitraversable_420))(__dict_Applicative_422)(Prelude.id(Prelude.categoryArr));
        }, function (__dict_Applicative_421) {
            return function (_567) {
                return function (_568) {
                    return Prelude["<$>"]((__dict_Applicative_421["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Join.create)(Data_Bitraversable.bitraverse(__dict_Bitraversable_420)(__dict_Applicative_421)(_567)(_567)(_568.value0));
                };
            };
        });
    };
    var joinApply = function (__dict_Biapply_426) {
        return new Prelude.Apply(function (_565) {
            return function (_566) {
                return new Join(Control_Biapply["<<*>>"](__dict_Biapply_426)(_565.value0)(_566.value0));
            };
        }, function () {
            return joinFunctor(__dict_Biapply_426["__superclass_Data.Bifunctor.Bifunctor_0"]());
        });
    };
    var joinApplicative = function (__dict_Biapplicative_427) {
        return new Prelude.Applicative(function () {
            return joinApply(__dict_Biapplicative_427["__superclass_Control.Biapply.Biapply_0"]());
        }, function (a) {
            return new Join(Control_Biapplicative.bipure(__dict_Biapplicative_427)(a)(a));
        });
    };
    return {
        Join: Join, 
        runJoin: runJoin, 
        joinFunctor: joinFunctor, 
        joinApply: joinApply, 
        joinApplicative: joinApplicative, 
        joinFoldable: joinFoldable, 
        joinTraversable: joinTraversable
    };
})();
var PS = PS || {};
PS.Data_Bifunctor_Joker = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Traversable = PS.Data_Traversable;
    var Data_Bitraversable = PS.Data_Bitraversable;
    var Data_Bifoldable = PS.Data_Bifoldable;
    var Data_Bifunctor = PS.Data_Bifunctor;
    var Data_Monoid = PS.Data_Monoid;
    var Control_Apply = PS.Control_Apply;
    var Control_Biapplicative = PS.Control_Biapplicative;
    var Control_Biapply = PS.Control_Biapply;
    var Joker = (function () {
        function Joker(value0) {
            this.value0 = value0;
        };
        Joker.create = function (value0) {
            return new Joker(value0);
        };
        return Joker;
    })();
    var runJoker = function (_569) {
        return _569.value0;
    };
    var jokerFunctor = function (__dict_Functor_431) {
        return new Prelude.Functor(function (g) {
            return Prelude["<<<"](Prelude.semigroupoidArr)(Joker.create)(Prelude["<<<"](Prelude.semigroupoidArr)(Prelude["<$>"](__dict_Functor_431)(g))(runJoker));
        });
    };
    var jokerFoldable = function (__dict_Foldable_432) {
        return new Data_Foldable.Foldable(function (__dict_Monoid_433) {
            return function (g) {
                return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Foldable.foldMap(__dict_Foldable_432)(__dict_Monoid_433)(g))(runJoker);
            };
        }, function (g) {
            return function (z) {
                return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Foldable.foldl(__dict_Foldable_432)(g)(z))(runJoker);
            };
        }, function (g) {
            return function (z) {
                return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Foldable.foldr(__dict_Foldable_432)(g)(z))(runJoker);
            };
        });
    };
    var jokerTraversable = function (__dict_Traversable_428) {
        return new Data_Traversable.Traversable(function () {
            return jokerFoldable(__dict_Traversable_428["__superclass_Data.Foldable.Foldable_1"]());
        }, function () {
            return jokerFunctor(__dict_Traversable_428["__superclass_Prelude.Functor_0"]());
        }, function (__dict_Applicative_430) {
            return Data_Traversable.traverse(jokerTraversable(__dict_Traversable_428))(__dict_Applicative_430)(Prelude.id(Prelude.categoryArr));
        }, function (__dict_Applicative_429) {
            return function (g) {
                return Prelude["<<<"](Prelude.semigroupoidArr)(Prelude["<$>"]((__dict_Applicative_429["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Joker.create))(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Traversable.traverse(__dict_Traversable_428)(__dict_Applicative_429)(g))(runJoker));
            };
        });
    };
    var jokerBifunctor = function (__dict_Functor_437) {
        return new Data_Bifunctor.Bifunctor(function (_570) {
            return function (_571) {
                return Prelude["<<<"](Prelude.semigroupoidArr)(Joker.create)(Prelude["<<<"](Prelude.semigroupoidArr)(Prelude["<$>"](__dict_Functor_437)(_571))(runJoker));
            };
        });
    };
    var jokerBifoldable = function (__dict_Foldable_438) {
        return new Data_Bifoldable.Bifoldable(function (__dict_Monoid_439) {
            return function (_582) {
                return function (_583) {
                    return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Foldable.foldMap(__dict_Foldable_438)(__dict_Monoid_439)(_583))(runJoker);
                };
            };
        }, function (_579) {
            return function (_580) {
                return function (_581) {
                    return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Foldable.foldl(__dict_Foldable_438)(_580)(_581))(runJoker);
                };
            };
        }, function (_576) {
            return function (_577) {
                return function (_578) {
                    return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Foldable.foldr(__dict_Foldable_438)(_577)(_578))(runJoker);
                };
            };
        });
    };
    var jokerBitraversable = function (__dict_Traversable_434) {
        return new Data_Bitraversable.Bitraversable(function () {
            return jokerBifoldable(__dict_Traversable_434["__superclass_Data.Foldable.Foldable_1"]());
        }, function () {
            return jokerBifunctor(__dict_Traversable_434["__superclass_Prelude.Functor_0"]());
        }, function (__dict_Applicative_436) {
            return Data_Bitraversable.bitraverse(jokerBitraversable(__dict_Traversable_434))(__dict_Applicative_436)(Prelude.id(Prelude.categoryArr))(Prelude.id(Prelude.categoryArr));
        }, function (__dict_Applicative_435) {
            return function (_584) {
                return function (_585) {
                    return Prelude["<<<"](Prelude.semigroupoidArr)(Prelude["<$>"]((__dict_Applicative_435["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Joker.create))(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Traversable.traverse(__dict_Traversable_434)(__dict_Applicative_435)(_585))(runJoker));
                };
            };
        });
    };
    var jokerBiapply = function (__dict_Apply_440) {
        return new Control_Biapply.Biapply(function (_572) {
            return function (_573) {
                return new Joker(Prelude["<*>"](__dict_Apply_440)(_572.value0)(_573.value0));
            };
        }, function () {
            return jokerBifunctor(__dict_Apply_440["__superclass_Prelude.Functor_0"]());
        });
    };
    var jokerBiapplicative = function (__dict_Applicative_441) {
        return new Control_Biapplicative.Biapplicative(function () {
            return jokerBiapply(__dict_Applicative_441["__superclass_Prelude.Apply_0"]());
        }, function (_574) {
            return function (_575) {
                return new Joker(Prelude.pure(__dict_Applicative_441)(_575));
            };
        });
    };
    return {
        Joker: Joker, 
        runJoker: runJoker, 
        jokerBifunctor: jokerBifunctor, 
        jokerFunctor: jokerFunctor, 
        jokerBiapply: jokerBiapply, 
        jokerBiapplicative: jokerBiapplicative, 
        jokerBifoldable: jokerBifoldable, 
        jokerFoldable: jokerFoldable, 
        jokerBitraversable: jokerBitraversable, 
        jokerTraversable: jokerTraversable
    };
})();
var PS = PS || {};
PS.Data_Bifunctor_Product = (function () {
    "use strict";
    var Data_Bifunctor = PS.Data_Bifunctor;
    var Control_Biapplicative = PS.Control_Biapplicative;
    var Data_Monoid_Endo = PS.Data_Monoid_Endo;
    var Data_Bifoldable = PS.Data_Bifoldable;
    var Data_Monoid_Dual = PS.Data_Monoid_Dual;
    var Prelude = PS.Prelude;
    var Data_Bitraversable = PS.Data_Bitraversable;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Monoid = PS.Data_Monoid;
    var Data_Traversable = PS.Data_Traversable;
    var Control_Apply = PS.Control_Apply;
    var Control_Biapply = PS.Control_Biapply;
    var Pair = (function () {
        function Pair(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        };
        Pair.create = function (value0) {
            return function (value1) {
                return new Pair(value0, value1);
            };
        };
        return Pair;
    })();
    var productBifunctor = function (__dict_Bifunctor_446) {
        return function (__dict_Bifunctor_447) {
            return new Data_Bifunctor.Bifunctor(function (_586) {
                return function (_587) {
                    return function (_588) {
                        return new Pair(Data_Bifunctor.bimap(__dict_Bifunctor_446)(_586)(_587)(_588.value0), Data_Bifunctor.bimap(__dict_Bifunctor_447)(_586)(_587)(_588.value1));
                    };
                };
            });
        };
    };
    
    /**
     *  todo: simplify bifoldr/bifoldl a little bit
     */
    var productBifoldable = function (__dict_Bifoldable_448) {
        return function (__dict_Bifoldable_449) {
            return new Data_Bifoldable.Bifoldable(function (__dict_Monoid_450) {
                return function (_591) {
                    return function (_592) {
                        return function (_593) {
                            return Prelude["<>"](__dict_Monoid_450["__superclass_Prelude.Semigroup_0"]())(Data_Bifoldable.bifoldMap(__dict_Bifoldable_448)(__dict_Monoid_450)(_591)(_592)(_593.value0))(Data_Bifoldable.bifoldMap(__dict_Bifoldable_449)(__dict_Monoid_450)(_591)(_592)(_593.value1));
                        };
                    };
                };
            }, function (f) {
                return function (g) {
                    return function (z) {
                        return function (p) {
                            return Data_Monoid_Endo.runEndo(Data_Monoid_Dual.runDual(Data_Bifoldable.bifoldMap(productBifoldable(__dict_Bifoldable_448)(__dict_Bifoldable_449))(Data_Monoid_Dual.monoidDual(Data_Monoid_Endo.monoidEndo))(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Monoid_Dual.Dual)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Monoid_Endo.Endo)(Prelude.flip(f))))(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Monoid_Dual.Dual)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Monoid_Endo.Endo)(Prelude.flip(g))))(p)))(z);
                        };
                    };
                };
            }, function (f) {
                return function (g) {
                    return function (z) {
                        return function (p) {
                            return Data_Monoid_Endo.runEndo(Data_Bifoldable.bifoldMap(productBifoldable(__dict_Bifoldable_448)(__dict_Bifoldable_449))(Data_Monoid_Endo.monoidEndo)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Monoid_Endo.Endo)(f))(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Monoid_Endo.Endo)(g))(p))(z);
                        };
                    };
                };
            });
        };
    };
    var productBitraversable = function (__dict_Bitraversable_442) {
        return function (__dict_Bitraversable_443) {
            return new Data_Bitraversable.Bitraversable(function () {
                return productBifoldable(__dict_Bitraversable_442["__superclass_Data.Bifoldable.Bifoldable_1"]())(__dict_Bitraversable_443["__superclass_Data.Bifoldable.Bifoldable_1"]());
            }, function () {
                return productBifunctor(__dict_Bitraversable_442["__superclass_Data.Bifunctor.Bifunctor_0"]())(__dict_Bitraversable_443["__superclass_Data.Bifunctor.Bifunctor_0"]());
            }, function (__dict_Applicative_445) {
                return Data_Bitraversable.bitraverse(productBitraversable(__dict_Bitraversable_442)(__dict_Bitraversable_443))(__dict_Applicative_445)(Prelude.id(Prelude.categoryArr))(Prelude.id(Prelude.categoryArr));
            }, function (__dict_Applicative_444) {
                return function (_594) {
                    return function (_595) {
                        return function (_596) {
                            return Prelude["<*>"](__dict_Applicative_444["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((__dict_Applicative_444["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Pair.create)(Data_Bitraversable.bitraverse(__dict_Bitraversable_442)(__dict_Applicative_444)(_594)(_595)(_596.value0)))(Data_Bitraversable.bitraverse(__dict_Bitraversable_443)(__dict_Applicative_444)(_594)(_595)(_596.value1));
                        };
                    };
                };
            });
        };
    };
    var productBiapply = function (__dict_Biapply_451) {
        return function (__dict_Biapply_452) {
            return new Control_Biapply.Biapply(function (_589) {
                return function (_590) {
                    return new Pair(Control_Biapply["<<*>>"](__dict_Biapply_451)(_589.value0)(_590.value0), Control_Biapply["<<*>>"](__dict_Biapply_452)(_589.value1)(_590.value1));
                };
            }, function () {
                return productBifunctor(__dict_Biapply_451["__superclass_Data.Bifunctor.Bifunctor_0"]())(__dict_Biapply_452["__superclass_Data.Bifunctor.Bifunctor_0"]());
            });
        };
    };
    var productBiapplicative = function (__dict_Biapplicative_453) {
        return function (__dict_Biapplicative_454) {
            return new Control_Biapplicative.Biapplicative(function () {
                return productBiapply(__dict_Biapplicative_453["__superclass_Control.Biapply.Biapply_0"]())(__dict_Biapplicative_454["__superclass_Control.Biapply.Biapply_0"]());
            }, function (a) {
                return function (b) {
                    return new Pair(Control_Biapplicative.bipure(__dict_Biapplicative_453)(a)(b), Control_Biapplicative.bipure(__dict_Biapplicative_454)(a)(b));
                };
            });
        };
    };
    return {
        Pair: Pair, 
        productBifunctor: productBifunctor, 
        productBiapply: productBiapply, 
        productBiapplicative: productBiapplicative, 
        productBifoldable: productBifoldable, 
        productBitraversable: productBitraversable
    };
})();
var PS = PS || {};
PS.Data_Bifunctor_Wrap = (function () {
    "use strict";
    var Data_Bifunctor = PS.Data_Bifunctor;
    var Control_Biapplicative = PS.Control_Biapplicative;
    var Data_Bifoldable = PS.Data_Bifoldable;
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var Data_Bitraversable = PS.Data_Bitraversable;
    var Data_Traversable = PS.Data_Traversable;
    var Data_Foldable = PS.Data_Foldable;
    var Control_Apply = PS.Control_Apply;
    var Control_Biapply = PS.Control_Biapply;
    var Wrap = (function () {
        function Wrap(value0) {
            this.value0 = value0;
        };
        Wrap.create = function (value0) {
            return new Wrap(value0);
        };
        return Wrap;
    })();
    var unwrap = function (_597) {
        return _597.value0;
    };
    var wrapBifoldable = function (__dict_Bifoldable_457) {
        return new Data_Bifoldable.Bifoldable(function (__dict_Monoid_458) {
            return function (f) {
                return function (g) {
                    return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Bifoldable.bifoldMap(__dict_Bifoldable_457)(__dict_Monoid_458)(f)(g))(unwrap);
                };
            };
        }, function (f) {
            return function (g) {
                return function (z) {
                    return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Bifoldable.bifoldl(__dict_Bifoldable_457)(f)(g)(z))(unwrap);
                };
            };
        }, function (f) {
            return function (g) {
                return function (z) {
                    return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Bifoldable.bifoldr(__dict_Bifoldable_457)(f)(g)(z))(unwrap);
                };
            };
        });
    };
    var wrapBifunctor = function (__dict_Bifunctor_459) {
        return new Data_Bifunctor.Bifunctor(function (f) {
            return function (g) {
                return Prelude["<<<"](Prelude.semigroupoidArr)(Wrap.create)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Bifunctor.bimap(__dict_Bifunctor_459)(f)(g))(unwrap));
            };
        });
    };
    var wrapBiapply = function (__dict_Biapply_455) {
        return new Control_Biapply.Biapply(function (_598) {
            return function (_599) {
                return new Wrap(Control_Biapply["<<*>>"](__dict_Biapply_455)(_598.value0)(_599.value0));
            };
        }, function () {
            return wrapBifunctor(__dict_Biapply_455["__superclass_Data.Bifunctor.Bifunctor_0"]());
        });
    };
    var wrapBiapplicative = function (__dict_Biapplicative_456) {
        return new Control_Biapplicative.Biapplicative(function () {
            return wrapBiapply(__dict_Biapplicative_456["__superclass_Control.Biapply.Biapply_0"]());
        }, function (a) {
            return function (b) {
                return new Wrap(Control_Biapplicative.bipure(__dict_Biapplicative_456)(a)(b));
            };
        });
    };
    var wrapBitraversable = function (__dict_Bitraversable_460) {
        return new Data_Bitraversable.Bitraversable(function () {
            return wrapBifoldable(__dict_Bitraversable_460["__superclass_Data.Bifoldable.Bifoldable_1"]());
        }, function () {
            return wrapBifunctor(__dict_Bitraversable_460["__superclass_Data.Bifunctor.Bifunctor_0"]());
        }, function (__dict_Applicative_462) {
            return Data_Bitraversable.bitraverse(wrapBitraversable(__dict_Bitraversable_460))(__dict_Applicative_462)(Prelude.id(Prelude.categoryArr))(Prelude.id(Prelude.categoryArr));
        }, function (__dict_Applicative_461) {
            return function (f) {
                return function (g) {
                    return Prelude["<<<"](Prelude.semigroupoidArr)(Prelude["<$>"]((__dict_Applicative_461["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Wrap.create))(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Bitraversable.bitraverse(__dict_Bitraversable_460)(__dict_Applicative_461)(f)(g))(unwrap));
                };
            };
        });
    };
    var wrapFoldable = function (__dict_Bifoldable_463) {
        return new Data_Foldable.Foldable(function (__dict_Monoid_464) {
            return function (f) {
                return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Bifoldable.bifoldMap(__dict_Bifoldable_463)(__dict_Monoid_464)(Prelude["const"](Data_Monoid.mempty(__dict_Monoid_464)))(f))(unwrap);
            };
        }, function (f) {
            return function (z) {
                return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Bifoldable.bifoldl(__dict_Bifoldable_463)(Prelude["const"])(f)(z))(unwrap);
            };
        }, function (f) {
            return function (z) {
                return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Bifoldable.bifoldr(__dict_Bifoldable_463)(Prelude.flip(Prelude["const"]))(f)(z))(unwrap);
            };
        });
    };
    var wrapFunctor = function (__dict_Bifunctor_465) {
        return new Prelude.Functor(function (f) {
            return Prelude["<<<"](Prelude.semigroupoidArr)(Wrap.create)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Bifunctor.rmap(__dict_Bifunctor_465)(f))(unwrap));
        });
    };
    var wrapTraversable = function (__dict_Bitraversable_466) {
        return new Data_Traversable.Traversable(function () {
            return wrapFoldable(__dict_Bitraversable_466["__superclass_Data.Bifoldable.Bifoldable_1"]());
        }, function () {
            return wrapFunctor(__dict_Bitraversable_466["__superclass_Data.Bifunctor.Bifunctor_0"]());
        }, function (__dict_Applicative_468) {
            return Data_Traversable.traverse(wrapTraversable(__dict_Bitraversable_466))(__dict_Applicative_468)(Prelude.id(Prelude.categoryArr));
        }, function (__dict_Applicative_467) {
            return function (f) {
                return Prelude["<<<"](Prelude.semigroupoidArr)(Prelude["<$>"]((__dict_Applicative_467["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Wrap.create))(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Bitraversable.bitraverse(__dict_Bitraversable_466)(__dict_Applicative_467)(Prelude.pure(__dict_Applicative_467))(f))(unwrap));
            };
        });
    };
    return {
        Wrap: Wrap, 
        unwrap: unwrap, 
        wrapBifunctor: wrapBifunctor, 
        wrapFunctor: wrapFunctor, 
        wrapBiapply: wrapBiapply, 
        wrapBiapplicative: wrapBiapplicative, 
        wrapBifoldable: wrapBifoldable, 
        wrapFoldable: wrapFoldable, 
        wrapBitraversable: wrapBitraversable, 
        wrapTraversable: wrapTraversable
    };
})();
var PS = PS || {};
PS.Data_Functor_Coproduct = (function () {
    "use strict";
    var Data_Either = PS.Data_Either;
    var Prelude = PS.Prelude;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Traversable = PS.Data_Traversable;
    var Coproduct = function (x) {
        return x;
    };
    var runCoproduct = function (_600) {
        return _600;
    };
    var right = Prelude["<<<"](Prelude.semigroupoidArr)(Coproduct)(Data_Either.Right.create);
    var left = Prelude["<<<"](Prelude.semigroupoidArr)(Coproduct)(Data_Either.Left.create);
    var coproduct = function (f) {
        return function (g) {
            return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Either.either(f)(g))(runCoproduct);
        };
    };
    var foldableCoproduct = function (__dict_Foldable_469) {
        return function (__dict_Foldable_470) {
            return new Data_Foldable.Foldable(function (__dict_Monoid_471) {
                return function (f) {
                    return coproduct(Data_Foldable.foldMap(__dict_Foldable_469)(__dict_Monoid_471)(f))(Data_Foldable.foldMap(__dict_Foldable_470)(__dict_Monoid_471)(f));
                };
            }, function (f) {
                return function (z) {
                    return coproduct(Data_Foldable.foldl(__dict_Foldable_469)(f)(z))(Data_Foldable.foldl(__dict_Foldable_470)(f)(z));
                };
            }, function (f) {
                return function (z) {
                    return coproduct(Data_Foldable.foldr(__dict_Foldable_469)(f)(z))(Data_Foldable.foldr(__dict_Foldable_470)(f)(z));
                };
            });
        };
    };
    var functorCoproduct = function (__dict_Functor_472) {
        return function (__dict_Functor_473) {
            return new Prelude.Functor(function (f) {
                return Prelude["<<<"](Prelude.semigroupoidArr)(Coproduct)(coproduct(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Either.Left.create)(Prelude["<$>"](__dict_Functor_472)(f)))(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Either.Right.create)(Prelude["<$>"](__dict_Functor_473)(f))));
            });
        };
    };
    var traversableCoproduct = function (__dict_Traversable_474) {
        return function (__dict_Traversable_475) {
            return new Data_Traversable.Traversable(function () {
                return foldableCoproduct(__dict_Traversable_474["__superclass_Data.Foldable.Foldable_1"]())(__dict_Traversable_475["__superclass_Data.Foldable.Foldable_1"]());
            }, function () {
                return functorCoproduct(__dict_Traversable_474["__superclass_Prelude.Functor_0"]())(__dict_Traversable_475["__superclass_Prelude.Functor_0"]());
            }, function (__dict_Applicative_477) {
                return coproduct(Prelude["<<<"](Prelude.semigroupoidArr)(Prelude["<$>"]((__dict_Applicative_477["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Prelude["<<<"](Prelude.semigroupoidArr)(Coproduct)(Data_Either.Left.create)))(Data_Traversable.sequence(__dict_Traversable_474)(__dict_Applicative_477)))(Prelude["<<<"](Prelude.semigroupoidArr)(Prelude["<$>"]((__dict_Applicative_477["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Prelude["<<<"](Prelude.semigroupoidArr)(Coproduct)(Data_Either.Right.create)))(Data_Traversable.sequence(__dict_Traversable_475)(__dict_Applicative_477)));
            }, function (__dict_Applicative_476) {
                return function (f) {
                    return coproduct(Prelude["<<<"](Prelude.semigroupoidArr)(Prelude["<$>"]((__dict_Applicative_476["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Prelude["<<<"](Prelude.semigroupoidArr)(Coproduct)(Data_Either.Left.create)))(Data_Traversable.traverse(__dict_Traversable_474)(__dict_Applicative_476)(f)))(Prelude["<<<"](Prelude.semigroupoidArr)(Prelude["<$>"]((__dict_Applicative_476["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Prelude["<<<"](Prelude.semigroupoidArr)(Coproduct)(Data_Either.Right.create)))(Data_Traversable.traverse(__dict_Traversable_475)(__dict_Applicative_476)(f)));
                };
            });
        };
    };
    return {
        Coproduct: Coproduct, 
        coproduct: coproduct, 
        right: right, 
        left: left, 
        runCoproduct: runCoproduct, 
        functorCoproduct: functorCoproduct, 
        foldableCoproduct: foldableCoproduct, 
        traversableCoproduct: traversableCoproduct
    };
})();
var PS = PS || {};
PS.Data_Inject = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Functor_Coproduct = PS.Data_Functor_Coproduct;
    var Data_Either = PS.Data_Either;
    var Data_Maybe = PS.Data_Maybe;
    var Inject = function (inj, prj) {
        this.inj = inj;
        this.prj = prj;
    };
    var prj = function (dict) {
        return dict.prj;
    };
    var injectReflexive = new Inject(Prelude.id(Prelude.categoryArr), Data_Maybe.Just.create);
    var injectLeft = new Inject(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Functor_Coproduct.Coproduct)(Data_Either.Left.create), Data_Functor_Coproduct.coproduct(Data_Maybe.Just.create)(Prelude["const"](Data_Maybe.Nothing.value)));
    var inj = function (dict) {
        return dict.inj;
    };
    var injectRight = function (__dict_Inject_478) {
        return new Inject(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Functor_Coproduct.Coproduct)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Either.Right.create)(inj(__dict_Inject_478))), Data_Functor_Coproduct.coproduct(Prelude["const"](Data_Maybe.Nothing.value))(prj(__dict_Inject_478)));
    };
    return {
        Inject: Inject, 
        prj: prj, 
        inj: inj, 
        injectReflexive: injectReflexive, 
        injectLeft: injectLeft, 
        injectRight: injectRight
    };
})();
var PS = PS || {};
PS.Control_Monad_Free = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Coyoneda = PS.Data_Coyoneda;
    var Data_Either = PS.Data_Either;
    var Data_Inject = PS.Data_Inject;
    var Data_Function = PS.Data_Function;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    
  function goEffImpl(resume, isRight, fromLeft, fromRight, fn, value) {
    return function(){
      while (true) {
        var r = resume(value);
        if (isRight(r)) return fromRight(r);
        value = fn(fromLeft(r))();
      }
    };
  };
    var Pure = (function () {
        function Pure(value0) {
            this.value0 = value0;
        };
        Pure.create = function (value0) {
            return new Pure(value0);
        };
        return Pure;
    })();
    var Free = (function () {
        function Free(value0) {
            this.value0 = value0;
        };
        Free.create = function (value0) {
            return new Free(value0);
        };
        return Free;
    })();
    var Gosub = (function () {
        function Gosub(value0) {
            this.value0 = value0;
        };
        Gosub.create = function (value0) {
            return new Gosub(value0);
        };
        return Gosub;
    })();
    var MonadFree = function (wrap) {
        this.wrap = wrap;
    };
    var wrap = function (dict) {
        return dict.wrap;
    };
    var unsafeRight = function (_605) {
        if (_605 instanceof Data_Either.Right) {
            return _605.value0;
        };
        throw new Error("Failed pattern match");
    };
    var unsafeLeft = function (_604) {
        if (_604 instanceof Data_Either.Left) {
            return _604.value0;
        };
        throw new Error("Failed pattern match");
    };
    var pureF = function (__dict_Applicative_481) {
        return Prelude["<<<"](Prelude.semigroupoidArr)(Free.create)(Prelude["<<<"](Prelude.semigroupoidArr)(Prelude.pure(__dict_Applicative_481))(Pure.create));
    };
    var monadTransFree = new Control_Monad_Trans.MonadTrans(function (__dict_Monad_482) {
        return function (f) {
            return Free.create(Prelude[">>="](__dict_Monad_482["__superclass_Prelude.Bind_1"]())(f)(function (_25) {
                return Prelude["return"](__dict_Monad_482)(new Pure(_25));
            }));
        };
    });
    var monadFreeFree = function (__dict_Functor_483) {
        return new MonadFree(Free.create);
    };
    var liftF = function (__dict_Functor_487) {
        return function (__dict_Monad_488) {
            return function (__dict_MonadFree_489) {
                return Prelude["<<<"](Prelude.semigroupoidArr)(wrap(__dict_MonadFree_489))(Prelude["<$>"](__dict_Functor_487)(Prelude["return"](__dict_Monad_488)));
            };
        };
    };
    
    /**
     *  Note: can blow the stack!
     */
    var iterM = function (__dict_Functor_491) {
        return function (__dict_Monad_492) {
            return function (_601) {
                return function (_602) {
                    if (_602 instanceof Pure) {
                        return Prelude["return"](__dict_Monad_492)(_602.value0);
                    };
                    if (_602 instanceof Free) {
                        return _601(Prelude["<$>"](__dict_Functor_491)(iterM(__dict_Functor_491)(__dict_Monad_492)(_601))(_602.value0));
                    };
                    if (_602 instanceof Gosub) {
                        return _602.value0(function (req) {
                            return function (recv) {
                                return Prelude[">>="](__dict_Monad_492["__superclass_Prelude.Bind_1"]())(iterM(__dict_Functor_491)(__dict_Monad_492)(_601)(req(Prelude.unit)))(Prelude["<<<"](Prelude.semigroupoidArr)(iterM(__dict_Functor_491)(__dict_Monad_492)(_601))(recv));
                            };
                        });
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
    };
    var monadFree = function (__dict_Functor_484) {
        return new Prelude.Monad(function () {
            return applicativeFree(__dict_Functor_484);
        }, function () {
            return bindFree(__dict_Functor_484);
        });
    };
    var functorFree = function (__dict_Functor_499) {
        return new Prelude.Functor(function (_606) {
            return function (_607) {
                if (_607 instanceof Pure) {
                    return new Pure(_606(_607.value0));
                };
                return Prelude.liftA1(applicativeFree(__dict_Functor_499))(_606)(_607);
            };
        });
    };
    var bindFree = function (__dict_Functor_500) {
        return new Prelude.Bind(function (_608) {
            return function (_609) {
                if (_608 instanceof Gosub) {
                    return new Gosub(function (h) {
                        return _608.value0(function (a) {
                            return function (i) {
                                return h(a)(function (x) {
                                    return new Gosub(function (j) {
                                        return j(Prelude["const"](i(x)))(_609);
                                    });
                                });
                            };
                        });
                    });
                };
                return new Gosub(function (h) {
                    return h(Prelude["const"](_608))(_609);
                });
            };
        }, function () {
            return applyFree(__dict_Functor_500);
        });
    };
    var applyFree = function (__dict_Functor_501) {
        return new Prelude.Apply(Prelude.ap(monadFree(__dict_Functor_501)), function () {
            return functorFree(__dict_Functor_501);
        });
    };
    var applicativeFree = function (__dict_Functor_502) {
        return new Prelude.Applicative(function () {
            return applyFree(__dict_Functor_502);
        }, Pure.create);
    };
    var resumeGosub = function (__dict_Functor_479) {
        return function (_603) {
            if (_603 instanceof Gosub) {
                return _603.value0(function (a) {
                    return function (g) {
                        var _2167 = a(Prelude.unit);
                        if (_2167 instanceof Pure) {
                            return new Data_Either.Right(g(_2167.value0));
                        };
                        if (_2167 instanceof Free) {
                            return new Data_Either.Left(Prelude["<$>"](__dict_Functor_479)(function (h) {
                                return Prelude[">>="](bindFree(__dict_Functor_479))(h)(g);
                            })(_2167.value0));
                        };
                        if (_2167 instanceof Gosub) {
                            return new Data_Either.Right(_2167.value0(function (b) {
                                return function (i) {
                                    return Prelude[">>="](bindFree(__dict_Functor_479))(b(Prelude.unit))(function (x) {
                                        return Prelude[">>="](bindFree(__dict_Functor_479))(i(x))(g);
                                    });
                                };
                            }));
                        };
                        throw new Error("Failed pattern match");
                    };
                });
            };
            throw new Error("Failed pattern match");
        };
    };
    var resume = function (__copy___dict_Functor_480) {
        return function (__copy_f) {
            var __dict_Functor_480 = __copy___dict_Functor_480;
            var f = __copy_f;
            tco: while (true) {
                if (f instanceof Pure) {
                    return new Data_Either.Right(f.value0);
                };
                if (f instanceof Free) {
                    return new Data_Either.Left(f.value0);
                };
                var _2175 = resumeGosub(__dict_Functor_480)(f);
                if (_2175 instanceof Data_Either.Left) {
                    return new Data_Either.Left(_2175.value0);
                };
                if (_2175 instanceof Data_Either.Right) {
                    var __tco___dict_Functor_480 = __dict_Functor_480;
                    __dict_Functor_480 = __tco___dict_Functor_480;
                    f = _2175.value0;
                    continue tco;
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var go = function (__copy___dict_Functor_498) {
        return function (__copy_fn) {
            return function (__copy_f) {
                var __dict_Functor_498 = __copy___dict_Functor_498;
                var fn = __copy_fn;
                var f = __copy_f;
                tco: while (true) {
                    var _2178 = resume(__dict_Functor_498)(f);
                    if (_2178 instanceof Data_Either.Left) {
                        var __tco___dict_Functor_498 = __dict_Functor_498;
                        var __tco_fn = fn;
                        var __tco_f = fn(_2178.value0);
                        __dict_Functor_498 = __tco___dict_Functor_498;
                        fn = __tco_fn;
                        f = __tco_f;
                        continue tco;
                    };
                    if (_2178 instanceof Data_Either.Right) {
                        return _2178.value0;
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
    };
    var goEff = function (__dict_Functor_497) {
        return function (fn) {
            return function (f) {
                return goEffImpl(resume(__dict_Functor_497), Data_Either.isRight, unsafeLeft, unsafeRight, fn, f);
            };
        };
    };
    var goEffC = function (nat) {
        return goEff(Data_Coyoneda.functorCoyoneda)(Data_Coyoneda.liftCoyonedaTF(Control_Monad_Eff.functorEff)(nat));
    };
    
    /**
     *  Note: can blow the stack!
     */
    var goM = function (__dict_Functor_494) {
        return function (__dict_Monad_495) {
            return function (k) {
                return function (f) {
                    var _2181 = resume(__dict_Functor_494)(f);
                    if (_2181 instanceof Data_Either.Left) {
                        return Prelude[">>="](__dict_Monad_495["__superclass_Prelude.Bind_1"]())(k(_2181.value0))(goM(__dict_Functor_494)(__dict_Monad_495)(k));
                    };
                    if (_2181 instanceof Data_Either.Right) {
                        return Prelude["return"](__dict_Monad_495)(_2181.value0);
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
    };
    
    /**
     *  Note: can blow the stack!
     */
    var goMC = function (__dict_Monad_496) {
        return function (nat) {
            return goM(Data_Coyoneda.functorCoyoneda)(__dict_Monad_496)(Data_Coyoneda.liftCoyonedaTF(((__dict_Monad_496["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(nat));
        };
    };
    var mapF = function (__dict_Functor_485) {
        return function (__dict_Functor_486) {
            return function (t) {
                return function (fa) {
                    return Data_Either.either(function (s) {
                        return Prelude["<<<"](Prelude.semigroupoidArr)(Free.create)(t)(Prelude["<$>"](__dict_Functor_485)(mapF(__dict_Functor_485)(__dict_Functor_486)(t))(s));
                    })(Pure.create)(resume(__dict_Functor_485)(fa));
                };
            };
        };
    };
    var injC = function (__dict_Inject_493) {
        return mapF(Data_Coyoneda.functorCoyoneda)(Data_Coyoneda.functorCoyoneda)(Data_Coyoneda.liftCoyonedaT(Data_Inject.inj(__dict_Inject_493)));
    };
    var liftFC = Prelude["<<<"](Prelude.semigroupoidArr)(liftF(Data_Coyoneda.functorCoyoneda)(monadFree(Data_Coyoneda.functorCoyoneda))(monadFreeFree(Data_Coyoneda.functorCoyoneda)))(Data_Coyoneda.liftCoyoneda);
    var pureFC = function (__dict_Applicative_490) {
        return Prelude["<<<"](Prelude.semigroupoidArr)(liftFC)(Prelude.pure(__dict_Applicative_490));
    };
    return {
        Pure: Pure, 
        Free: Free, 
        Gosub: Gosub, 
        MonadFree: MonadFree, 
        goEffC: goEffC, 
        goEff: goEff, 
        go: go, 
        goMC: goMC, 
        goM: goM, 
        iterM: iterM, 
        injC: injC, 
        mapF: mapF, 
        pureFC: pureFC, 
        pureF: pureF, 
        liftFC: liftFC, 
        liftF: liftF, 
        wrap: wrap, 
        functorFree: functorFree, 
        applyFree: applyFree, 
        applicativeFree: applicativeFree, 
        bindFree: bindFree, 
        monadFree: monadFree, 
        monadTransFree: monadTransFree, 
        monadFreeFree: monadFreeFree
    };
})();
var PS = PS || {};
PS.Control_Monad_Trampoline = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Lazy = PS.Data_Lazy;
    var Control_Monad_Free = PS.Control_Monad_Free;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Traversable = PS.Data_Traversable;
    var suspend = function (t) {
        return new Control_Monad_Free.Free(Data_Lazy.defer(Prelude["const"](t)));
    };
    var runTrampoline = Control_Monad_Free.go(Data_Lazy.functorLazy)(Data_Lazy.force);
    var done = Prelude.pure(Control_Monad_Free.applicativeFree(Data_Lazy.functorLazy));
    var delay$prime = function (a) {
        return new Control_Monad_Free.Free(Prelude["<$>"](Data_Lazy.functorLazy)(done)(a));
    };
    var delay = Prelude["<<<"](Prelude.semigroupoidArr)(delay$prime)(Data_Lazy.defer);
    return {
        runTrampoline: runTrampoline, 
        delay: delay, 
        "delay'": delay$prime, 
        suspend: suspend, 
        done: done
    };
})();
var PS = PS || {};
PS.Control_Comonad_Cofree = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Trampoline = PS.Control_Monad_Trampoline;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Traversable = PS.Data_Traversable;
    var Control_Comonad = PS.Control_Comonad;
    var Control_Apply = PS.Control_Apply;
    var Control_Alt = PS.Control_Alt;
    var Control_MonadPlus = PS.Control_MonadPlus;
    var Control_Bind = PS.Control_Bind;
    var Control_Extend = PS.Control_Extend;
    var Control_Monad_Free = PS.Control_Monad_Free;
    var Data_Lazy = PS.Data_Lazy;
    var Cofree = (function () {
        function Cofree(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        };
        Cofree.create = function (value0) {
            return function (value1) {
                return new Cofree(value0, value1);
            };
        };
        return Cofree;
    })();
    var tail = function (_611) {
        return Control_Monad_Trampoline.runTrampoline(_611.value1);
    };
    var mkCofree = function (a) {
        return function (t) {
            return new Cofree(a, Prelude.pure(Control_Monad_Free.applicativeFree(Data_Lazy.functorLazy))(t));
        };
    };
    var head = function (_610) {
        return _610.value0;
    };
    var foldableCofree = function (__dict_Foldable_507) {
        return new Data_Foldable.Foldable(function (__dict_Monoid_508) {
            return function (f) {
                var go = function (fa) {
                    return Prelude["++"](__dict_Monoid_508["__superclass_Prelude.Semigroup_0"]())(f(head(fa)))(Data_Foldable.foldMap(__dict_Foldable_507)(__dict_Monoid_508)(go)(tail(fa)));
                };
                return go;
            };
        }, function (f) {
            var go = function (b) {
                return function (fa) {
                    var fa$prime = tail(fa);
                    var b$prime = f(b)(head(fa));
                    return Data_Foldable.foldl(__dict_Foldable_507)(go)(b$prime)(fa$prime);
                };
            };
            return go;
        }, function (f) {
            var go = function (fa) {
                return function (b) {
                    var b$prime = Data_Foldable.foldr(__dict_Foldable_507)(go)(b)(tail(fa));
                    var a$prime = head(fa);
                    return f(a$prime)(b$prime);
                };
            };
            return Prelude.flip(go);
        });
    };
    var _tail = function (_612) {
        return _612.value1;
    };
    var _lift = function (__dict_Functor_513) {
        return function (f) {
            return Prelude["<$>"](Control_Monad_Free.functorFree(Data_Lazy.functorLazy))(Prelude["<$>"](__dict_Functor_513)(f));
        };
    };
    var functorCofree = function (__dict_Functor_515) {
        return new Prelude.Functor(function (f) {
            var loop = function (fa) {
                return new Cofree(f(head(fa)), _lift(__dict_Functor_515)(loop)(_tail(fa)));
            };
            return loop;
        });
    };
    var applyCofree = function (__dict_Apply_511) {
        return new Prelude.Apply(function (f) {
            return function (x) {
                var t = Prelude["<*>"](__dict_Apply_511)(Prelude["<$>"](__dict_Apply_511["__superclass_Prelude.Functor_0"]())(Prelude["<*>"](applyCofree(__dict_Apply_511)))(tail(f)))(tail(x));
                var h = head(f)(head(x));
                return mkCofree(h)(t);
            };
        }, function () {
            return functorCofree(__dict_Apply_511["__superclass_Prelude.Functor_0"]());
        });
    };
    var applicativeCofree = function (__dict_Applicative_512) {
        return new Prelude.Applicative(function () {
            return applyCofree(__dict_Applicative_512["__superclass_Prelude.Apply_0"]());
        }, function (a) {
            return mkCofree(a)(Prelude.pure(__dict_Applicative_512)(Prelude.pure(applicativeCofree(__dict_Applicative_512))(a)));
        });
    };
    var bindCofree = function (__dict_MonadPlus_510) {
        return new Prelude.Bind(function (fa) {
            return function (f) {
                var loop = function (fa_1) {
                    var fh = f(head(fa_1));
                    return mkCofree(head(fh))(Control_Alt["<|>"](((__dict_MonadPlus_510["__superclass_Control.Alternative.Alternative_1"]())["__superclass_Control.Plus.Plus_1"]())["__superclass_Control.Alt.Alt_0"]())(tail(fh))(Prelude["<$>"]((((__dict_MonadPlus_510["__superclass_Control.Alternative.Alternative_1"]())["__superclass_Control.Plus.Plus_1"]())["__superclass_Control.Alt.Alt_0"]())["__superclass_Prelude.Functor_0"]())(loop)(tail(fa_1))));
                };
                return loop(fa);
            };
        }, function () {
            return applyCofree(((__dict_MonadPlus_510["__superclass_Control.Alternative.Alternative_1"]())["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]());
        });
    };
    var monadCofree = function (__dict_MonadPlus_503) {
        return new Prelude.Monad(function () {
            return applicativeCofree((__dict_MonadPlus_503["__superclass_Control.Alternative.Alternative_1"]())["__superclass_Prelude.Applicative_0"]());
        }, function () {
            return bindCofree(__dict_MonadPlus_503);
        });
    };
    var extendCofree = function (__dict_Functor_514) {
        return new Control_Extend.Extend(function (f) {
            var loop = function (fa) {
                return new Cofree(f(fa), _lift(__dict_Functor_514)(loop)(_tail(fa)));
            };
            return loop;
        }, function () {
            return functorCofree(__dict_Functor_514);
        });
    };
    var comonadCofree = function (__dict_Functor_509) {
        return new Control_Comonad.Comonad(function () {
            return extendCofree(__dict_Functor_509);
        }, head);
    };
    var traversableCofree = function (__dict_Traversable_504) {
        return new Data_Traversable.Traversable(function () {
            return foldableCofree(__dict_Traversable_504["__superclass_Data.Foldable.Foldable_1"]());
        }, function () {
            return functorCofree(__dict_Traversable_504["__superclass_Prelude.Functor_0"]());
        }, function (__dict_Applicative_506) {
            return Data_Traversable.traverse(traversableCofree(__dict_Traversable_504))(__dict_Applicative_506)(Prelude.id(Prelude.categoryArr));
        }, function (__dict_Applicative_505) {
            return function (f) {
                var loop = function (ta) {
                    return Prelude["<*>"](__dict_Applicative_505["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((__dict_Applicative_505["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(mkCofree)(f(head(ta))))(Data_Traversable.traverse(__dict_Traversable_504)(__dict_Applicative_505)(loop)(tail(ta)));
                };
                return loop;
            };
        });
    };
    return {
        tail: tail, 
        head: head, 
        mkCofree: mkCofree, 
        functorCofree: functorCofree, 
        foldableCofree: foldableCofree, 
        traversableCofree: traversableCofree, 
        extendCofree: extendCofree, 
        comonadCofree: comonadCofree, 
        applyCofree: applyCofree, 
        applicativeCofree: applicativeCofree, 
        bindCofree: bindCofree, 
        monadCofree: monadCofree
    };
})();
var PS = PS || {};
PS.Data_Identity = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Comonad = PS.Control_Comonad;
    var Control_Extend = PS.Control_Extend;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Traversable = PS.Data_Traversable;
    var Identity = function (x) {
        return x;
    };
    var showConst = function (__dict_Show_518) {
        return new Prelude.Show(function (_618) {
            return "Identity (" + (Prelude.show(__dict_Show_518)(_618) + ")");
        });
    };
    var runIdentity = function (_613) {
        return _613;
    };
    var functorIdentity = new Prelude.Functor(function (_619) {
        return function (_620) {
            return _619(_620);
        };
    });
    var foldableIdentity = new Data_Foldable.Foldable(function (__dict_Monoid_520) {
        return function (_630) {
            return function (_631) {
                return _630(_631);
            };
        };
    }, function (_627) {
        return function (_628) {
            return function (_629) {
                return _627(_628)(_629);
            };
        };
    }, function (_624) {
        return function (_625) {
            return function (_626) {
                return _624(_626)(_625);
            };
        };
    });
    var traversableIdentity = new Data_Traversable.Traversable(function () {
        return foldableIdentity;
    }, function () {
        return functorIdentity;
    }, function (__dict_Applicative_517) {
        return function (_634) {
            return Prelude["<$>"]((__dict_Applicative_517["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Identity)(_634);
        };
    }, function (__dict_Applicative_516) {
        return function (_632) {
            return function (_633) {
                return Prelude["<$>"]((__dict_Applicative_516["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Identity)(_632(_633));
            };
        };
    });
    var extendIdentity = new Control_Extend.Extend(function (f) {
        return function (m) {
            return f(m);
        };
    }, function () {
        return functorIdentity;
    });
    var eqIdentity = function (__dict_Eq_521) {
        return new Prelude.Eq(function (x) {
            return function (y) {
                return !Prelude["=="](eqIdentity(__dict_Eq_521))(x)(y);
            };
        }, function (_614) {
            return function (_615) {
                return Prelude["=="](__dict_Eq_521)(_614)(_615);
            };
        });
    };
    var ordIdentity = function (__dict_Ord_519) {
        return new Prelude.Ord(function () {
            return eqIdentity(__dict_Ord_519["__superclass_Prelude.Eq_0"]());
        }, function (_616) {
            return function (_617) {
                return Prelude.compare(__dict_Ord_519)(_616)(_617);
            };
        });
    };
    var comonadIdentity = new Control_Comonad.Comonad(function () {
        return extendIdentity;
    }, function (_623) {
        return _623;
    });
    var applyIdentity = new Prelude.Apply(function (_621) {
        return function (_622) {
            return _621(_622);
        };
    }, function () {
        return functorIdentity;
    });
    var bindIdentity = new Prelude.Bind(function (m) {
        return function (f) {
            return f(runIdentity(m));
        };
    }, function () {
        return applyIdentity;
    });
    var applicativeIdentity = new Prelude.Applicative(function () {
        return applyIdentity;
    }, Identity);
    var monadIdentity = new Prelude.Monad(function () {
        return applicativeIdentity;
    }, function () {
        return bindIdentity;
    });
    return {
        Identity: Identity, 
        runIdentity: runIdentity, 
        eqIdentity: eqIdentity, 
        ordIdentity: ordIdentity, 
        showConst: showConst, 
        functorIdentity: functorIdentity, 
        applyIdentity: applyIdentity, 
        applicativeIdentity: applicativeIdentity, 
        bindIdentity: bindIdentity, 
        monadIdentity: monadIdentity, 
        extendIdentity: extendIdentity, 
        comonadIdentity: comonadIdentity, 
        foldableIdentity: foldableIdentity, 
        traversableIdentity: traversableIdentity
    };
})();
var PS = PS || {};
PS.Control_Comonad_Env = (function () {
    "use strict";
    var Data_Identity = PS.Data_Identity;
    var Control_Comonad_Env_Trans = PS.Control_Comonad_Env_Trans;
    var Prelude = PS.Prelude;
    var Data_Tuple = PS.Data_Tuple;
    var withEnv = Control_Comonad_Env_Trans.withEnvT;
    var runEnv = function (x) {
        return Prelude["<$>"](Data_Tuple.functorTuple)(Data_Identity.runIdentity)(Control_Comonad_Env_Trans.runEnvT(x));
    };
    var mapEnv = Prelude["<$>"](Control_Comonad_Env_Trans.functorEnvT(Data_Identity.functorIdentity));
    var env = function (e) {
        return function (a) {
            return Control_Comonad_Env_Trans.EnvT(Data_Tuple.Tuple.create(e)(a));
        };
    };
    return {
        env: env, 
        mapEnv: mapEnv, 
        withEnv: withEnv, 
        runEnv: runEnv
    };
})();
var PS = PS || {};
PS.Control_Comonad_Env_Class = (function () {
    "use strict";
    var Data_Tuple = PS.Data_Tuple;
    var Control_Comonad_Env_Trans = PS.Control_Comonad_Env_Trans;
    var Prelude = PS.Prelude;
    var Control_Comonad = PS.Control_Comonad;
    var Control_Comonad_Env = PS.Control_Comonad_Env;
    var ComonadEnv = function (__superclass_Control$dotComonad$dotComonad_0, ask, local) {
        this["__superclass_Control.Comonad.Comonad_0"] = __superclass_Control$dotComonad$dotComonad_0;
        this.ask = ask;
        this.local = local;
    };
    var local = function (dict) {
        return dict.local;
    };
    var comonadEnvTuple = new ComonadEnv(function () {
        return Data_Tuple.comonadTuple;
    }, Data_Tuple.fst, function (_635) {
        return function (_636) {
            return new Data_Tuple.Tuple(_635(_636.value0), _636.value1);
        };
    });
    var comonadEnvEnvT = function (__dict_Comonad_522) {
        return new ComonadEnv(function () {
            return Control_Comonad_Env_Trans.comonadEnvT(__dict_Comonad_522);
        }, function (x) {
            return Data_Tuple.fst(Control_Comonad_Env_Trans.runEnvT(x));
        }, function (f) {
            return function (x) {
                return Control_Comonad_Env_Trans.EnvT((function () {
                    var _2219 = Control_Comonad_Env_Trans.runEnvT(x);
                    return new Data_Tuple.Tuple(f(_2219.value0), _2219.value1);
                })());
            };
        });
    };
    var ask = function (dict) {
        return dict.ask;
    };
    var asks = function (__dict_ComonadEnv_523) {
        return function (f) {
            return function (x) {
                return f(ask(__dict_ComonadEnv_523)(x));
            };
        };
    };
    return {
        ComonadEnv: ComonadEnv, 
        asks: asks, 
        local: local, 
        ask: ask, 
        comonadEnvTuple: comonadEnvTuple, 
        comonadEnvEnvT: comonadEnvEnvT
    };
})();
var PS = PS || {};
PS.Control_Comonad_Store = (function () {
    "use strict";
    var Data_Tuple = PS.Data_Tuple;
    var Data_Identity = PS.Data_Identity;
    var Control_Comonad_Store_Trans = PS.Control_Comonad_Store_Trans;
    var Prelude = PS.Prelude;
    var store = function (f) {
        return function (x) {
            return Control_Comonad_Store_Trans.StoreT(new Data_Tuple.Tuple(f, x));
        };
    };
    var runStore = function (s) {
        return Data_Tuple.swap(Prelude["<$>"](Data_Tuple.functorTuple)(Data_Identity.runIdentity)(Data_Tuple.swap(Control_Comonad_Store_Trans.runStoreT(s))));
    };
    return {
        store: store, 
        runStore: runStore
    };
})();
var PS = PS || {};
PS.Control_Comonad_Traced = (function () {
    "use strict";
    var Control_Comonad_Traced_Trans = PS.Control_Comonad_Traced_Trans;
    var Data_Identity = PS.Data_Identity;
    var Prelude = PS.Prelude;
    var traced = Prelude[">>>"](Prelude.semigroupoidArr)(Data_Identity.Identity)(Control_Comonad_Traced_Trans.TracedT);
    var runTraced = Prelude[">>>"](Prelude.semigroupoidArr)(Control_Comonad_Traced_Trans.runTracedT)(Data_Identity.runIdentity);
    return {
        traced: traced, 
        runTraced: runTraced
    };
})();
var PS = PS || {};
PS.Control_Monad_RWS = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Identity = PS.Data_Identity;
    var Control_Monad_RWS_Trans = PS.Control_Monad_RWS_Trans;
    var Data_Monoid = PS.Data_Monoid;
    var Data_Tuple = PS.Data_Tuple;
    
    /**
     *  | Writer operations
     */
    var writer = function (__dict_Applicative_524) {
        return function (_640) {
            return function (_) {
                return function (s) {
                    return Prelude.pure(__dict_Applicative_524)({
                        state: s, 
                        result: _640.value0, 
                        log: _640.value1
                    });
                };
            };
        };
    };
    var withRWS = Control_Monad_RWS_Trans.withRWST;
    var tell = function (__dict_Applicative_525) {
        return function (w) {
            return writer(__dict_Applicative_525)(new Data_Tuple.Tuple(Prelude.unit, w));
        };
    };
    
    /**
     *  | State operations
     */
    var state = function (__dict_Applicative_526) {
        return function (__dict_Monoid_527) {
            return function (f) {
                return function (_) {
                    return function (s) {
                        var _2225 = f(s);
                        return Prelude.pure(__dict_Applicative_526)(Control_Monad_RWS_Trans.mkSee(__dict_Monoid_527)(_2225.value1)(_2225.value0)(Data_Monoid.mempty(__dict_Monoid_527)));
                    };
                };
            };
        };
    };
    var rws = function (f) {
        return function (r) {
            return function (s) {
                return Prelude["return"](Data_Identity.monadIdentity)(f(r)(s));
            };
        };
    };
    var runRWS = function (m) {
        return function (r) {
            return function (s) {
                return Data_Identity.runIdentity(Control_Monad_RWS_Trans.runRWST(m)(r)(s));
            };
        };
    };
    var reader = function (__dict_Applicative_528) {
        return function (__dict_Monoid_529) {
            return function (f) {
                return function (r) {
                    return function (s) {
                        return Prelude.pure(__dict_Applicative_528)(Control_Monad_RWS_Trans.mkSee(__dict_Monoid_529)(s)(f(r))(Data_Monoid.mempty(__dict_Monoid_529)));
                    };
                };
            };
        };
    };
    var put = function (__dict_Applicative_530) {
        return function (__dict_Monoid_531) {
            return function (s) {
                return state(__dict_Applicative_530)(__dict_Monoid_531)(function (_) {
                    return new Data_Tuple.Tuple(Prelude.unit, s);
                });
            };
        };
    };
    var pass = function (__dict_Monad_532) {
        return function (m) {
            return function (r) {
                return function (s) {
                    return Prelude[">>="](__dict_Monad_532["__superclass_Prelude.Bind_1"]())(Control_Monad_RWS_Trans.runRWST(m)(r)(s))(function (_638) {
                        return Prelude.pure(__dict_Monad_532["__superclass_Prelude.Applicative_0"]())({
                            state: _638.state, 
                            result: _638.result.value0, 
                            log: _638.result.value1(_638.log)
                        });
                    });
                };
            };
        };
    };
    var modify = function (__dict_Applicative_533) {
        return function (__dict_Monoid_534) {
            return function (f) {
                return state(__dict_Applicative_533)(__dict_Monoid_534)(function (s) {
                    return new Data_Tuple.Tuple(Prelude.unit, f(s));
                });
            };
        };
    };
    var mapRWS = function (f) {
        return Control_Monad_RWS_Trans.mapRWST(Prelude[">>>"](Prelude.semigroupoidArr)(Data_Identity.runIdentity)(Prelude[">>>"](Prelude.semigroupoidArr)(f)(Data_Identity.Identity)));
    };
    var local = function (f) {
        return function (m) {
            return function (r) {
                return function (s) {
                    return Control_Monad_RWS_Trans.runRWST(m)(f(r))(s);
                };
            };
        };
    };
    var listens = function (__dict_Monad_535) {
        return function (f) {
            return function (m) {
                return function (r) {
                    return function (s) {
                        return Prelude[">>="](__dict_Monad_535["__superclass_Prelude.Bind_1"]())(Control_Monad_RWS_Trans.runRWST(m)(r)(s))(function (_639) {
                            return Prelude.pure(__dict_Monad_535["__superclass_Prelude.Applicative_0"]())({
                                state: _639.state, 
                                result: new Data_Tuple.Tuple(_639.result, f(_639.log)), 
                                log: _639.log
                            });
                        });
                    };
                };
            };
        };
    };
    var listen = function (__dict_Monad_536) {
        return function (m) {
            return function (r) {
                return function (s) {
                    return Prelude[">>="](__dict_Monad_536["__superclass_Prelude.Bind_1"]())(Control_Monad_RWS_Trans.runRWST(m)(r)(s))(function (_637) {
                        return Prelude.pure(__dict_Monad_536["__superclass_Prelude.Applicative_0"]())({
                            state: _637.state, 
                            result: new Data_Tuple.Tuple(_637.result, _637.log), 
                            log: _637.log
                        });
                    });
                };
            };
        };
    };
    var gets = function (__dict_Applicative_537) {
        return function (__dict_Monoid_538) {
            return function (f) {
                return state(__dict_Applicative_537)(__dict_Monoid_538)(function (s) {
                    return new Data_Tuple.Tuple(f(s), s);
                });
            };
        };
    };
    var get = function (__dict_Applicative_539) {
        return function (__dict_Monoid_540) {
            return state(__dict_Applicative_539)(__dict_Monoid_540)(function (s) {
                return new Data_Tuple.Tuple(s, s);
            });
        };
    };
    var execRWS = function (m) {
        return function (r) {
            return function (s) {
                return Data_Identity.runIdentity(Control_Monad_RWS_Trans.execRWST(Data_Identity.monadIdentity)(m)(r)(s));
            };
        };
    };
    var evalRWS = function (m) {
        return function (r) {
            return function (s) {
                return Data_Identity.runIdentity(Control_Monad_RWS_Trans.evalRWST(Data_Identity.monadIdentity)(m)(r)(s));
            };
        };
    };
    var censor = function (__dict_Monad_541) {
        return function (f) {
            return function (m) {
                return function (r) {
                    return function (s) {
                        return Prelude[">>="](__dict_Monad_541["__superclass_Prelude.Bind_1"]())(Control_Monad_RWS_Trans.runRWST(m)(r)(s))(function (see) {
                            return Prelude.pure(__dict_Monad_541["__superclass_Prelude.Applicative_0"]())((function () {
                                var _2242 = {};
                                for (var _2243 in see) {
                                    if (see.hasOwnProperty(_2243)) {
                                        _2242[_2243] = see[_2243];
                                    };
                                };
                                _2242.log = f(see.log);
                                return _2242;
                            })());
                        });
                    };
                };
            };
        };
    };
    
    /**
     *  | Reader operations
     */
    var ask = function (__dict_Applicative_542) {
        return function (__dict_Monoid_543) {
            return function (r) {
                return function (s) {
                    return Prelude.pure(__dict_Applicative_542)(Control_Monad_RWS_Trans.mkSee(__dict_Monoid_543)(s)(r)(Data_Monoid.mempty(__dict_Monoid_543)));
                };
            };
        };
    };
    return {
        modify: modify, 
        put: put, 
        gets: gets, 
        get: get, 
        state: state, 
        censor: censor, 
        listens: listens, 
        tell: tell, 
        pass: pass, 
        listen: listen, 
        writer: writer, 
        reader: reader, 
        local: local, 
        ask: ask, 
        withRWS: withRWS, 
        mapRWS: mapRWS, 
        execRWS: execRWS, 
        evalRWS: evalRWS, 
        runRWS: runRWS, 
        rws: rws
    };
})();
var PS = PS || {};
PS.Control_Monad_Reader_Class = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Reader_Trans = PS.Control_Monad_Reader_Trans;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var Control_Monad_Error_Trans = PS.Control_Monad_Error_Trans;
    var Control_Monad_Maybe_Trans = PS.Control_Monad_Maybe_Trans;
    var Control_Monad_Writer_Trans = PS.Control_Monad_Writer_Trans;
    var Control_Monad_State_Trans = PS.Control_Monad_State_Trans;
    var Control_Monad_RWS = PS.Control_Monad_RWS;
    var Control_Monad_Error = PS.Control_Monad_Error;
    var Control_Monad_RWS_Trans = PS.Control_Monad_RWS_Trans;
    var Data_Monoid = PS.Data_Monoid;
    var MonadReader = function (ask, local) {
        this.ask = ask;
        this.local = local;
    };
    var monadReaderReaderT = function (__dict_Monad_544) {
        return new MonadReader(Prelude["return"](__dict_Monad_544), Control_Monad_Reader_Trans.withReaderT);
    };
    var monadReaderRWST = function (__dict_Monad_545) {
        return function (__dict_Monoid_546) {
            return new MonadReader(Control_Monad_RWS.ask(__dict_Monad_545["__superclass_Prelude.Applicative_0"]())(__dict_Monoid_546), Control_Monad_RWS.local);
        };
    };
    var monadReaderFun = new MonadReader(Prelude.id(Prelude.categoryArr), Prelude[">>>"](Prelude.semigroupoidArr));
    var local = function (dict) {
        return dict.local;
    };
    var ask = function (dict) {
        return dict.ask;
    };
    var monadReaderErrorT = function (__dict_Monad_547) {
        return function (__dict_Error_548) {
            return function (__dict_MonadReader_549) {
                return new MonadReader(Control_Monad_Trans.lift(Control_Monad_Error_Trans.monadTransErrorT(__dict_Error_548))(__dict_Monad_547)(ask(__dict_MonadReader_549)), function (f) {
                    return Control_Monad_Error_Trans.mapErrorT(local(__dict_MonadReader_549)(f));
                });
            };
        };
    };
    var monadReaderMaybeT = function (__dict_Monad_550) {
        return function (__dict_MonadReader_551) {
            return new MonadReader(Control_Monad_Trans.lift(Control_Monad_Maybe_Trans.monadTransMaybeT)(__dict_Monad_550)(ask(__dict_MonadReader_551)), function (f) {
                return Control_Monad_Maybe_Trans.mapMaybeT(local(__dict_MonadReader_551)(f));
            });
        };
    };
    var monadReaderStateT = function (__dict_Monad_552) {
        return function (__dict_MonadReader_553) {
            return new MonadReader(Control_Monad_Trans.lift(Control_Monad_State_Trans.monadTransStateT)(__dict_Monad_552)(ask(__dict_MonadReader_553)), function (f) {
                return Control_Monad_State_Trans.mapStateT(local(__dict_MonadReader_553)(f));
            });
        };
    };
    var monadReaderWriterT = function (__dict_Monad_554) {
        return function (__dict_Monoid_555) {
            return function (__dict_MonadReader_556) {
                return new MonadReader(Control_Monad_Trans.lift(Control_Monad_Writer_Trans.monadTransWriterT(__dict_Monoid_555))(__dict_Monad_554)(ask(__dict_MonadReader_556)), function (f) {
                    return Control_Monad_Writer_Trans.mapWriterT(local(__dict_MonadReader_556)(f));
                });
            };
        };
    };
    var reader = function (__dict_Monad_557) {
        return function (__dict_MonadReader_558) {
            return function (f) {
                return Prelude[">>="](__dict_Monad_557["__superclass_Prelude.Bind_1"]())(ask(__dict_MonadReader_558))(Prelude["<<<"](Prelude.semigroupoidArr)(Prelude["return"](__dict_Monad_557))(f));
            };
        };
    };
    return {
        MonadReader: MonadReader, 
        reader: reader, 
        local: local, 
        ask: ask, 
        monadReaderFun: monadReaderFun, 
        monadReaderReaderT: monadReaderReaderT, 
        monadReaderErrorT: monadReaderErrorT, 
        monadReaderMaybeT: monadReaderMaybeT, 
        monadReaderWriterT: monadReaderWriterT, 
        monadReaderStateT: monadReaderStateT, 
        monadReaderRWST: monadReaderRWST
    };
})();
var PS = PS || {};
PS.Control_Monad_State_Class = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var Control_Monad_RWS = PS.Control_Monad_RWS;
    var Control_Monad_State_Trans = PS.Control_Monad_State_Trans;
    var Control_Monad_Error = PS.Control_Monad_Error;
    var Control_Monad_Error_Trans = PS.Control_Monad_Error_Trans;
    var Control_Monad_Maybe_Trans = PS.Control_Monad_Maybe_Trans;
    var Control_Monad_Reader_Trans = PS.Control_Monad_Reader_Trans;
    var Control_Monad_RWS_Trans = PS.Control_Monad_RWS_Trans;
    var Control_Monad_Writer_Trans = PS.Control_Monad_Writer_Trans;
    var Data_Monoid = PS.Data_Monoid;
    var Data_Tuple = PS.Data_Tuple;
    var MonadState = function (state) {
        this.state = state;
    };
    var state = function (dict) {
        return dict.state;
    };
    var put = function (__dict_Monad_559) {
        return function (__dict_MonadState_560) {
            return function (s) {
                return state(__dict_MonadState_560)(function (_) {
                    return new Data_Tuple.Tuple(Prelude.unit, s);
                });
            };
        };
    };
    var monadStateWriterT = function (__dict_Monad_561) {
        return function (__dict_Monoid_562) {
            return function (__dict_MonadState_563) {
                return new MonadState(function (f) {
                    return Control_Monad_Trans.lift(Control_Monad_Writer_Trans.monadTransWriterT(__dict_Monoid_562))(__dict_Monad_561)(state(__dict_MonadState_563)(f));
                });
            };
        };
    };
    var monadStateStateT1 = function (__dict_Monad_564) {
        return function (__dict_MonadState_565) {
            return new MonadState(function (f) {
                return Control_Monad_Trans.lift(Control_Monad_State_Trans.monadTransStateT)(__dict_Monad_564)(state(__dict_MonadState_565)(f));
            });
        };
    };
    var monadStateStateT = function (__dict_Monad_566) {
        return new MonadState(function (f) {
            return Control_Monad_State_Trans.StateT(Prelude["<<<"](Prelude.semigroupoidArr)(Prelude["return"](__dict_Monad_566))(f));
        });
    };
    var monadStateReaderT = function (__dict_Monad_567) {
        return function (__dict_MonadState_568) {
            return new MonadState(function (f) {
                return Control_Monad_Trans.lift(Control_Monad_Reader_Trans.monadTransReaderT)(__dict_Monad_567)(state(__dict_MonadState_568)(f));
            });
        };
    };
    var monadStateRWST = function (__dict_Monad_569) {
        return function (__dict_Monoid_570) {
            return new MonadState(Control_Monad_RWS.state(__dict_Monad_569["__superclass_Prelude.Applicative_0"]())(__dict_Monoid_570));
        };
    };
    var monadStateMaybeT = function (__dict_Monad_571) {
        return function (__dict_MonadState_572) {
            return new MonadState(function (f) {
                return Control_Monad_Trans.lift(Control_Monad_Maybe_Trans.monadTransMaybeT)(__dict_Monad_571)(state(__dict_MonadState_572)(f));
            });
        };
    };
    var monadStateErrorT = function (__dict_Monad_573) {
        return function (__dict_Error_574) {
            return function (__dict_MonadState_575) {
                return new MonadState(function (f) {
                    return Control_Monad_Trans.lift(Control_Monad_Error_Trans.monadTransErrorT(__dict_Error_574))(__dict_Monad_573)(state(__dict_MonadState_575)(f));
                });
            };
        };
    };
    var modify = function (__dict_Monad_576) {
        return function (__dict_MonadState_577) {
            return function (f) {
                return state(__dict_MonadState_577)(function (s) {
                    return new Data_Tuple.Tuple(Prelude.unit, f(s));
                });
            };
        };
    };
    var gets = function (__dict_Monad_578) {
        return function (__dict_MonadState_579) {
            return function (f) {
                return state(__dict_MonadState_579)(function (s) {
                    return new Data_Tuple.Tuple(f(s), s);
                });
            };
        };
    };
    var get = function (__dict_Monad_580) {
        return function (__dict_MonadState_581) {
            return state(__dict_MonadState_581)(function (s) {
                return new Data_Tuple.Tuple(s, s);
            });
        };
    };
    return {
        MonadState: MonadState, 
        modify: modify, 
        put: put, 
        gets: gets, 
        get: get, 
        state: state, 
        monadStateStateT: monadStateStateT, 
        monadStateStateT1: monadStateStateT1, 
        monadStateErrorT: monadStateErrorT, 
        monadStateMaybeT: monadStateMaybeT, 
        monadStateReaderT: monadStateReaderT, 
        monadStateWriterT: monadStateWriterT, 
        monadStateRWST: monadStateRWST
    };
})();
var PS = PS || {};
PS.Control_Monad_Writer_Class = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Writer_Trans = PS.Control_Monad_Writer_Trans;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var Control_Monad_Error_Trans = PS.Control_Monad_Error_Trans;
    var Control_Monad_Maybe_Trans = PS.Control_Monad_Maybe_Trans;
    var Control_Monad_State_Trans = PS.Control_Monad_State_Trans;
    var Control_Monad_Reader_Trans = PS.Control_Monad_Reader_Trans;
    var Control_Monad_RWS = PS.Control_Monad_RWS;
    var Control_Monad_Error = PS.Control_Monad_Error;
    var Control_Monad_RWS_Trans = PS.Control_Monad_RWS_Trans;
    var Data_Monoid = PS.Data_Monoid;
    var Data_Tuple = PS.Data_Tuple;
    var MonadWriter = function (listen, pass, writer) {
        this.listen = listen;
        this.pass = pass;
        this.writer = writer;
    };
    var writer = function (dict) {
        return dict.writer;
    };
    var tell = function (__dict_Monoid_582) {
        return function (__dict_Monad_583) {
            return function (__dict_MonadWriter_584) {
                return function (w) {
                    return writer(__dict_MonadWriter_584)(new Data_Tuple.Tuple(Prelude.unit, w));
                };
            };
        };
    };
    var pass = function (dict) {
        return dict.pass;
    };
    var monadWriterWriterT = function (__dict_Monoid_585) {
        return function (__dict_Monad_586) {
            return new MonadWriter(function (m) {
                return Control_Monad_Writer_Trans.WriterT(Prelude[">>="](__dict_Monad_586["__superclass_Prelude.Bind_1"]())(Control_Monad_Writer_Trans.runWriterT(m))(function (_28) {
                    return Prelude["return"](__dict_Monad_586)(new Data_Tuple.Tuple(new Data_Tuple.Tuple(_28.value0, _28.value1), _28.value1));
                }));
            }, function (m) {
                return Control_Monad_Writer_Trans.WriterT(Prelude[">>="](__dict_Monad_586["__superclass_Prelude.Bind_1"]())(Control_Monad_Writer_Trans.runWriterT(m))(function (_29) {
                    return Prelude["return"](__dict_Monad_586)(new Data_Tuple.Tuple(_29.value0.value0, _29.value0.value1(_29.value1)));
                }));
            }, Prelude["<<<"](Prelude.semigroupoidArr)(Control_Monad_Writer_Trans.WriterT)(Prelude["return"](__dict_Monad_586)));
        };
    };
    var monadWriterRWST = function (__dict_Monad_587) {
        return function (__dict_Monoid_588) {
            return new MonadWriter(Control_Monad_RWS.listen(__dict_Monad_587), Control_Monad_RWS.pass(__dict_Monad_587), Control_Monad_RWS.writer(__dict_Monad_587["__superclass_Prelude.Applicative_0"]()));
        };
    };
    var listen = function (dict) {
        return dict.listen;
    };
    var listens = function (__dict_Monoid_589) {
        return function (__dict_Monad_590) {
            return function (__dict_MonadWriter_591) {
                return function (f) {
                    return function (m) {
                        return Prelude[">>="](__dict_Monad_590["__superclass_Prelude.Bind_1"]())(listen(__dict_MonadWriter_591)(m))(function (_26) {
                            return Prelude["return"](__dict_Monad_590)(new Data_Tuple.Tuple(_26.value0, f(_26.value1)));
                        });
                    };
                };
            };
        };
    };
    var monadWriterErrorT = function (__dict_Monad_592) {
        return function (__dict_Error_593) {
            return function (__dict_MonadWriter_594) {
                return new MonadWriter(Control_Monad_Error_Trans.liftListenError(__dict_Monad_592)(listen(__dict_MonadWriter_594)), Control_Monad_Error_Trans.liftPassError(__dict_Monad_592)(pass(__dict_MonadWriter_594)), function (wd) {
                    return Control_Monad_Trans.lift(Control_Monad_Error_Trans.monadTransErrorT(__dict_Error_593))(__dict_Monad_592)(writer(__dict_MonadWriter_594)(wd));
                });
            };
        };
    };
    var monadWriterMaybeT = function (__dict_Monad_595) {
        return function (__dict_MonadWriter_596) {
            return new MonadWriter(Control_Monad_Maybe_Trans.liftListenMaybe(__dict_Monad_595)(listen(__dict_MonadWriter_596)), Control_Monad_Maybe_Trans.liftPassMaybe(__dict_Monad_595)(pass(__dict_MonadWriter_596)), function (wd) {
                return Control_Monad_Trans.lift(Control_Monad_Maybe_Trans.monadTransMaybeT)(__dict_Monad_595)(writer(__dict_MonadWriter_596)(wd));
            });
        };
    };
    var monadWriterReaderT = function (__dict_Monad_597) {
        return function (__dict_MonadWriter_598) {
            return new MonadWriter(Control_Monad_Reader_Trans.mapReaderT(listen(__dict_MonadWriter_598)), Control_Monad_Reader_Trans.mapReaderT(pass(__dict_MonadWriter_598)), function (wd) {
                return Control_Monad_Trans.lift(Control_Monad_Reader_Trans.monadTransReaderT)(__dict_Monad_597)(writer(__dict_MonadWriter_598)(wd));
            });
        };
    };
    var monadWriterStateT = function (__dict_Monad_599) {
        return function (__dict_MonadWriter_600) {
            return new MonadWriter(Control_Monad_State_Trans.liftListenState(__dict_Monad_599)(listen(__dict_MonadWriter_600)), Control_Monad_State_Trans.liftPassState(__dict_Monad_599)(pass(__dict_MonadWriter_600)), function (wd) {
                return Control_Monad_Trans.lift(Control_Monad_State_Trans.monadTransStateT)(__dict_Monad_599)(writer(__dict_MonadWriter_600)(wd));
            });
        };
    };
    var censor = function (__dict_Monoid_601) {
        return function (__dict_Monad_602) {
            return function (__dict_MonadWriter_603) {
                return function (f) {
                    return function (m) {
                        return pass(__dict_MonadWriter_603)(Prelude[">>="](__dict_Monad_602["__superclass_Prelude.Bind_1"]())(m)(function (_27) {
                            return Prelude["return"](__dict_Monad_602)(new Data_Tuple.Tuple(_27, f));
                        }));
                    };
                };
            };
        };
    };
    return {
        MonadWriter: MonadWriter, 
        censor: censor, 
        listens: listens, 
        tell: tell, 
        pass: pass, 
        listen: listen, 
        writer: writer, 
        monadWriterWriterT: monadWriterWriterT, 
        monadWriterErrorT: monadWriterErrorT, 
        monadWriterMaybeT: monadWriterMaybeT, 
        monadWriterStateT: monadWriterStateT, 
        monadWriterReaderT: monadWriterReaderT, 
        monadWriterRWST: monadWriterRWST
    };
})();
var PS = PS || {};
PS.Control_Monad_RWS_Class = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_RWS_Trans = PS.Control_Monad_RWS_Trans;
    var Control_Monad_Error_Trans = PS.Control_Monad_Error_Trans;
    var Control_Monad_Error = PS.Control_Monad_Error;
    var Control_Monad_Maybe_Trans = PS.Control_Monad_Maybe_Trans;
    var Control_Monad_Reader_Class = PS.Control_Monad_Reader_Class;
    var Control_Monad_State_Class = PS.Control_Monad_State_Class;
    var Control_Monad_Writer_Class = PS.Control_Monad_Writer_Class;
    var Data_Monoid = PS.Data_Monoid;
    var MonadRWS = function (__superclass_Control$dotMonad$dotReader$dotClass$dotMonadReader_2, __superclass_Control$dotMonad$dotState$dotClass$dotMonadState_4, __superclass_Control$dotMonad$dotWriter$dotClass$dotMonadWriter_3, __superclass_Data$dotMonoid$dotMonoid_1, __superclass_Prelude$dotMonad_0) {
        this["__superclass_Control.Monad.Reader.Class.MonadReader_2"] = __superclass_Control$dotMonad$dotReader$dotClass$dotMonadReader_2;
        this["__superclass_Control.Monad.State.Class.MonadState_4"] = __superclass_Control$dotMonad$dotState$dotClass$dotMonadState_4;
        this["__superclass_Control.Monad.Writer.Class.MonadWriter_3"] = __superclass_Control$dotMonad$dotWriter$dotClass$dotMonadWriter_3;
        this["__superclass_Data.Monoid.Monoid_1"] = __superclass_Data$dotMonoid$dotMonoid_1;
        this["__superclass_Prelude.Monad_0"] = __superclass_Prelude$dotMonad_0;
    };
    var monadRWSRWST = function (__dict_Monad_604) {
        return function (__dict_Monoid_605) {
            return new MonadRWS(function () {
                return Control_Monad_Reader_Class.monadReaderRWST(__dict_Monad_604)(__dict_Monoid_605);
            }, function () {
                return Control_Monad_State_Class.monadStateRWST(__dict_Monad_604)(__dict_Monoid_605);
            }, function () {
                return Control_Monad_Writer_Class.monadWriterRWST(__dict_Monad_604)(__dict_Monoid_605);
            }, function () {
                return __dict_Monoid_605;
            }, function () {
                return Control_Monad_RWS_Trans.monadRWST(__dict_Monad_604)(__dict_Monoid_605);
            });
        };
    };
    var monadRWSMaybeT = function (__dict_Monad_606) {
        return function (__dict_Monoid_607) {
            return function (__dict_MonadRWS_608) {
                return function (__dict_MonadReader_609) {
                    return function (__dict_MonadWriter_610) {
                        return function (__dict_MonadState_611) {
                            return new MonadRWS(function () {
                                return Control_Monad_Reader_Class.monadReaderMaybeT(__dict_Monad_606)(__dict_MonadReader_609);
                            }, function () {
                                return Control_Monad_State_Class.monadStateMaybeT(__dict_Monad_606)(__dict_MonadState_611);
                            }, function () {
                                return Control_Monad_Writer_Class.monadWriterMaybeT(__dict_Monad_606)(__dict_MonadWriter_610);
                            }, function () {
                                return __dict_Monoid_607;
                            }, function () {
                                return Control_Monad_Maybe_Trans.monadMaybeT(__dict_Monad_606);
                            });
                        };
                    };
                };
            };
        };
    };
    var monadRWSErrorT = function (__dict_Monad_612) {
        return function (__dict_Monoid_613) {
            return function (__dict_MonadRWS_614) {
                return function (__dict_MonadReader_615) {
                    return function (__dict_MonadWriter_616) {
                        return function (__dict_MonadState_617) {
                            return function (__dict_Error_618) {
                                return new MonadRWS(function () {
                                    return Control_Monad_Reader_Class.monadReaderErrorT(__dict_Monad_612)(__dict_Error_618)(__dict_MonadReader_615);
                                }, function () {
                                    return Control_Monad_State_Class.monadStateErrorT(__dict_Monad_612)(__dict_Error_618)(__dict_MonadState_617);
                                }, function () {
                                    return Control_Monad_Writer_Class.monadWriterErrorT(__dict_Monad_612)(__dict_Error_618)(__dict_MonadWriter_616);
                                }, function () {
                                    return __dict_Monoid_613;
                                }, function () {
                                    return Control_Monad_Error_Trans.monadErrorT(__dict_Monad_612)(__dict_Error_618);
                                });
                            };
                        };
                    };
                };
            };
        };
    };
    return {
        MonadRWS: MonadRWS, 
        monadRWSRWST: monadRWSRWST, 
        monadRWSErrorT: monadRWSErrorT, 
        monadRWSMaybeT: monadRWSMaybeT
    };
})();
var PS = PS || {};
PS.Control_Monad_Reader = (function () {
    "use strict";
    var Data_Identity = PS.Data_Identity;
    var Control_Monad_Reader_Trans = PS.Control_Monad_Reader_Trans;
    var Prelude = PS.Prelude;
    var withReader = Control_Monad_Reader_Trans.withReaderT;
    var runReader = function (m) {
        return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Identity.runIdentity)(Control_Monad_Reader_Trans.runReaderT(m));
    };
    var mapReader = function (f) {
        return Control_Monad_Reader_Trans.mapReaderT(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Identity.Identity)(Prelude["<<<"](Prelude.semigroupoidArr)(f)(Data_Identity.runIdentity)));
    };
    return {
        mapReader: mapReader, 
        withReader: withReader, 
        runReader: runReader
    };
})();
var PS = PS || {};
PS.Control_Monad_State = (function () {
    "use strict";
    var Data_Identity = PS.Data_Identity;
    var Control_Monad_State_Trans = PS.Control_Monad_State_Trans;
    var Data_Tuple = PS.Data_Tuple;
    var Prelude = PS.Prelude;
    var withState = Control_Monad_State_Trans.withStateT;
    var runState = function (s) {
        return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Identity.runIdentity)(Control_Monad_State_Trans.runStateT(s));
    };
    var mapState = function (f) {
        return Control_Monad_State_Trans.mapStateT(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Identity.Identity)(Prelude["<<<"](Prelude.semigroupoidArr)(f)(Data_Identity.runIdentity)));
    };
    var execState = function (m) {
        return function (s) {
            return Data_Tuple.snd(runState(m)(s));
        };
    };
    var evalState = function (m) {
        return function (s) {
            return Data_Tuple.fst(runState(m)(s));
        };
    };
    return {
        withState: withState, 
        mapState: mapState, 
        execState: execState, 
        evalState: evalState, 
        runState: runState
    };
})();
var PS = PS || {};
PS.Optic_Monad = (function () {
    "use strict";
    var Control_Monad_State = PS.Control_Monad_State;
    var Prelude = PS.Prelude;
    var $hash$tilde = function (s) {
        return function (sa) {
            return Control_Monad_State.execState(sa)(s);
        };
    };
    return {
        "#~": $hash$tilde
    };
})();
var PS = PS || {};
PS.Control_Monad_Writer = (function () {
    "use strict";
    var Data_Identity = PS.Data_Identity;
    var Control_Monad_Writer_Trans = PS.Control_Monad_Writer_Trans;
    var Data_Tuple = PS.Data_Tuple;
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var runWriter = Prelude["<<<"](Prelude.semigroupoidArr)(Data_Identity.runIdentity)(Control_Monad_Writer_Trans.runWriterT);
    var mapWriter = function (f) {
        return Control_Monad_Writer_Trans.mapWriterT(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Identity.Identity)(Prelude["<<<"](Prelude.semigroupoidArr)(f)(Data_Identity.runIdentity)));
    };
    var execWriter = function (m) {
        return Data_Tuple.snd(runWriter(m));
    };
    return {
        mapWriter: mapWriter, 
        execWriter: execWriter, 
        runWriter: runWriter
    };
})();
var PS = PS || {};
PS.Data_Distributive = (function () {
    "use strict";
    var Data_Identity = PS.Data_Identity;
    var Prelude = PS.Prelude;
    
    /**
     *  Categorical dual of Traversable
     */
    var Distributive = function (__superclass_Prelude$dotFunctor_0, collect, distribute) {
        this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
        this.collect = collect;
        this.distribute = distribute;
    };
    var distributiveIdentity = new Distributive(function () {
        return Data_Identity.functorIdentity;
    }, function (__dict_Functor_620) {
        return function (a2Idb) {
            return function (ga) {
                return Prelude["<$>"](__dict_Functor_620)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Identity.runIdentity)(a2Idb))(ga);
            };
        };
    }, function (__dict_Functor_619) {
        return function (gIdb) {
            return Prelude["<$>"](__dict_Functor_619)(Data_Identity.runIdentity)(gIdb);
        };
    });
    
    /**
     *  Categorical dual of Traversable
     *  Dual of sequence
     */
    var distribute = function (dict) {
        return dict.distribute;
    };
    
    /**
     *  Default implementation
     *  collect a2gb fa = distribute (a2gb <$> fa)
     */
    var cotraverse = function (__dict_Distributive_621) {
        return function (__dict_Functor_622) {
            return function (ga2b) {
                return function (gfa) {
                    return Prelude["<$>"](__dict_Distributive_621["__superclass_Prelude.Functor_0"]())(ga2b)(distribute(__dict_Distributive_621)(__dict_Functor_622)(gfa));
                };
            };
        };
    };
    
    /**
     *  Categorical dual of Traversable
     *  Default implementation
     *  distribute = collect id
     */
    var collect = function (dict) {
        return dict.collect;
    };
    return {
        Distributive: Distributive, 
        cotraverse: cotraverse, 
        collect: collect, 
        distribute: distribute, 
        distributiveIdentity: distributiveIdentity
    };
})();
var PS = PS || {};
PS.Data_Lazy_List = (function () {
    "use strict";
    var Data_Lazy = PS.Data_Lazy;
    var Prelude = PS.Prelude;
    var Data_Array = PS.Data_Array;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Monoid = PS.Data_Monoid;
    var Data_Traversable = PS.Data_Traversable;
    function showItems (l) {  return l.join(', ');};
    var Nil = (function () {
        function Nil() {

        };
        Nil.value = new Nil();
        return Nil;
    })();
    var Cons = (function () {
        function Cons(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        };
        Cons.create = function (value0) {
            return function (value1) {
                return new Cons(value0, value1);
            };
        };
        return Cons;
    })();
    var $less$dot$greater = function (_641) {
        return function (_642) {
            if (_641 instanceof Nil) {
                return Data_Lazy.force(_642);
            };
            if (_641 instanceof Cons) {
                return new Cons(_641.value0, Prelude["<$>"](Data_Lazy.functorLazy)(function (xs$prime) {
                    return $less$dot$greater(xs$prime)(_642);
                })(_641.value1));
            };
            throw new Error("Failed pattern match");
        };
    };
    var toArray = function (_643) {
        if (_643 instanceof Nil) {
            return [  ];
        };
        if (_643 instanceof Cons) {
            return Prelude[":"](_643.value0)(toArray(Data_Lazy.force(_643.value1)));
        };
        throw new Error("Failed pattern match");
    };
    var take = function (_645) {
        return function (_646) {
            if (_645 < 1) {
                return Nil.value;
            };
            if (_646 instanceof Nil) {
                return Nil.value;
            };
            if (_646 instanceof Cons) {
                return new Cons(_646.value0, Data_Lazy.defer(function (_) {
                    return take(_645 - 1)(Data_Lazy.force(_646.value1));
                }));
            };
            throw new Error("Failed pattern match");
        };
    };
    var showList = function (__dict_Show_623) {
        return new Prelude.Show(function (l) {
            return "List(" + (showItems(Data_Array.map(Prelude.show(__dict_Show_623))(toArray(l))) + ")");
        });
    };
    var semigroupList = new Prelude.Semigroup(function (xs) {
        return function (ys) {
            return $less$dot$greater(xs)(Data_Lazy.defer(function (_) {
                return ys;
            }));
        };
    });
    var repeat = function (x) {
        return new Cons(x, Data_Lazy.defer(function (_) {
            return repeat(x);
        }));
    };
    var monoidList = new Data_Monoid.Monoid(function () {
        return semigroupList;
    }, Nil.value);
    var functorList = new Prelude.Functor(function (_651) {
        return function (_652) {
            if (_652 instanceof Nil) {
                return Nil.value;
            };
            if (_652 instanceof Cons) {
                return new Cons(_651(_652.value0), Prelude["<$>"](Data_Lazy.functorLazy)(Prelude["<$>"](functorList)(_651))(_652.value1));
            };
            throw new Error("Failed pattern match");
        };
    });
    var fromArray = function (_644) {
        if (_644.length === 0) {
            return Nil.value;
        };
        if (_644.length >= 1) {
            var _2273 = _644.slice(1);
            return new Cons(_644[0], Data_Lazy.defer(function (_) {
                return fromArray(_2273);
            }));
        };
        throw new Error("Failed pattern match");
    };
    var eqList = function (__dict_Eq_624) {
        return new Prelude.Eq(function (l) {
            return function (l$prime) {
                return !Prelude["=="](eqList(__dict_Eq_624))(l)(l$prime);
            };
        }, function (_649) {
            return function (_650) {
                if (_649 instanceof Nil && _650 instanceof Nil) {
                    return true;
                };
                if (_649 instanceof Cons && _650 instanceof Cons) {
                    return Prelude["=="](__dict_Eq_624)(_649.value0)(_650.value0) && Prelude["=="](eqList(__dict_Eq_624))(Data_Lazy.force(_649.value1))(Data_Lazy.force(_650.value1));
                };
                return false;
            };
        });
    };
    var drop = function (__copy__647) {
        return function (__copy__648) {
            var _647 = __copy__647;
            var _648 = __copy__648;
            tco: while (true) {
                if (_647 < 1) {
                    return _648;
                };
                if (_648 instanceof Nil) {
                    return Nil.value;
                };
                if (_648 instanceof Cons) {
                    var __tco__647 = _647 - 1;
                    var __tco__648 = Data_Lazy.force(_648.value1);
                    _647 = __tco__647;
                    _648 = __tco__648;
                    continue tco;
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var monadList = new Prelude.Monad(function () {
        return applicativeList;
    }, function () {
        return bindList;
    });
    var bindList = new Prelude.Bind(function (_653) {
        return function (_654) {
            if (_653 instanceof Nil) {
                return Nil.value;
            };
            if (_653 instanceof Cons) {
                return $less$dot$greater(_654(_653.value0))(Prelude["<$>"](Data_Lazy.functorLazy)(function (xs$prime) {
                    return Prelude[">>="](bindList)(xs$prime)(_654);
                })(_653.value1));
            };
            throw new Error("Failed pattern match");
        };
    }, function () {
        return applyList;
    });
    var applyList = new Prelude.Apply(Prelude.ap(monadList), function () {
        return functorList;
    });
    var applicativeList = new Prelude.Applicative(function () {
        return applyList;
    }, function (x) {
        return new Cons(x, Data_Lazy.defer(function (_) {
            return Nil.value;
        }));
    });
    return {
        Nil: Nil, 
        Cons: Cons, 
        drop: drop, 
        take: take, 
        repeat: repeat, 
        fromArray: fromArray, 
        toArray: toArray, 
        eqList: eqList, 
        showList: showList, 
        semigroupList: semigroupList, 
        monoidList: monoidList, 
        functorList: functorList, 
        applyList: applyList, 
        applicativeList: applicativeList, 
        bindList: bindList, 
        monadList: monadList
    };
})();
var PS = PS || {};
PS.Data_Map = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Traversable = PS.Data_Traversable;
    var Data_Array = PS.Data_Array;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Monoid = PS.Data_Monoid;
    var Leaf = (function () {
        function Leaf() {

        };
        Leaf.value = new Leaf();
        return Leaf;
    })();
    var Two = (function () {
        function Two(value0, value1, value2, value3) {
            this.value0 = value0;
            this.value1 = value1;
            this.value2 = value2;
            this.value3 = value3;
        };
        Two.create = function (value0) {
            return function (value1) {
                return function (value2) {
                    return function (value3) {
                        return new Two(value0, value1, value2, value3);
                    };
                };
            };
        };
        return Two;
    })();
    var Three = (function () {
        function Three(value0, value1, value2, value3, value4, value5, value6) {
            this.value0 = value0;
            this.value1 = value1;
            this.value2 = value2;
            this.value3 = value3;
            this.value4 = value4;
            this.value5 = value5;
            this.value6 = value6;
        };
        Three.create = function (value0) {
            return function (value1) {
                return function (value2) {
                    return function (value3) {
                        return function (value4) {
                            return function (value5) {
                                return function (value6) {
                                    return new Three(value0, value1, value2, value3, value4, value5, value6);
                                };
                            };
                        };
                    };
                };
            };
        };
        return Three;
    })();
    var TwoLeft = (function () {
        function TwoLeft(value0, value1, value2) {
            this.value0 = value0;
            this.value1 = value1;
            this.value2 = value2;
        };
        TwoLeft.create = function (value0) {
            return function (value1) {
                return function (value2) {
                    return new TwoLeft(value0, value1, value2);
                };
            };
        };
        return TwoLeft;
    })();
    var TwoRight = (function () {
        function TwoRight(value0, value1, value2) {
            this.value0 = value0;
            this.value1 = value1;
            this.value2 = value2;
        };
        TwoRight.create = function (value0) {
            return function (value1) {
                return function (value2) {
                    return new TwoRight(value0, value1, value2);
                };
            };
        };
        return TwoRight;
    })();
    var ThreeLeft = (function () {
        function ThreeLeft(value0, value1, value2, value3, value4, value5) {
            this.value0 = value0;
            this.value1 = value1;
            this.value2 = value2;
            this.value3 = value3;
            this.value4 = value4;
            this.value5 = value5;
        };
        ThreeLeft.create = function (value0) {
            return function (value1) {
                return function (value2) {
                    return function (value3) {
                        return function (value4) {
                            return function (value5) {
                                return new ThreeLeft(value0, value1, value2, value3, value4, value5);
                            };
                        };
                    };
                };
            };
        };
        return ThreeLeft;
    })();
    var ThreeMiddle = (function () {
        function ThreeMiddle(value0, value1, value2, value3, value4, value5) {
            this.value0 = value0;
            this.value1 = value1;
            this.value2 = value2;
            this.value3 = value3;
            this.value4 = value4;
            this.value5 = value5;
        };
        ThreeMiddle.create = function (value0) {
            return function (value1) {
                return function (value2) {
                    return function (value3) {
                        return function (value4) {
                            return function (value5) {
                                return new ThreeMiddle(value0, value1, value2, value3, value4, value5);
                            };
                        };
                    };
                };
            };
        };
        return ThreeMiddle;
    })();
    var ThreeRight = (function () {
        function ThreeRight(value0, value1, value2, value3, value4, value5) {
            this.value0 = value0;
            this.value1 = value1;
            this.value2 = value2;
            this.value3 = value3;
            this.value4 = value4;
            this.value5 = value5;
        };
        ThreeRight.create = function (value0) {
            return function (value1) {
                return function (value2) {
                    return function (value3) {
                        return function (value4) {
                            return function (value5) {
                                return new ThreeRight(value0, value1, value2, value3, value4, value5);
                            };
                        };
                    };
                };
            };
        };
        return ThreeRight;
    })();
    var KickUp = (function () {
        function KickUp(value0, value1, value2, value3) {
            this.value0 = value0;
            this.value1 = value1;
            this.value2 = value2;
            this.value3 = value3;
        };
        KickUp.create = function (value0) {
            return function (value1) {
                return function (value2) {
                    return function (value3) {
                        return new KickUp(value0, value1, value2, value3);
                    };
                };
            };
        };
        return KickUp;
    })();
    var values = function (_664) {
        if (_664 instanceof Leaf) {
            return [  ];
        };
        if (_664 instanceof Two) {
            return Prelude["++"](Data_Array.semigroupArray)(values(_664.value0))(Prelude["++"](Data_Array.semigroupArray)([ _664.value2 ])(values(_664.value3)));
        };
        if (_664 instanceof Three) {
            return Prelude["++"](Data_Array.semigroupArray)(values(_664.value0))(Prelude["++"](Data_Array.semigroupArray)([ _664.value2 ])(Prelude["++"](Data_Array.semigroupArray)(values(_664.value3))(Prelude["++"](Data_Array.semigroupArray)([ _664.value5 ])(values(_664.value6)))));
        };
        throw new Error("Failed pattern match");
    };
    var toList = function (_662) {
        if (_662 instanceof Leaf) {
            return [  ];
        };
        if (_662 instanceof Two) {
            return Prelude["++"](Data_Array.semigroupArray)(toList(_662.value0))(Prelude["++"](Data_Array.semigroupArray)([ new Data_Tuple.Tuple(_662.value1, _662.value2) ])(toList(_662.value3)));
        };
        if (_662 instanceof Three) {
            return Prelude["++"](Data_Array.semigroupArray)(toList(_662.value0))(Prelude["++"](Data_Array.semigroupArray)([ new Data_Tuple.Tuple(_662.value1, _662.value2) ])(Prelude["++"](Data_Array.semigroupArray)(toList(_662.value3))(Prelude["++"](Data_Array.semigroupArray)([ new Data_Tuple.Tuple(_662.value4, _662.value5) ])(toList(_662.value6)))));
        };
        throw new Error("Failed pattern match");
    };
    var size = Prelude["<<<"](Prelude.semigroupoidArr)(Data_Array.length)(values);
    var singleton = function (k) {
        return function (v) {
            return new Two(Leaf.value, k, v, Leaf.value);
        };
    };
    var showTree = function (__dict_Show_625) {
        return function (__dict_Show_626) {
            return function (_656) {
                if (_656 instanceof Leaf) {
                    return "Leaf";
                };
                if (_656 instanceof Two) {
                    return "Two (" + (showTree(__dict_Show_625)(__dict_Show_626)(_656.value0) + (") (" + (Prelude.show(__dict_Show_625)(_656.value1) + (") (" + (Prelude.show(__dict_Show_626)(_656.value2) + (") (" + (showTree(__dict_Show_625)(__dict_Show_626)(_656.value3) + ")")))))));
                };
                if (_656 instanceof Three) {
                    return "Three (" + (showTree(__dict_Show_625)(__dict_Show_626)(_656.value0) + (") (" + (Prelude.show(__dict_Show_625)(_656.value1) + (") (" + (Prelude.show(__dict_Show_626)(_656.value2) + (") (" + (showTree(__dict_Show_625)(__dict_Show_626)(_656.value3) + (") (" + (Prelude.show(__dict_Show_625)(_656.value4) + (") (" + (Prelude.show(__dict_Show_626)(_656.value5) + (") (" + (showTree(__dict_Show_625)(__dict_Show_626)(_656.value6) + ")")))))))))))));
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var showMap = function (__dict_Show_627) {
        return function (__dict_Show_628) {
            return new Prelude.Show(function (m) {
                return "fromList " + Prelude.show(Prelude.showArray(Data_Tuple.showTuple(__dict_Show_627)(__dict_Show_628)))(toList(m));
            });
        };
    };
    var lookup = function (__copy___dict_Ord_629) {
        return function (__copy__658) {
            return function (__copy__659) {
                var __dict_Ord_629 = __copy___dict_Ord_629;
                var _658 = __copy__658;
                var _659 = __copy__659;
                tco: while (true) {
                    if (_659 instanceof Leaf) {
                        return Data_Maybe.Nothing.value;
                    };
                    if (_659 instanceof Two && Prelude["=="](__dict_Ord_629["__superclass_Prelude.Eq_0"]())(_658)(_659.value1)) {
                        return new Data_Maybe.Just(_659.value2);
                    };
                    if (_659 instanceof Two && Prelude["<"](__dict_Ord_629)(_658)(_659.value1)) {
                        var __tco___dict_Ord_629 = __dict_Ord_629;
                        var __tco__658 = _658;
                        var __tco__659 = _659.value0;
                        __dict_Ord_629 = __tco___dict_Ord_629;
                        _658 = __tco__658;
                        _659 = __tco__659;
                        continue tco;
                    };
                    if (_659 instanceof Two) {
                        var __tco___dict_Ord_629 = __dict_Ord_629;
                        var __tco__658 = _658;
                        var __tco__659 = _659.value3;
                        __dict_Ord_629 = __tco___dict_Ord_629;
                        _658 = __tco__658;
                        _659 = __tco__659;
                        continue tco;
                    };
                    if (_659 instanceof Three && Prelude["=="](__dict_Ord_629["__superclass_Prelude.Eq_0"]())(_658)(_659.value1)) {
                        return new Data_Maybe.Just(_659.value2);
                    };
                    if (_659 instanceof Three && Prelude["=="](__dict_Ord_629["__superclass_Prelude.Eq_0"]())(_658)(_659.value4)) {
                        return new Data_Maybe.Just(_659.value5);
                    };
                    if (_659 instanceof Three && Prelude["<"](__dict_Ord_629)(_658)(_659.value1)) {
                        var __tco___dict_Ord_629 = __dict_Ord_629;
                        var __tco__658 = _658;
                        var __tco__659 = _659.value0;
                        __dict_Ord_629 = __tco___dict_Ord_629;
                        _658 = __tco__658;
                        _659 = __tco__659;
                        continue tco;
                    };
                    if (_659 instanceof Three && (Prelude["<"](__dict_Ord_629)(_659.value1)(_658) && Prelude["<="](__dict_Ord_629)(_658)(_659.value4))) {
                        var __tco___dict_Ord_629 = __dict_Ord_629;
                        var __tco__658 = _658;
                        var __tco__659 = _659.value3;
                        __dict_Ord_629 = __tco___dict_Ord_629;
                        _658 = __tco__658;
                        _659 = __tco__659;
                        continue tco;
                    };
                    if (_659 instanceof Three) {
                        var __tco___dict_Ord_629 = __dict_Ord_629;
                        var __tco__658 = _658;
                        var __tco__659 = _659.value6;
                        __dict_Ord_629 = __tco___dict_Ord_629;
                        _658 = __tco__658;
                        _659 = __tco__659;
                        continue tco;
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
    };
    var member = function (__dict_Ord_630) {
        return function (k) {
            return function (m) {
                return Data_Maybe.isJust(lookup(__dict_Ord_630)(k)(m));
            };
        };
    };
    var keys = function (_663) {
        if (_663 instanceof Leaf) {
            return [  ];
        };
        if (_663 instanceof Two) {
            return Prelude["++"](Data_Array.semigroupArray)(keys(_663.value0))(Prelude["++"](Data_Array.semigroupArray)([ _663.value1 ])(keys(_663.value3)));
        };
        if (_663 instanceof Three) {
            return Prelude["++"](Data_Array.semigroupArray)(keys(_663.value0))(Prelude["++"](Data_Array.semigroupArray)([ _663.value1 ])(Prelude["++"](Data_Array.semigroupArray)(keys(_663.value3))(Prelude["++"](Data_Array.semigroupArray)([ _663.value4 ])(keys(_663.value6)))));
        };
        throw new Error("Failed pattern match");
    };
    var isEmpty = function (_657) {
        if (_657 instanceof Leaf) {
            return true;
        };
        return false;
    };
    var functorMap = new Prelude.Functor(function (_665) {
        return function (_666) {
            if (_666 instanceof Leaf) {
                return Leaf.value;
            };
            if (_666 instanceof Two) {
                return new Two(Prelude["<$>"](functorMap)(_665)(_666.value0), _666.value1, _665(_666.value2), Prelude["<$>"](functorMap)(_665)(_666.value3));
            };
            if (_666 instanceof Three) {
                return new Three(Prelude["<$>"](functorMap)(_665)(_666.value0), _666.value1, _665(_666.value2), Prelude["<$>"](functorMap)(_665)(_666.value3), _666.value4, _665(_666.value5), Prelude["<$>"](functorMap)(_665)(_666.value6));
            };
            throw new Error("Failed pattern match");
        };
    });
    var map = Prelude["<$>"](functorMap);
    var fromZipper = function (__copy___dict_Ord_631) {
        return function (__copy__660) {
            return function (__copy__661) {
                var __dict_Ord_631 = __copy___dict_Ord_631;
                var _660 = __copy__660;
                var _661 = __copy__661;
                tco: while (true) {
                    if (_660.length === 0) {
                        return _661;
                    };
                    if (_660.length >= 1) {
                        var _2405 = _660.slice(1);
                        if (_660[0] instanceof TwoLeft) {
                            var __tco___dict_Ord_631 = __dict_Ord_631;
                            var __tco__661 = new Two(_661, (_660[0]).value0, (_660[0]).value1, (_660[0]).value2);
                            __dict_Ord_631 = __tco___dict_Ord_631;
                            _660 = _2405;
                            _661 = __tco__661;
                            continue tco;
                        };
                    };
                    if (_660.length >= 1) {
                        var _2410 = _660.slice(1);
                        if (_660[0] instanceof TwoRight) {
                            var __tco___dict_Ord_631 = __dict_Ord_631;
                            var __tco__661 = new Two((_660[0]).value0, (_660[0]).value1, (_660[0]).value2, _661);
                            __dict_Ord_631 = __tco___dict_Ord_631;
                            _660 = _2410;
                            _661 = __tco__661;
                            continue tco;
                        };
                    };
                    if (_660.length >= 1) {
                        var _2418 = _660.slice(1);
                        if (_660[0] instanceof ThreeLeft) {
                            var __tco___dict_Ord_631 = __dict_Ord_631;
                            var __tco__661 = new Three(_661, (_660[0]).value0, (_660[0]).value1, (_660[0]).value2, (_660[0]).value3, (_660[0]).value4, (_660[0]).value5);
                            __dict_Ord_631 = __tco___dict_Ord_631;
                            _660 = _2418;
                            _661 = __tco__661;
                            continue tco;
                        };
                    };
                    if (_660.length >= 1) {
                        var _2426 = _660.slice(1);
                        if (_660[0] instanceof ThreeMiddle) {
                            var __tco___dict_Ord_631 = __dict_Ord_631;
                            var __tco__661 = new Three((_660[0]).value0, (_660[0]).value1, (_660[0]).value2, _661, (_660[0]).value3, (_660[0]).value4, (_660[0]).value5);
                            __dict_Ord_631 = __tco___dict_Ord_631;
                            _660 = _2426;
                            _661 = __tco__661;
                            continue tco;
                        };
                    };
                    if (_660.length >= 1) {
                        var _2434 = _660.slice(1);
                        if (_660[0] instanceof ThreeRight) {
                            var __tco___dict_Ord_631 = __dict_Ord_631;
                            var __tco__661 = new Three((_660[0]).value0, (_660[0]).value1, (_660[0]).value2, (_660[0]).value3, (_660[0]).value4, (_660[0]).value5, _661);
                            __dict_Ord_631 = __tco___dict_Ord_631;
                            _660 = _2434;
                            _661 = __tco__661;
                            continue tco;
                        };
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
    };
    var insert = function (__dict_Ord_632) {
        var up = function (__copy___dict_Ord_633) {
            return function (__copy__672) {
                return function (__copy__673) {
                    var __dict_Ord_633 = __copy___dict_Ord_633;
                    var _672 = __copy__672;
                    var _673 = __copy__673;
                    tco: while (true) {
                        if (_672.length === 0) {
                            return new Two(_673.value0, _673.value1, _673.value2, _673.value3);
                        };
                        if (_672.length >= 1) {
                            var _2449 = _672.slice(1);
                            if (_672[0] instanceof TwoLeft) {
                                return fromZipper(__dict_Ord_633)(_2449)(new Three(_673.value0, _673.value1, _673.value2, _673.value3, (_672[0]).value0, (_672[0]).value1, (_672[0]).value2));
                            };
                        };
                        if (_672.length >= 1) {
                            var _2458 = _672.slice(1);
                            if (_672[0] instanceof TwoRight) {
                                return fromZipper(__dict_Ord_633)(_2458)(new Three((_672[0]).value0, (_672[0]).value1, (_672[0]).value2, _673.value0, _673.value1, _673.value2, _673.value3));
                            };
                        };
                        if (_672.length >= 1) {
                            var _2470 = _672.slice(1);
                            if (_672[0] instanceof ThreeLeft) {
                                var __tco___dict_Ord_633 = __dict_Ord_633;
                                var __tco__673 = new KickUp(new Two(_673.value0, _673.value1, _673.value2, _673.value3), (_672[0]).value0, (_672[0]).value1, new Two((_672[0]).value2, (_672[0]).value3, (_672[0]).value4, (_672[0]).value5));
                                __dict_Ord_633 = __tco___dict_Ord_633;
                                _672 = _2470;
                                _673 = __tco__673;
                                continue tco;
                            };
                        };
                        if (_672.length >= 1) {
                            var _2482 = _672.slice(1);
                            if (_672[0] instanceof ThreeMiddle) {
                                var __tco___dict_Ord_633 = __dict_Ord_633;
                                var __tco__673 = new KickUp(new Two((_672[0]).value0, (_672[0]).value1, (_672[0]).value2, _673.value0), _673.value1, _673.value2, new Two(_673.value3, (_672[0]).value3, (_672[0]).value4, (_672[0]).value5));
                                __dict_Ord_633 = __tco___dict_Ord_633;
                                _672 = _2482;
                                _673 = __tco__673;
                                continue tco;
                            };
                        };
                        if (_672.length >= 1) {
                            var _2494 = _672.slice(1);
                            if (_672[0] instanceof ThreeRight) {
                                var __tco___dict_Ord_633 = __dict_Ord_633;
                                var __tco__673 = new KickUp(new Two((_672[0]).value0, (_672[0]).value1, (_672[0]).value2, (_672[0]).value3), (_672[0]).value4, (_672[0]).value5, new Two(_673.value0, _673.value1, _673.value2, _673.value3));
                                __dict_Ord_633 = __tco___dict_Ord_633;
                                _672 = _2494;
                                _673 = __tco__673;
                                continue tco;
                            };
                        };
                        throw new Error("Failed pattern match");
                    };
                };
            };
        };
        var down = function (__copy___dict_Ord_634) {
            return function (__copy__668) {
                return function (__copy__669) {
                    return function (__copy__670) {
                        return function (__copy__671) {
                            var __dict_Ord_634 = __copy___dict_Ord_634;
                            var _668 = __copy__668;
                            var _669 = __copy__669;
                            var _670 = __copy__670;
                            var _671 = __copy__671;
                            tco: while (true) {
                                if (_671 instanceof Leaf) {
                                    return up(__dict_Ord_634)(_668)(new KickUp(Leaf.value, _669, _670, Leaf.value));
                                };
                                if (_671 instanceof Two && Prelude["=="](__dict_Ord_634["__superclass_Prelude.Eq_0"]())(_669)(_671.value1)) {
                                    return fromZipper(__dict_Ord_634)(_668)(new Two(_671.value0, _669, _670, _671.value3));
                                };
                                if (_671 instanceof Two && Prelude["<"](__dict_Ord_634)(_669)(_671.value1)) {
                                    var __tco___dict_Ord_634 = __dict_Ord_634;
                                    var __tco__668 = Prelude[":"](new TwoLeft(_671.value1, _671.value2, _671.value3))(_668);
                                    var __tco__669 = _669;
                                    var __tco__670 = _670;
                                    var __tco__671 = _671.value0;
                                    __dict_Ord_634 = __tco___dict_Ord_634;
                                    _668 = __tco__668;
                                    _669 = __tco__669;
                                    _670 = __tco__670;
                                    _671 = __tco__671;
                                    continue tco;
                                };
                                if (_671 instanceof Two) {
                                    var __tco___dict_Ord_634 = __dict_Ord_634;
                                    var __tco__668 = Prelude[":"](new TwoRight(_671.value0, _671.value1, _671.value2))(_668);
                                    var __tco__669 = _669;
                                    var __tco__670 = _670;
                                    var __tco__671 = _671.value3;
                                    __dict_Ord_634 = __tco___dict_Ord_634;
                                    _668 = __tco__668;
                                    _669 = __tco__669;
                                    _670 = __tco__670;
                                    _671 = __tco__671;
                                    continue tco;
                                };
                                if (_671 instanceof Three && Prelude["=="](__dict_Ord_634["__superclass_Prelude.Eq_0"]())(_669)(_671.value1)) {
                                    return fromZipper(__dict_Ord_634)(_668)(new Three(_671.value0, _669, _670, _671.value3, _671.value4, _671.value5, _671.value6));
                                };
                                if (_671 instanceof Three && Prelude["=="](__dict_Ord_634["__superclass_Prelude.Eq_0"]())(_669)(_671.value4)) {
                                    return fromZipper(__dict_Ord_634)(_668)(new Three(_671.value0, _671.value1, _671.value2, _671.value3, _669, _670, _671.value6));
                                };
                                if (_671 instanceof Three && Prelude["<"](__dict_Ord_634)(_669)(_671.value1)) {
                                    var __tco___dict_Ord_634 = __dict_Ord_634;
                                    var __tco__668 = Prelude[":"](new ThreeLeft(_671.value1, _671.value2, _671.value3, _671.value4, _671.value5, _671.value6))(_668);
                                    var __tco__669 = _669;
                                    var __tco__670 = _670;
                                    var __tco__671 = _671.value0;
                                    __dict_Ord_634 = __tco___dict_Ord_634;
                                    _668 = __tco__668;
                                    _669 = __tco__669;
                                    _670 = __tco__670;
                                    _671 = __tco__671;
                                    continue tco;
                                };
                                if (_671 instanceof Three && (Prelude["<"](__dict_Ord_634)(_671.value1)(_669) && Prelude["<="](__dict_Ord_634)(_669)(_671.value4))) {
                                    var __tco___dict_Ord_634 = __dict_Ord_634;
                                    var __tco__668 = Prelude[":"](new ThreeMiddle(_671.value0, _671.value1, _671.value2, _671.value4, _671.value5, _671.value6))(_668);
                                    var __tco__669 = _669;
                                    var __tco__670 = _670;
                                    var __tco__671 = _671.value3;
                                    __dict_Ord_634 = __tco___dict_Ord_634;
                                    _668 = __tco__668;
                                    _669 = __tco__669;
                                    _670 = __tco__670;
                                    _671 = __tco__671;
                                    continue tco;
                                };
                                if (_671 instanceof Three) {
                                    var __tco___dict_Ord_634 = __dict_Ord_634;
                                    var __tco__668 = Prelude[":"](new ThreeRight(_671.value0, _671.value1, _671.value2, _671.value3, _671.value4, _671.value5))(_668);
                                    var __tco__669 = _669;
                                    var __tco__670 = _670;
                                    var __tco__671 = _671.value6;
                                    __dict_Ord_634 = __tco___dict_Ord_634;
                                    _668 = __tco__668;
                                    _669 = __tco__669;
                                    _670 = __tco__670;
                                    _671 = __tco__671;
                                    continue tco;
                                };
                                throw new Error("Failed pattern match");
                            };
                        };
                    };
                };
            };
        };
        return down(__dict_Ord_632)([  ]);
    };
    var foldableMap = new Data_Foldable.Foldable(function (__dict_Monoid_635) {
        return function (f) {
            return function (m) {
                return Data_Foldable.foldMap(Data_Foldable.foldableArray)(__dict_Monoid_635)(f)(values(m));
            };
        };
    }, function (f) {
        return function (z) {
            return function (m) {
                return Data_Foldable.foldl(Data_Foldable.foldableArray)(f)(z)(values(m));
            };
        };
    }, function (f) {
        return function (z) {
            return function (m) {
                return Data_Foldable.foldr(Data_Foldable.foldableArray)(f)(z)(values(m));
            };
        };
    });
    var eqMap = function (__dict_Eq_636) {
        return function (__dict_Eq_637) {
            return new Prelude.Eq(function (m1) {
                return function (m2) {
                    return !Prelude["=="](eqMap(__dict_Eq_636)(__dict_Eq_637))(m1)(m2);
                };
            }, function (m1) {
                return function (m2) {
                    return Prelude["=="](Prelude.eqArray(Data_Tuple.eqTuple(__dict_Eq_636)(__dict_Eq_637)))(toList(m1))(toList(m2));
                };
            });
        };
    };
    var empty = Leaf.value;
    var fromList = function (__dict_Ord_638) {
        return Data_Foldable.foldl(Data_Foldable.foldableArray)(function (m) {
            return function (_655) {
                return insert(__dict_Ord_638)(_655.value0)(_655.value1)(m);
            };
        })(empty);
    };
    var $$delete = function (__dict_Ord_640) {
        var up = function (__copy___dict_Ord_641) {
            return function (__copy__677) {
                return function (__copy__678) {
                    var __dict_Ord_641 = __copy___dict_Ord_641;
                    var _677 = __copy__677;
                    var _678 = __copy__678;
                    tco: while (true) {
                        if (_677.length === 0) {
                            return _678;
                        };
                        if (_677.length >= 1) {
                            var _2555 = _677.slice(1);
                            if (_677[0] instanceof TwoLeft && ((_677[0]).value2 instanceof Leaf && _678 instanceof Leaf)) {
                                return fromZipper(__dict_Ord_641)(_2555)(new Two(Leaf.value, (_677[0]).value0, (_677[0]).value1, Leaf.value));
                            };
                        };
                        if (_677.length >= 1) {
                            var _2560 = _677.slice(1);
                            if (_677[0] instanceof TwoRight && ((_677[0]).value0 instanceof Leaf && _678 instanceof Leaf)) {
                                return fromZipper(__dict_Ord_641)(_2560)(new Two(Leaf.value, (_677[0]).value1, (_677[0]).value2, Leaf.value));
                            };
                        };
                        if (_677.length >= 1) {
                            var _2569 = _677.slice(1);
                            if (_677[0] instanceof TwoLeft && (_677[0]).value2 instanceof Two) {
                                var __tco___dict_Ord_641 = __dict_Ord_641;
                                var __tco__678 = new Three(_678, (_677[0]).value0, (_677[0]).value1, (_677[0]).value2.value0, (_677[0]).value2.value1, (_677[0]).value2.value2, (_677[0]).value2.value3);
                                __dict_Ord_641 = __tco___dict_Ord_641;
                                _677 = _2569;
                                _678 = __tco__678;
                                continue tco;
                            };
                        };
                        if (_677.length >= 1) {
                            var _2578 = _677.slice(1);
                            if (_677[0] instanceof TwoRight && (_677[0]).value0 instanceof Two) {
                                var __tco___dict_Ord_641 = __dict_Ord_641;
                                var __tco__678 = new Three((_677[0]).value0.value0, (_677[0]).value0.value1, (_677[0]).value0.value2, (_677[0]).value0.value3, (_677[0]).value1, (_677[0]).value2, _678);
                                __dict_Ord_641 = __tco___dict_Ord_641;
                                _677 = _2578;
                                _678 = __tco__678;
                                continue tco;
                            };
                        };
                        if (_677.length >= 1) {
                            var _2590 = _677.slice(1);
                            if (_677[0] instanceof TwoLeft && (_677[0]).value2 instanceof Three) {
                                return fromZipper(__dict_Ord_641)(_2590)(new Two(new Two(_678, (_677[0]).value0, (_677[0]).value1, (_677[0]).value2.value0), (_677[0]).value2.value1, (_677[0]).value2.value2, new Two((_677[0]).value2.value3, (_677[0]).value2.value4, (_677[0]).value2.value5, (_677[0]).value2.value6)));
                            };
                        };
                        if (_677.length >= 1) {
                            var _2602 = _677.slice(1);
                            if (_677[0] instanceof TwoRight && (_677[0]).value0 instanceof Three) {
                                return fromZipper(__dict_Ord_641)(_2602)(new Two(new Two((_677[0]).value0.value0, (_677[0]).value0.value1, (_677[0]).value0.value2, (_677[0]).value0.value3), (_677[0]).value0.value4, (_677[0]).value0.value5, new Two((_677[0]).value0.value6, (_677[0]).value1, (_677[0]).value2, _678)));
                            };
                        };
                        if (_677.length >= 1) {
                            var _2610 = _677.slice(1);
                            if (_677[0] instanceof ThreeLeft && ((_677[0]).value2 instanceof Leaf && ((_677[0]).value5 instanceof Leaf && _678 instanceof Leaf))) {
                                return fromZipper(__dict_Ord_641)(_2610)(new Three(Leaf.value, (_677[0]).value0, (_677[0]).value1, Leaf.value, (_677[0]).value3, (_677[0]).value4, Leaf.value));
                            };
                        };
                        if (_677.length >= 1) {
                            var _2618 = _677.slice(1);
                            if (_677[0] instanceof ThreeMiddle && ((_677[0]).value0 instanceof Leaf && ((_677[0]).value5 instanceof Leaf && _678 instanceof Leaf))) {
                                return fromZipper(__dict_Ord_641)(_2618)(new Three(Leaf.value, (_677[0]).value1, (_677[0]).value2, Leaf.value, (_677[0]).value3, (_677[0]).value4, Leaf.value));
                            };
                        };
                        if (_677.length >= 1) {
                            var _2626 = _677.slice(1);
                            if (_677[0] instanceof ThreeRight && ((_677[0]).value0 instanceof Leaf && ((_677[0]).value3 instanceof Leaf && _678 instanceof Leaf))) {
                                return fromZipper(__dict_Ord_641)(_2626)(new Three(Leaf.value, (_677[0]).value1, (_677[0]).value2, Leaf.value, (_677[0]).value4, (_677[0]).value5, Leaf.value));
                            };
                        };
                        if (_677.length >= 1) {
                            var _2638 = _677.slice(1);
                            if (_677[0] instanceof ThreeLeft && (_677[0]).value2 instanceof Two) {
                                return fromZipper(__dict_Ord_641)(_2638)(new Two(new Three(_678, (_677[0]).value0, (_677[0]).value1, (_677[0]).value2.value0, (_677[0]).value2.value1, (_677[0]).value2.value2, (_677[0]).value2.value3), (_677[0]).value3, (_677[0]).value4, (_677[0]).value5));
                            };
                        };
                        if (_677.length >= 1) {
                            var _2650 = _677.slice(1);
                            if (_677[0] instanceof ThreeMiddle && (_677[0]).value0 instanceof Two) {
                                return fromZipper(__dict_Ord_641)(_2650)(new Two(new Three((_677[0]).value0.value0, (_677[0]).value0.value1, (_677[0]).value0.value2, (_677[0]).value0.value3, (_677[0]).value1, (_677[0]).value2, _678), (_677[0]).value3, (_677[0]).value4, (_677[0]).value5));
                            };
                        };
                        if (_677.length >= 1) {
                            var _2662 = _677.slice(1);
                            if (_677[0] instanceof ThreeMiddle && (_677[0]).value5 instanceof Two) {
                                return fromZipper(__dict_Ord_641)(_2662)(new Two((_677[0]).value0, (_677[0]).value1, (_677[0]).value2, new Three(_678, (_677[0]).value3, (_677[0]).value4, (_677[0]).value5.value0, (_677[0]).value5.value1, (_677[0]).value5.value2, (_677[0]).value5.value3)));
                            };
                        };
                        if (_677.length >= 1) {
                            var _2674 = _677.slice(1);
                            if (_677[0] instanceof ThreeRight && (_677[0]).value3 instanceof Two) {
                                return fromZipper(__dict_Ord_641)(_2674)(new Two((_677[0]).value0, (_677[0]).value1, (_677[0]).value2, new Three((_677[0]).value3.value0, (_677[0]).value3.value1, (_677[0]).value3.value2, (_677[0]).value3.value3, (_677[0]).value4, (_677[0]).value5, _678)));
                            };
                        };
                        if (_677.length >= 1) {
                            var _2689 = _677.slice(1);
                            if (_677[0] instanceof ThreeLeft && (_677[0]).value2 instanceof Three) {
                                return fromZipper(__dict_Ord_641)(_2689)(new Three(new Two(_678, (_677[0]).value0, (_677[0]).value1, (_677[0]).value2.value0), (_677[0]).value2.value1, (_677[0]).value2.value2, new Two((_677[0]).value2.value3, (_677[0]).value2.value4, (_677[0]).value2.value5, (_677[0]).value2.value6), (_677[0]).value3, (_677[0]).value4, (_677[0]).value5));
                            };
                        };
                        if (_677.length >= 1) {
                            var _2704 = _677.slice(1);
                            if (_677[0] instanceof ThreeMiddle && (_677[0]).value0 instanceof Three) {
                                return fromZipper(__dict_Ord_641)(_2704)(new Three(new Two((_677[0]).value0.value0, (_677[0]).value0.value1, (_677[0]).value0.value2, (_677[0]).value0.value3), (_677[0]).value0.value4, (_677[0]).value0.value5, new Two((_677[0]).value0.value6, (_677[0]).value1, (_677[0]).value2, _678), (_677[0]).value3, (_677[0]).value4, (_677[0]).value5));
                            };
                        };
                        if (_677.length >= 1) {
                            var _2719 = _677.slice(1);
                            if (_677[0] instanceof ThreeMiddle && (_677[0]).value5 instanceof Three) {
                                return fromZipper(__dict_Ord_641)(_2719)(new Three((_677[0]).value0, (_677[0]).value1, (_677[0]).value2, new Two(_678, (_677[0]).value3, (_677[0]).value4, (_677[0]).value5.value0), (_677[0]).value5.value1, (_677[0]).value5.value2, new Two((_677[0]).value5.value3, (_677[0]).value5.value4, (_677[0]).value5.value5, (_677[0]).value5.value6)));
                            };
                        };
                        if (_677.length >= 1) {
                            var _2734 = _677.slice(1);
                            if (_677[0] instanceof ThreeRight && (_677[0]).value3 instanceof Three) {
                                return fromZipper(__dict_Ord_641)(_2734)(new Three((_677[0]).value0, (_677[0]).value1, (_677[0]).value2, new Two((_677[0]).value3.value0, (_677[0]).value3.value1, (_677[0]).value3.value2, (_677[0]).value3.value3), (_677[0]).value3.value4, (_677[0]).value3.value5, new Two((_677[0]).value3.value6, (_677[0]).value4, (_677[0]).value5, _678)));
                            };
                        };
                        throw new Error("Failed pattern match");
                    };
                };
            };
        };
        var removeMaxNode = function (__copy___dict_Ord_642) {
            return function (__copy__680) {
                return function (__copy__681) {
                    var __dict_Ord_642 = __copy___dict_Ord_642;
                    var _680 = __copy__680;
                    var _681 = __copy__681;
                    tco: while (true) {
                        if (_681 instanceof Two && (_681.value0 instanceof Leaf && _681.value3 instanceof Leaf)) {
                            return up(__dict_Ord_642)(_680)(Leaf.value);
                        };
                        if (_681 instanceof Two) {
                            var __tco___dict_Ord_642 = __dict_Ord_642;
                            var __tco__680 = Prelude[":"](new TwoRight(_681.value0, _681.value1, _681.value2))(_680);
                            var __tco__681 = _681.value3;
                            __dict_Ord_642 = __tco___dict_Ord_642;
                            _680 = __tco__680;
                            _681 = __tco__681;
                            continue tco;
                        };
                        if (_681 instanceof Three && (_681.value0 instanceof Leaf && (_681.value3 instanceof Leaf && _681.value6 instanceof Leaf))) {
                            return up(__dict_Ord_642)(Prelude[":"](new TwoRight(Leaf.value, _681.value1, _681.value2))(_680))(Leaf.value);
                        };
                        if (_681 instanceof Three) {
                            var __tco___dict_Ord_642 = __dict_Ord_642;
                            var __tco__680 = Prelude[":"](new ThreeRight(_681.value0, _681.value1, _681.value2, _681.value3, _681.value4, _681.value5))(_680);
                            var __tco__681 = _681.value6;
                            __dict_Ord_642 = __tco___dict_Ord_642;
                            _680 = __tco__680;
                            _681 = __tco__681;
                            continue tco;
                        };
                        throw new Error("Failed pattern match");
                    };
                };
            };
        };
        var maxNode = function (__copy___dict_Ord_643) {
            return function (__copy__679) {
                var __dict_Ord_643 = __copy___dict_Ord_643;
                var _679 = __copy__679;
                tco: while (true) {
                    if (_679 instanceof Two && _679.value3 instanceof Leaf) {
                        return {
                            key: _679.value1, 
                            value: _679.value2
                        };
                    };
                    if (_679 instanceof Two) {
                        var __tco___dict_Ord_643 = __dict_Ord_643;
                        var __tco__679 = _679.value3;
                        __dict_Ord_643 = __tco___dict_Ord_643;
                        _679 = __tco__679;
                        continue tco;
                    };
                    if (_679 instanceof Three && _679.value6 instanceof Leaf) {
                        return {
                            key: _679.value4, 
                            value: _679.value5
                        };
                    };
                    if (_679 instanceof Three) {
                        var __tco___dict_Ord_643 = __dict_Ord_643;
                        var __tco__679 = _679.value6;
                        __dict_Ord_643 = __tco___dict_Ord_643;
                        _679 = __tco__679;
                        continue tco;
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
        var down = function (__copy___dict_Ord_644) {
            return function (__copy__674) {
                return function (__copy__675) {
                    return function (__copy__676) {
                        var __dict_Ord_644 = __copy___dict_Ord_644;
                        var _674 = __copy__674;
                        var _675 = __copy__675;
                        var _676 = __copy__676;
                        tco: while (true) {
                            if (_676 instanceof Leaf) {
                                return fromZipper(__dict_Ord_644)(_674)(Leaf.value);
                            };
                            if (_676 instanceof Two && (_676.value0 instanceof Leaf && (_676.value3 instanceof Leaf && Prelude["=="](__dict_Ord_644["__superclass_Prelude.Eq_0"]())(_675)(_676.value1)))) {
                                return up(__dict_Ord_644)(_674)(Leaf.value);
                            };
                            if (_676 instanceof Two) {
                                if (Prelude["=="](__dict_Ord_644["__superclass_Prelude.Eq_0"]())(_675)(_676.value1)) {
                                    var max = maxNode(__dict_Ord_644)(_676.value0);
                                    return removeMaxNode(__dict_Ord_644)(Prelude[":"](new TwoLeft(max.key, max.value, _676.value3))(_674))(_676.value0);
                                };
                                if (Prelude["<"](__dict_Ord_644)(_675)(_676.value1)) {
                                    var __tco___dict_Ord_644 = __dict_Ord_644;
                                    var __tco__674 = Prelude[":"](new TwoLeft(_676.value1, _676.value2, _676.value3))(_674);
                                    var __tco__675 = _675;
                                    var __tco__676 = _676.value0;
                                    __dict_Ord_644 = __tco___dict_Ord_644;
                                    _674 = __tco__674;
                                    _675 = __tco__675;
                                    _676 = __tco__676;
                                    continue tco;
                                };
                                if (Prelude.otherwise) {
                                    var __tco___dict_Ord_644 = __dict_Ord_644;
                                    var __tco__674 = Prelude[":"](new TwoRight(_676.value0, _676.value1, _676.value2))(_674);
                                    var __tco__675 = _675;
                                    var __tco__676 = _676.value3;
                                    __dict_Ord_644 = __tco___dict_Ord_644;
                                    _674 = __tco__674;
                                    _675 = __tco__675;
                                    _676 = __tco__676;
                                    continue tco;
                                };
                            };
                            if (_676 instanceof Three && (_676.value0 instanceof Leaf && (_676.value3 instanceof Leaf && _676.value6 instanceof Leaf))) {
                                if (Prelude["=="](__dict_Ord_644["__superclass_Prelude.Eq_0"]())(_675)(_676.value1)) {
                                    return fromZipper(__dict_Ord_644)(_674)(new Two(Leaf.value, _676.value4, _676.value5, Leaf.value));
                                };
                                if (Prelude["=="](__dict_Ord_644["__superclass_Prelude.Eq_0"]())(_675)(_676.value4)) {
                                    return fromZipper(__dict_Ord_644)(_674)(new Two(Leaf.value, _676.value1, _676.value2, Leaf.value));
                                };
                            };
                            if (_676 instanceof Three) {
                                if (Prelude["=="](__dict_Ord_644["__superclass_Prelude.Eq_0"]())(_675)(_676.value1)) {
                                    var max = maxNode(__dict_Ord_644)(_676.value0);
                                    return removeMaxNode(__dict_Ord_644)(Prelude[":"](new ThreeLeft(max.key, max.value, _676.value3, _676.value4, _676.value5, _676.value6))(_674))(_676.value0);
                                };
                                if (Prelude["=="](__dict_Ord_644["__superclass_Prelude.Eq_0"]())(_675)(_676.value4)) {
                                    var max = maxNode(__dict_Ord_644)(_676.value3);
                                    return removeMaxNode(__dict_Ord_644)(Prelude[":"](new ThreeMiddle(_676.value0, _676.value1, _676.value2, max.key, max.value, _676.value6))(_674))(_676.value3);
                                };
                                if (Prelude["<"](__dict_Ord_644)(_675)(_676.value1)) {
                                    var __tco___dict_Ord_644 = __dict_Ord_644;
                                    var __tco__674 = Prelude[":"](new ThreeLeft(_676.value1, _676.value2, _676.value3, _676.value4, _676.value5, _676.value6))(_674);
                                    var __tco__675 = _675;
                                    var __tco__676 = _676.value0;
                                    __dict_Ord_644 = __tco___dict_Ord_644;
                                    _674 = __tco__674;
                                    _675 = __tco__675;
                                    _676 = __tco__676;
                                    continue tco;
                                };
                                if (Prelude["<"](__dict_Ord_644)(_676.value1)(_675) && Prelude["<"](__dict_Ord_644)(_675)(_676.value4)) {
                                    var __tco___dict_Ord_644 = __dict_Ord_644;
                                    var __tco__674 = Prelude[":"](new ThreeMiddle(_676.value0, _676.value1, _676.value2, _676.value4, _676.value5, _676.value6))(_674);
                                    var __tco__675 = _675;
                                    var __tco__676 = _676.value3;
                                    __dict_Ord_644 = __tco___dict_Ord_644;
                                    _674 = __tco__674;
                                    _675 = __tco__675;
                                    _676 = __tco__676;
                                    continue tco;
                                };
                                if (Prelude.otherwise) {
                                    var __tco___dict_Ord_644 = __dict_Ord_644;
                                    var __tco__674 = Prelude[":"](new ThreeRight(_676.value0, _676.value1, _676.value2, _676.value3, _676.value4, _676.value5))(_674);
                                    var __tco__675 = _675;
                                    var __tco__676 = _676.value6;
                                    __dict_Ord_644 = __tco___dict_Ord_644;
                                    _674 = __tco__674;
                                    _675 = __tco__675;
                                    _676 = __tco__676;
                                    continue tco;
                                };
                            };
                            throw new Error("Failed pattern match");
                        };
                    };
                };
            };
        };
        return down(__dict_Ord_640)([  ]);
    };
    var checkValid = function (tree) {
        var allHeights = function (_667) {
            if (_667 instanceof Leaf) {
                return [ 0 ];
            };
            if (_667 instanceof Two) {
                return Data_Array.map(function (n) {
                    return n + 1;
                })(Prelude["++"](Data_Array.semigroupArray)(allHeights(_667.value0))(allHeights(_667.value3)));
            };
            if (_667 instanceof Three) {
                return Data_Array.map(function (n) {
                    return n + 1;
                })(Prelude["++"](Data_Array.semigroupArray)(allHeights(_667.value0))(Prelude["++"](Data_Array.semigroupArray)(allHeights(_667.value3))(allHeights(_667.value6))));
            };
            throw new Error("Failed pattern match");
        };
        return Data_Array.length(Data_Array.nub(Prelude.eqNumber)(allHeights(tree))) === 1;
    };
    var alter = function (__dict_Ord_645) {
        return function (f) {
            return function (k) {
                return function (m) {
                    var _2819 = f(lookup(__dict_Ord_645)(k)(m));
                    if (_2819 instanceof Data_Maybe.Nothing) {
                        return $$delete(__dict_Ord_645)(k)(m);
                    };
                    if (_2819 instanceof Data_Maybe.Just) {
                        return insert(__dict_Ord_645)(k)(_2819.value0)(m);
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
    };
    
    /**
     *  Computes the union of two maps, except that when a key exists in both maps, its value in the result
     *  is computed by combining them with the supplied function.
     */
    var unionWith = function (__dict_Ord_646) {
        return function (f) {
            return function (m1) {
                return function (m2) {
                    var go = function (_682) {
                        return function (_683) {
                            return alter(__dict_Ord_646)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Maybe.Just.create)(Data_Maybe.maybe(_683.value1)(f(_683.value1))))(_683.value0)(_682);
                        };
                    };
                    return Data_Foldable.foldl(Data_Foldable.foldableArray)(go)(m2)(toList(m1));
                };
            };
        };
    };
    var union = function (__dict_Ord_647) {
        return unionWith(__dict_Ord_647)(Prelude["const"]);
    };
    var semigroupMap = function (__dict_Ord_648) {
        return new Prelude.Semigroup(union(__dict_Ord_648));
    };
    var monoidMap = function (__dict_Ord_639) {
        return new Data_Monoid.Monoid(function () {
            return semigroupMap(__dict_Ord_639);
        }, empty);
    };
    var traversableMap = function (__dict_Ord_649) {
        return new Data_Traversable.Traversable(function () {
            return foldableMap;
        }, function () {
            return functorMap;
        }, function (__dict_Applicative_651) {
            return Data_Traversable.traverse(traversableMap(__dict_Ord_649))(__dict_Applicative_651)(Prelude.id(Prelude.categoryArr));
        }, function (__dict_Applicative_650) {
            return function (f) {
                return function (ms) {
                    return Data_Foldable.foldr(Data_Foldable.foldableArray)(function (x) {
                        return function (acc) {
                            return Prelude["<*>"](__dict_Applicative_650["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((__dict_Applicative_650["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(union(__dict_Ord_649))(x))(acc);
                        };
                    })(Prelude.pure(__dict_Applicative_650)(empty))(Prelude["<$>"](Data_Array.functorArray)(Prelude["<$>"]((__dict_Applicative_650["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Tuple.uncurry(singleton)))(Prelude["<$>"](Data_Array.functorArray)(Data_Traversable.traverse(Data_Traversable.traversableTuple)(__dict_Applicative_650)(f))(toList(ms))));
                };
            };
        });
    };
    var unions = function (__dict_Ord_652) {
        return Data_Foldable.foldl(Data_Foldable.foldableArray)(union(__dict_Ord_652))(empty);
    };
    var update = function (__dict_Ord_653) {
        return function (f) {
            return function (k) {
                return function (m) {
                    return alter(__dict_Ord_653)(Data_Maybe.maybe(Data_Maybe.Nothing.value)(f))(k)(m);
                };
            };
        };
    };
    return {
        size: size, 
        map: map, 
        unions: unions, 
        unionWith: unionWith, 
        union: union, 
        values: values, 
        keys: keys, 
        update: update, 
        alter: alter, 
        member: member, 
        "delete": $$delete, 
        fromList: fromList, 
        toList: toList, 
        lookup: lookup, 
        insert: insert, 
        checkValid: checkValid, 
        singleton: singleton, 
        isEmpty: isEmpty, 
        empty: empty, 
        showTree: showTree, 
        eqMap: eqMap, 
        showMap: showMap, 
        semigroupMap: semigroupMap, 
        monoidMap: monoidMap, 
        functorMap: functorMap, 
        foldableMap: foldableMap, 
        traversableMap: traversableMap
    };
})();
var PS = PS || {};
PS.Data_Set = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Map = PS.Data_Map;
    var Data_Array = PS.Data_Array;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Maybe = PS.Data_Maybe;
    var Set = (function () {
        function Set(value0) {
            this.value0 = value0;
        };
        Set.create = function (value0) {
            return new Set(value0);
        };
        return Set;
    })();
    var union = function (__dict_Ord_654) {
        return function (_693) {
            return function (_694) {
                return new Set(Data_Map.union(__dict_Ord_654)(_693.value0)(_694.value0));
            };
        };
    };
    var toList = function (_692) {
        return Data_Array.map(Data_Tuple.fst)(Data_Map.toList(_692.value0));
    };
    var singleton = function (a) {
        return new Set(Data_Map.singleton(a)(Prelude.unit));
    };
    var showSet = function (__dict_Show_655) {
        return new Prelude.Show(function (s) {
            return "fromList " + Prelude.show(Prelude.showArray(__dict_Show_655))(toList(s));
        });
    };
    var member = function (__dict_Ord_656) {
        return function (_686) {
            return function (_687) {
                return Data_Map.member(__dict_Ord_656)(_686)(_687.value0);
            };
        };
    };
    var isEmpty = function (_684) {
        return Data_Map.isEmpty(_684.value0);
    };
    var insert = function (__dict_Ord_657) {
        return function (_688) {
            return function (_689) {
                return new Set(Data_Map.insert(__dict_Ord_657)(_688)(Prelude.unit)(_689.value0));
            };
        };
    };
    var eqSet = function (__dict_Eq_658) {
        return new Prelude.Eq(function (_697) {
            return function (_698) {
                return Prelude["/="](Data_Map.eqMap(__dict_Eq_658)(Prelude.eqUnit))(_697.value0)(_698.value0);
            };
        }, function (_695) {
            return function (_696) {
                return Prelude["=="](Data_Map.eqMap(__dict_Eq_658)(Prelude.eqUnit))(_695.value0)(_696.value0);
            };
        });
    };
    var empty = new Set(Data_Map.empty);
    var fromList = function (__dict_Ord_659) {
        return Data_Foldable.foldl(Data_Foldable.foldableArray)(function (m) {
            return function (a) {
                return insert(__dict_Ord_659)(a)(m);
            };
        })(empty);
    };
    var unions = function (__dict_Ord_660) {
        return Data_Foldable.foldl(Data_Foldable.foldableArray)(union(__dict_Ord_660))(empty);
    };
    var $$delete = function (__dict_Ord_661) {
        return function (_690) {
            return function (_691) {
                return new Set(Data_Map["delete"](__dict_Ord_661)(_690)(_691.value0));
            };
        };
    };
    var difference = function (__dict_Ord_662) {
        return function (s1) {
            return function (s2) {
                return Data_Foldable.foldl(Data_Foldable.foldableArray)(Prelude.flip($$delete(__dict_Ord_662)))(s1)(toList(s2));
            };
        };
    };
    var checkValid = function (_685) {
        return Data_Map.checkValid(_685.value0);
    };
    return {
        difference: difference, 
        unions: unions, 
        union: union, 
        fromList: fromList, 
        toList: toList, 
        "delete": $$delete, 
        member: member, 
        insert: insert, 
        checkValid: checkValid, 
        singleton: singleton, 
        isEmpty: isEmpty, 
        empty: empty, 
        eqSet: eqSet, 
        showSet: showSet
    };
})();
var PS = PS || {};
PS.Data_StrMap = (function () {
    "use strict";
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Prelude = PS.Prelude;
    var Data_Function = PS.Data_Function;
    var Data_Monoid = PS.Data_Monoid;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Traversable = PS.Data_Traversable;
    var Data_Maybe = PS.Data_Maybe;
    var Data_StrMap_ST = PS.Data_StrMap_ST;
    var Data_Monoid_All = PS.Data_Monoid_All;
    var Control_Monad_ST = PS.Control_Monad_ST;
    var Data_Array = PS.Data_Array;
    
  function _copy(m) {
    var r = {};
    for (var k in m) {
      r[k] = m[k];
    }
    return r;
  }
  ;
    
  function _copyEff(m) {
    return function() {
      var r = {};
      for (var k in m) {
        r[k] = m[k];
      }
      return r;
    };
  }
  ;
    
  function runST(f) {
    return f;
  }
  ;
    
  function _fmapStrMap(m0, f) {
    var m = {};
    for (var k in m0) {
      m[k] = f(m0[k]);
    }
    return m;
  }
  ;
    
  function _foldM(bind) {
    return function(f) {
      return function(mz) {
        return function(m) {
          function g(k) {
            return function (z) {
              return f(z)(k)(m[k]);
            };
          }
          for (var k in m) {
            mz = bind(mz)(g(k));
          }
          return mz;
        };
      };
    };
  }
  ;
    
  function _foldSCStrMap(m, z, f, fromMaybe) {
    for (var k in m) {
      var maybeR = f(z)(k)(m[k]);
      var r = fromMaybe(null)(maybeR);
      if (r === null) return z;
      else z = r;
    }
    return z;
  }
  ;
    
  function all(f) {
    return function(m) {
      for (var k in m) {
        if (!f(k)(m[k])) return false;
      }
      return true;
    };
  }
  ;
    var empty = {};;
    
  function size(m) {
    var s = 0;
    for (var k in m) {
      ++s;
    }
    return s;
  }
  ;
    
  function _lookup(no, yes, k, m) {
    return k in m ? yes(m[k]) : no;
  }
  ;
    
  function _unsafeDeleteStrMap(m, k) {
     delete m[k];
     return m;
  }
  ;
    
  function _collect(f) {
    return function(m) {
      var r = [];
      for (var k in m) {
        r.push(f(k)(m[k]));
      }
      return r;
    };
  }
  ;
    
  var keys = Object.keys || _collect(function(k) {
    return function() { return k; };
  });
  ;
    var values = _collect(function (_) {
        return function (v) {
            return v;
        };
    });
    var toList = _collect(Data_Tuple.Tuple.create);
    var thawST = _copyEff;
    var showStrMap = function (__dict_Show_663) {
        return new Prelude.Show(function (m) {
            return "fromList " + Prelude.show(Prelude.showArray(Data_Tuple.showTuple(Prelude.showString)(__dict_Show_663)))(toList(m));
        });
    };
    var pureST = function (f) {
        return Control_Monad_Eff.runPure(runST(f));
    };
    var singleton = function (k) {
        return function (v) {
            return pureST(function __do() {
                var _31 = Data_StrMap_ST["new"]();
                Data_StrMap_ST.poke(_31)(k)(v)();
                return _31;
            });
        };
    };
    var mutate = function (f) {
        return function (m) {
            return pureST(function __do() {
                var _30 = thawST(m)();
                f(_30)();
                return _30;
            });
        };
    };
    var member = Data_Function.runFn4(_lookup)(false)(Prelude["const"](true));
    var lookup = Data_Function.runFn4(_lookup)(Data_Maybe.Nothing.value)(Data_Maybe.Just.create);
    var isSubmap = function (__dict_Eq_664) {
        return function (m1) {
            return function (m2) {
                var f = function (k) {
                    return function (v) {
                        return _lookup(false, Prelude["=="](__dict_Eq_664)(v), k, m2);
                    };
                };
                return all(f)(m1);
            };
        };
    };
    var isEmpty = all(function (_) {
        return function (__1) {
            return false;
        };
    });
    var insert = function (k) {
        return function (v) {
            return mutate(function (s) {
                return Data_StrMap_ST.poke(s)(k)(v);
            });
        };
    };
    var functorStrMap = new Prelude.Functor(function (f) {
        return function (m) {
            return _fmapStrMap(m, f);
        };
    });
    var map = Prelude["<$>"](functorStrMap);
    var fromList = function (l) {
        return pureST(function __do() {
            var _32 = Data_StrMap_ST["new"]();
            Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableArray)(l)(function (_699) {
                return Data_StrMap_ST.poke(_32)(_699.value0)(_699.value1);
            })();
            return _32;
        });
    };
    var freezeST = _copyEff;
    var foldMaybe = function (f) {
        return function (z) {
            return function (m) {
                return _foldSCStrMap(m, z, f, Data_Maybe.fromMaybe);
            };
        };
    };
    var foldM = function (__dict_Monad_665) {
        return function (f) {
            return function (z) {
                return _foldM(Prelude[">>="](__dict_Monad_665["__superclass_Prelude.Bind_1"]()))(f)(Prelude.pure(__dict_Monad_665["__superclass_Prelude.Applicative_0"]())(z));
            };
        };
    };
    var semigroupStrMap = function (__dict_Semigroup_666) {
        return new Prelude.Semigroup(function (m1) {
            return function (m2) {
                return mutate(function (s) {
                    return foldM(Control_Monad_Eff.monadEff)(function (s_1) {
                        return function (k) {
                            return function (v2) {
                                return Data_StrMap_ST.poke(s_1)(k)(_lookup(v2, function (v1) {
                                    return Prelude["<>"](__dict_Semigroup_666)(v1)(v2);
                                }, k, m2));
                            };
                        };
                    })(s)(m1);
                })(m2);
            };
        });
    };
    
    /**
     *  left-biased
     */
    var union = function (m) {
        return mutate(function (s) {
            return foldM(Control_Monad_Eff.monadEff)(Data_StrMap_ST.poke)(s)(m);
        });
    };
    var unions = Data_Foldable.foldl(Data_Foldable.foldableArray)(union)(empty);
    var fold = _foldM(Prelude["#"]);
    var foldMap = function (__dict_Monoid_669) {
        return function (f) {
            return fold(function (acc) {
                return function (k) {
                    return function (v) {
                        return Prelude["<>"](__dict_Monoid_669["__superclass_Prelude.Semigroup_0"]())(acc)(f(k)(v));
                    };
                };
            })(Data_Monoid.mempty(__dict_Monoid_669));
        };
    };
    var foldableStrMap = new Data_Foldable.Foldable(function (__dict_Monoid_670) {
        return function (f) {
            return foldMap(__dict_Monoid_670)(Prelude["const"](f));
        };
    }, function (f) {
        return fold(function (z) {
            return function (_) {
                return f(z);
            };
        });
    }, function (f) {
        return function (z) {
            return function (m) {
                return Data_Foldable.foldr(Data_Foldable.foldableArray)(f)(z)(values(m));
            };
        };
    });
    var traversableStrMap = new Data_Traversable.Traversable(function () {
        return foldableStrMap;
    }, function () {
        return functorStrMap;
    }, function (__dict_Applicative_668) {
        return Data_Traversable.traverse(traversableStrMap)(__dict_Applicative_668)(Prelude.id(Prelude.categoryArr));
    }, function (__dict_Applicative_667) {
        return function (f) {
            return function (ms) {
                return Data_Foldable.foldr(Data_Foldable.foldableArray)(function (x) {
                    return function (acc) {
                        return Prelude["<*>"](__dict_Applicative_667["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((__dict_Applicative_667["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(union)(x))(acc);
                    };
                })(Prelude.pure(__dict_Applicative_667)(empty))(Prelude["<$>"](Data_Array.functorArray)(Prelude["<$>"]((__dict_Applicative_667["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Tuple.uncurry(singleton)))(Prelude["<$>"](Data_Array.functorArray)(Data_Traversable.traverse(Data_Traversable.traversableTuple)(__dict_Applicative_667)(f))(toList(ms))));
            };
        };
    });
    var eqStrMap = function (__dict_Eq_671) {
        return new Prelude.Eq(function (m1) {
            return function (m2) {
                return !Prelude["=="](eqStrMap(__dict_Eq_671))(m1)(m2);
            };
        }, function (m1) {
            return function (m2) {
                return isSubmap(__dict_Eq_671)(m1)(m2) && isSubmap(__dict_Eq_671)(m2)(m1);
            };
        });
    };
    var $$delete = function (k) {
        return mutate(function (s) {
            return Data_StrMap_ST["delete"](s)(k);
        });
    };
    var alter = function (f) {
        return function (k) {
            return function (m) {
                var _2858 = f(lookup(k)(m));
                if (_2858 instanceof Data_Maybe.Nothing) {
                    return $$delete(k)(m);
                };
                if (_2858 instanceof Data_Maybe.Just) {
                    return insert(k)(_2858.value0)(m);
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var update = function (f) {
        return function (k) {
            return function (m) {
                return alter(Data_Maybe.maybe(Data_Maybe.Nothing.value)(f))(k)(m);
            };
        };
    };
    return {
        runST: runST, 
        freezeST: freezeST, 
        thawST: thawST, 
        all: all, 
        foldMaybe: foldMaybe, 
        foldM: foldM, 
        foldMap: foldMap, 
        fold: fold, 
        isSubmap: isSubmap, 
        map: map, 
        unions: unions, 
        union: union, 
        values: values, 
        keys: keys, 
        update: update, 
        alter: alter, 
        member: member, 
        "delete": $$delete, 
        fromList: fromList, 
        toList: toList, 
        lookup: lookup, 
        insert: insert, 
        singleton: singleton, 
        size: size, 
        isEmpty: isEmpty, 
        empty: empty, 
        functorStrMap: functorStrMap, 
        foldableStrMap: foldableStrMap, 
        traversableStrMap: traversableStrMap, 
        eqStrMap: eqStrMap, 
        showStrMap: showStrMap, 
        semigroupStrMap: semigroupStrMap
    };
})();
var PS = PS || {};
PS.Data_StrMap_ST_Unsafe = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Control_Monad_ST = PS.Control_Monad_ST;
    var Data_StrMap = PS.Data_StrMap;
    var Data_StrMap_ST = PS.Data_StrMap_ST;
    
  function unsafeGet(m) {
    return function() {
      return m;
    }
  }
  ;
    return {
        unsafeGet: unsafeGet
    };
})();
var PS = PS || {};
PS.Data_StrMap_Unsafe = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_StrMap = PS.Data_StrMap;
    
  function unsafeIndex(m) {
    return function(k) {
      return m[k];
    };
  }
  ;
    return {
        unsafeIndex: unsafeIndex
    };
})();
var PS = PS || {};
PS.Data_Tagged = (function () {
    "use strict";
    var Data_Monoid = PS.Data_Monoid;
    var Prelude = PS.Prelude;
    var Control_Biapply = PS.Control_Biapply;
    var Control_Biapplicative = PS.Control_Biapplicative;
    var Control_Comonad = PS.Control_Comonad;
    var Control_Extend = PS.Control_Extend;
    var Data_Bifoldable = PS.Data_Bifoldable;
    var Data_Bifunctor = PS.Data_Bifunctor;
    var Data_Bitraversable = PS.Data_Bitraversable;
    var Data_Either = PS.Data_Either;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Profunctor = PS.Data_Profunctor;
    var Data_Profunctor_Choice = PS.Data_Profunctor_Choice;
    var Data_Traversable = PS.Data_Traversable;
    var Tagged = function (x) {
        return x;
    };
    var unTagged = function (_700) {
        return _700;
    };
    var untag = unTagged;
    var untagSelf = unTagged;
    var tagSelf = Tagged;
    var semigroupoidTagged = new Prelude.Semigroupoid(function (_710) {
        return function (_711) {
            return _710;
        };
    });
    var semigroupTagged = function (__dict_Semigroup_674) {
        return new Prelude.Semigroup(function (_708) {
            return function (_709) {
                return Tagged(Prelude["<>"](__dict_Semigroup_674)(_708)(_709));
            };
        });
    };
    var retag = function (_701) {
        return _701;
    };
    var profunctorTagged = new Data_Profunctor.Profunctor(function (_744) {
        return function (_745) {
            return function (_746) {
                return Tagged(_745(_746));
            };
        };
    });
    var monoidTagged = function (__dict_Monoid_675) {
        return new Data_Monoid.Monoid(function () {
            return semigroupTagged(__dict_Monoid_675["__superclass_Prelude.Semigroup_0"]());
        }, Tagged(Data_Monoid.mempty(__dict_Monoid_675)));
    };
    var functorTagged = new Prelude.Functor(function (_702) {
        return function (_703) {
            return Tagged(_702(_703));
        };
    });
    var foldableTagged = new Data_Foldable.Foldable(function (__dict_Monoid_676) {
        return function (_718) {
            return function (_719) {
                return _718(_719);
            };
        };
    }, function (_715) {
        return function (_716) {
            return function (_717) {
                return _715(_716)(_717);
            };
        };
    }, function (_712) {
        return function (_713) {
            return function (_714) {
                return _712(_714)(_713);
            };
        };
    });
    var traversableTagged = new Data_Traversable.Traversable(function () {
        return foldableTagged;
    }, function () {
        return functorTagged;
    }, function (__dict_Applicative_673) {
        return function (_722) {
            return Prelude["<$>"]((__dict_Applicative_673["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Tagged)(_722);
        };
    }, function (__dict_Applicative_672) {
        return function (_720) {
            return function (_721) {
                return Prelude["<$>"]((__dict_Applicative_672["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Tagged)(_720(_721));
            };
        };
    });
    var extendTagged = new Control_Extend.Extend(function (f) {
        return function (x) {
            return Tagged(f(x));
        };
    }, function () {
        return functorTagged;
    });
    var comonadTagged = new Control_Comonad.Comonad(function () {
        return extendTagged;
    }, unTagged);
    var choiceTagged = new Data_Profunctor_Choice.Choice(function () {
        return profunctorTagged;
    }, function (_747) {
        return Tagged(new Data_Either.Left(_747));
    }, function (_748) {
        return Tagged(new Data_Either.Right(_748));
    });
    var bifunctorTagged = new Data_Bifunctor.Bifunctor(function (_723) {
        return function (_724) {
            return function (_725) {
                return Tagged(_724(_725));
            };
        };
    });
    var bifoldableTagged = new Data_Bifoldable.Bifoldable(function (__dict_Monoid_679) {
        return function (_737) {
            return function (_738) {
                return function (_739) {
                    return _738(_739);
                };
            };
        };
    }, function (_733) {
        return function (_734) {
            return function (_735) {
                return function (_736) {
                    return _734(_735)(_736);
                };
            };
        };
    }, function (_729) {
        return function (_730) {
            return function (_731) {
                return function (_732) {
                    return _730(_732)(_731);
                };
            };
        };
    });
    var bitraversableTagged = new Data_Bitraversable.Bitraversable(function () {
        return bifoldableTagged;
    }, function () {
        return bifunctorTagged;
    }, function (__dict_Applicative_678) {
        return function (_743) {
            return Prelude["<$>"]((__dict_Applicative_678["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Tagged)(_743);
        };
    }, function (__dict_Applicative_677) {
        return function (_740) {
            return function (_741) {
                return function (_742) {
                    return Prelude["<$>"]((__dict_Applicative_677["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Tagged)(_741(_742));
                };
            };
        };
    });
    var biapplyTagged = new Control_Biapply.Biapply(function (_726) {
        return function (_727) {
            return Tagged(_726(_727));
        };
    }, function () {
        return bifunctorTagged;
    });
    var biapplicativeTagged = new Control_Biapplicative.Biapplicative(function () {
        return biapplyTagged;
    }, function (_728) {
        return Tagged;
    });
    var applyTagged = new Prelude.Apply(function (_704) {
        return function (_705) {
            return Tagged(_704(_705));
        };
    }, function () {
        return functorTagged;
    });
    var bindTagged = new Prelude.Bind(function (_706) {
        return function (_707) {
            return _707(_706);
        };
    }, function () {
        return applyTagged;
    });
    var applicativeTagged = new Prelude.Applicative(function () {
        return applyTagged;
    }, Tagged);
    var monadTagged = new Prelude.Monad(function () {
        return applicativeTagged;
    }, function () {
        return bindTagged;
    });
    return {
        Tagged: Tagged, 
        untagSelf: untagSelf, 
        tagSelf: tagSelf, 
        untag: untag, 
        retag: retag, 
        unTagged: unTagged, 
        functorTagged: functorTagged, 
        applyTagged: applyTagged, 
        bindTagged: bindTagged, 
        applicativeTagged: applicativeTagged, 
        monadTagged: monadTagged, 
        extendTagged: extendTagged, 
        comonadTagged: comonadTagged, 
        semigroupTagged: semigroupTagged, 
        monoidTagged: monoidTagged, 
        semigroupoidTagged: semigroupoidTagged, 
        foldableTagged: foldableTagged, 
        traversableTagged: traversableTagged, 
        bifunctorTagged: bifunctorTagged, 
        biapplyTagged: biapplyTagged, 
        biapplicativeTagged: biapplicativeTagged, 
        bifoldableTagged: bifoldableTagged, 
        bitraversableTagged: bitraversableTagged, 
        profunctorTagged: profunctorTagged, 
        choiceTagged: choiceTagged
    };
})();
var PS = PS || {};
PS.Optic_Internal_Setter = (function () {
    "use strict";
    var Data_Profunctor = PS.Data_Profunctor;
    var Data_Identity = PS.Data_Identity;
    var Prelude = PS.Prelude;
    var Data_Distributive = PS.Data_Distributive;
    var Data_Traversable = PS.Data_Traversable;
    var Settable = function (__superclass_Data$dotDistributive$dotDistributive_1, __superclass_Data$dotTraversable$dotTraversable_2, __superclass_Prelude$dotApplicative_0, taintedDot, untainted, untaintedDot) {
        this["__superclass_Data.Distributive.Distributive_1"] = __superclass_Data$dotDistributive$dotDistributive_1;
        this["__superclass_Data.Traversable.Traversable_2"] = __superclass_Data$dotTraversable$dotTraversable_2;
        this["__superclass_Prelude.Applicative_0"] = __superclass_Prelude$dotApplicative_0;
        this.taintedDot = taintedDot;
        this.untainted = untainted;
        this.untaintedDot = untaintedDot;
    };
    var untaintedDot = function (dict) {
        return dict.untaintedDot;
    };
    var untainted = function (dict) {
        return dict.untainted;
    };
    var taintedDot = function (dict) {
        return dict.taintedDot;
    };
    var settableIdentity = new Settable(function () {
        return Data_Distributive.distributiveIdentity;
    }, function () {
        return Data_Identity.traversableIdentity;
    }, function () {
        return Data_Identity.applicativeIdentity;
    }, function (__dict_Profunctor_681) {
        return Data_Profunctor.rmap(__dict_Profunctor_681)(Data_Identity.Identity);
    }, function (_749) {
        return _749;
    }, function (__dict_Profunctor_680) {
        return Data_Profunctor.rmap(__dict_Profunctor_680)(Data_Identity.runIdentity);
    });
    return {
        Settable: Settable, 
        taintedDot: taintedDot, 
        untaintedDot: untaintedDot, 
        untainted: untainted, 
        settableIdentity: settableIdentity
    };
})();
var PS = PS || {};
PS.Optic_Getter = (function () {
    "use strict";
    var Data_Profunctor = PS.Data_Profunctor;
    var Data_Const = PS.Data_Const;
    var Prelude = PS.Prelude;
    var Optic_Types = PS.Optic_Types;
    var Data_Contravariant = PS.Data_Contravariant;
    var Void = function (x) {
        return x;
    };
    var $up$dot = function (s) {
        return function (asa) {
            return Data_Const.getConst(asa(Data_Const.Const)(s));
        };
    };
    var view = function (asa) {
        return function (s) {
            return Data_Const.getConst(asa(Data_Const.Const)(s));
        };
    };
    var absurd = function (a) {
        var spin = function (__copy__750) {
            var _750 = __copy__750;
            tco: while (true) {
                var __tco__750 = _750;
                _750 = __tco__750;
                continue tco;
            };
        };
        return spin(a);
    };
    var coerce = function (__dict_Contravariant_682) {
        return function (__dict_Functor_683) {
            return function (a) {
                return Prelude["<$>"](__dict_Functor_683)(absurd)(Data_Contravariant[">$<"](__dict_Contravariant_682)(absurd)(a));
            };
        };
    };
    var to = function (__dict_Contravariant_684) {
        return function (__dict_Functor_685) {
            return function (__dict_Profunctor_686) {
                return function (s2a) {
                    return Data_Profunctor.dimap(__dict_Profunctor_686)(s2a)(coerce(__dict_Contravariant_684)(__dict_Functor_685));
                };
            };
        };
    };
    return {
        view: view, 
        to: to, 
        "^.": $up$dot
    };
})();
var PS = PS || {};
PS.Optic_Lens = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Optic_Types = PS.Optic_Types;
    var $qmark$qmark = function (__dict_Functor_687) {
        return function (ff) {
            return function (x) {
                return Prelude["<$>"](__dict_Functor_687)(function (f) {
                    return f(x);
                })(ff);
            };
        };
    };
    var lens = function (s2a) {
        return function (s2b2t) {
            return function (__dict_Functor_688) {
                return function (a2fb) {
                    return function (s) {
                        return Prelude["<$>"](__dict_Functor_688)(s2b2t(s))(a2fb(s2a(s)));
                    };
                };
            };
        };
    };
    return {
        lens: lens, 
        "??": $qmark$qmark
    };
})();
var PS = PS || {};
PS.Optic_Monad_Getter = (function () {
    "use strict";
    var Control_Monad_State_Class = PS.Control_Monad_State_Class;
    var Data_Const = PS.Data_Const;
    var Control_Monad_Reader_Class = PS.Control_Monad_Reader_Class;
    var Prelude = PS.Prelude;
    var Data_Profunctor = PS.Data_Profunctor;
    var Optic_Types = PS.Optic_Types;
    var use = function (__dict_Monad_689) {
        return function (__dict_MonadState_690) {
            return function (asa) {
                return Control_Monad_State_Class.gets(__dict_Monad_689)(__dict_MonadState_690)(Data_Profunctor.rmap(Data_Profunctor.profunctorArr)(Data_Const.getConst)(asa(Data_Const.Const)));
            };
        };
    };
    var look = function (__dict_Monad_691) {
        return function (__dict_MonadReader_692) {
            return function (ara) {
                return Control_Monad_Reader_Class.reader(__dict_Monad_691)(__dict_MonadReader_692)(Data_Profunctor.rmap(Data_Profunctor.profunctorArr)(Data_Const.getConst)(ara(Data_Const.Const)));
            };
        };
    };
    return {
        look: look, 
        use: use
    };
})();
var PS = PS || {};
PS.Optic_Equality = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Optic_Types_Extended = PS.Optic_Types_Extended;
    var simply = Prelude.id(Prelude.categoryArr);
    var simple = Prelude.id(Prelude.categoryArr);
    return {
        simply: simply, 
        simple: simple
    };
})();
var PS = PS || {};
PS.Optic_Review = (function () {
    "use strict";
    var Data_Profunctor = PS.Data_Profunctor;
    var Data_Tagged = PS.Data_Tagged;
    var Data_Identity = PS.Data_Identity;
    var Optic_Getter = PS.Optic_Getter;
    var Prelude = PS.Prelude;
    var Control_Monad_State_Class = PS.Control_Monad_State_Class;
    var Control_Monad_Reader_Class = PS.Control_Monad_Reader_Class;
    var Data_Bifunctor = PS.Data_Bifunctor;
    var Optic_Monad_Getter = PS.Optic_Monad_Getter;
    var Optic_Internal_Setter = PS.Optic_Internal_Setter;
    var Optic_Types = PS.Optic_Types;
    var Optic_Types_Extended = PS.Optic_Types_Extended;
    var Void = function (x) {
        return x;
    };
    var $hash$hash = Data_Profunctor.dimap(Data_Profunctor.profunctorArr)(Prelude[">>>"](Prelude.semigroupoidArr)(Data_Identity.Identity)(Data_Tagged.Tagged))(Prelude[">>>"](Prelude.semigroupoidArr)(Data_Tagged.unTagged)(Data_Identity.runIdentity));
    var reuses = function (__dict_Monad_693) {
        return function (__dict_MonadState_694) {
            return function (stab) {
                return function (t2r) {
                    return Control_Monad_State_Class.gets(__dict_Monad_693)(__dict_MonadState_694)(Prelude[">>>"](Prelude.semigroupoidArr)(Data_Profunctor.dimap(Data_Profunctor.profunctorArr)(Prelude[">>>"](Prelude.semigroupoidArr)(Data_Identity.Identity)(Data_Tagged.Tagged))(Prelude[">>>"](Prelude.semigroupoidArr)(Data_Tagged.unTagged)(Data_Identity.runIdentity))(stab))(t2r));
                };
            };
        };
    };
    var reuse = function (__dict_Monad_695) {
        return function (__dict_MonadState_696) {
            return function (stab) {
                return reuses(__dict_Monad_695)(__dict_MonadState_696)(stab)(Prelude.id(Prelude.categoryArr));
            };
        };
    };
    var relooks = function (__dict_Monad_697) {
        return function (__dict_MonadReader_698) {
            return function (stab) {
                return function (t2r) {
                    return Control_Monad_Reader_Class.reader(__dict_Monad_697)(__dict_MonadReader_698)(Prelude[">>>"](Prelude.semigroupoidArr)(Data_Profunctor.dimap(Data_Profunctor.profunctorArr)(Prelude[">>>"](Prelude.semigroupoidArr)(Data_Identity.Identity)(Data_Tagged.Tagged))(Prelude[">>>"](Prelude.semigroupoidArr)(Data_Tagged.unTagged)(Data_Identity.runIdentity))(stab))(t2r));
                };
            };
        };
    };
    var relook = function (__dict_Monad_699) {
        return function (__dict_MonadReader_700) {
            return function (stab) {
                return relooks(__dict_Monad_699)(__dict_MonadReader_700)(stab)(Prelude.id(Prelude.categoryArr));
            };
        };
    };
    var re = function (stab) {
        return function (__dict_Contravariant_701) {
            return function (__dict_Functor_702) {
                return Optic_Getter.to(__dict_Contravariant_701)(__dict_Functor_702)(Data_Profunctor.profunctorArr)(Data_Profunctor.dimap(Data_Profunctor.profunctorArr)(Prelude[">>>"](Prelude.semigroupoidArr)(Data_Identity.Identity)(Data_Tagged.Tagged))(Prelude[">>>"](Prelude.semigroupoidArr)(Data_Tagged.unTagged)(Data_Identity.runIdentity))(stab));
            };
        };
    };
    var absurd = function (a) {
        var spin = function (__copy__751) {
            var _751 = __copy__751;
            tco: while (true) {
                var __tco__751 = _751;
                _751 = __tco__751;
                continue tco;
            };
        };
        return spin(a);
    };
    var unto = function (__dict_Profunctor_703) {
        return function (__dict_Bifunctor_704) {
            return function (__dict_Functor_705) {
                return function (b2t) {
                    return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Bifunctor.lmap(__dict_Bifunctor_704)(absurd))(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Profunctor.lmap(__dict_Profunctor_703)(absurd))(Data_Profunctor.rmap(__dict_Profunctor_703)(Prelude["<$>"](__dict_Functor_705)(b2t))));
                };
            };
        };
    };
    var un = function (__dict_Profunctor_706) {
        return function (__dict_Bifunctor_707) {
            return function (__dict_Functor_708) {
                return Prelude[">>>"](Prelude.semigroupoidArr)(Optic_Monad_Getter.look(Prelude.monadArr)(Control_Monad_Reader_Class.monadReaderFun))(unto(__dict_Profunctor_706)(__dict_Bifunctor_707)(__dict_Functor_708));
            };
        };
    };
    return {
        un: un, 
        unto: unto, 
        relooks: relooks, 
        relook: relook, 
        reuses: reuses, 
        reuse: reuse, 
        re: re, 
        "##": $hash$hash
    };
})();
var PS = PS || {};
PS.Optic_Traversal = (function () {
    "use strict";
    var Data_Bitraversable = PS.Data_Bitraversable;
    var Prelude = PS.Prelude;
    var Optic_Types_Extended = PS.Optic_Types_Extended;
    var Data_Traversable = PS.Data_Traversable;
    var traverseOf = Prelude.id(Prelude.categoryArr);
    var sequenceOf = function (l) {
        return l(Prelude.id(Prelude.categoryArr));
    };
    var forOf = Prelude.flip;
    var both = function (__dict_Bitraversable_709) {
        return function (__dict_Applicative_710) {
            return function (f) {
                return Data_Bitraversable.bitraverse(__dict_Bitraversable_709)(__dict_Applicative_710)(f)(f);
            };
        };
    };
    return {
        traverseOf: traverseOf, 
        sequenceOf: sequenceOf, 
        forOf: forOf, 
        both: both
    };
})();
var PS = PS || {};
PS.Data_Unfoldable = (function () {
    "use strict";
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Data_Array_ST = PS.Data_Array_ST;
    var Prelude = PS.Prelude;
    var Control_Monad_ST = PS.Control_Monad_ST;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Tuple = PS.Data_Tuple;
    var Unfoldable = function (unfoldr) {
        this.unfoldr = unfoldr;
    };
    var unfoldr = function (dict) {
        return dict.unfoldr;
    };
    var unfoldableArray = new Unfoldable(function (f) {
        return function (b) {
            return Control_Monad_Eff.runPure(Data_Array_ST.runSTArray(function __do() {
                var _35 = Data_Array_ST.emptySTArray();
                var _34 = Control_Monad_ST.newSTRef(b)();
                (function () {
                    while (!(function __do() {
                        var _33 = Control_Monad_ST.readSTRef(_34)();
                        return (function () {
                            var _2915 = f(_33);
                            if (_2915 instanceof Data_Maybe.Nothing) {
                                return Prelude["return"](Control_Monad_Eff.monadEff)(true);
                            };
                            if (_2915 instanceof Data_Maybe.Just) {
                                return function __do() {
                                    Data_Array_ST.pushSTArray(_35)(_2915.value0.value0)();
                                    Control_Monad_ST.writeSTRef(_34)(_2915.value0.value1)();
                                    return false;
                                };
                            };
                            throw new Error("Failed pattern match");
                        })()();
                    })()) {

                    };
                    return {};
                })();
                return _35;
            }));
        };
    });
    return {
        Unfoldable: Unfoldable, 
        unfoldr: unfoldr, 
        unfoldableArray: unfoldableArray
    };
})();
var PS = PS || {};
PS.Control_Monad_ListT = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Lazy = PS.Data_Lazy;
    var Data_Array = PS.Data_Array;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Monoid = PS.Data_Monoid;
    var Data_Unfoldable = PS.Data_Unfoldable;
    var Control_Alt = PS.Control_Alt;
    var Control_Plus = PS.Control_Plus;
    var Control_Alternative = PS.Control_Alternative;
    var Control_MonadPlus = PS.Control_MonadPlus;
    var Control_Monad = PS.Control_Monad;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var Yield = (function () {
        function Yield(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        };
        Yield.create = function (value0) {
            return function (value1) {
                return new Yield(value0, value1);
            };
        };
        return Yield;
    })();
    var Skip = (function () {
        function Skip(value0) {
            this.value0 = value0;
        };
        Skip.create = function (value0) {
            return new Skip(value0);
        };
        return Skip;
    })();
    var Done = (function () {
        function Done() {

        };
        Done.value = new Done();
        return Done;
    })();
    var ListT = (function () {
        function ListT(value0) {
            this.value0 = value0;
        };
        ListT.create = function (value0) {
            return new ListT(value0);
        };
        return ListT;
    })();
    var wrapLazy = function (__dict_Monad_711) {
        return function (v) {
            return ListT.create(Prelude.pure(__dict_Monad_711["__superclass_Prelude.Applicative_0"]())(new Skip(v)));
        };
    };
    var wrapEffect = function (__dict_Monad_712) {
        return function (v) {
            return ListT.create(Prelude["<$>"](((__dict_Monad_712["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Prelude["<<<"](Prelude.semigroupoidArr)(Skip.create)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Lazy.defer)(Prelude["const"])))(v));
        };
    };
    var unfold = function (__dict_Monad_713) {
        return function (f) {
            return function (z) {
                var g = function (_759) {
                    if (_759 instanceof Data_Maybe.Just) {
                        return new Yield(_759.value0.value1, Data_Lazy.defer(function (_) {
                            return unfold(__dict_Monad_713)(f)(_759.value0.value0);
                        }));
                    };
                    if (_759 instanceof Data_Maybe.Nothing) {
                        return Done.value;
                    };
                    throw new Error("Failed pattern match");
                };
                return ListT.create(Prelude["<$>"](((__dict_Monad_713["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(g)(f(z)));
            };
        };
    };
    var runListT = function (_752) {
        return _752.value0;
    };
    var scanl = function (__dict_Monad_714) {
        return function (f) {
            return function (b) {
                return function (l) {
                    var g = function (_769) {
                        var h = function (_770) {
                            if (_770 instanceof Yield) {
                                var b$prime = f(_769.value0)(_770.value0);
                                return Data_Maybe.Just.create(new Data_Tuple.Tuple(new Data_Tuple.Tuple(b$prime, Data_Lazy.force(_770.value1)), b$prime));
                            };
                            if (_770 instanceof Skip) {
                                return Data_Maybe.Just.create(new Data_Tuple.Tuple(new Data_Tuple.Tuple(_769.value0, Data_Lazy.force(_770.value0)), _769.value0));
                            };
                            if (_770 instanceof Done) {
                                return Data_Maybe.Nothing.value;
                            };
                            throw new Error("Failed pattern match");
                        };
                        return Prelude["<$>"](((__dict_Monad_714["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(h)(runListT(_769.value1));
                    };
                    return unfold(__dict_Monad_714)(g)(new Data_Tuple.Tuple(b, l));
                };
            };
        };
    };
    var stepMap = function (__dict_Functor_715) {
        return function (f) {
            return function (l) {
                return ListT.create(Prelude["<$>"](__dict_Functor_715)(f)(runListT(l)));
            };
        };
    };
    var takeWhile = function (__dict_Applicative_716) {
        return function (f) {
            
            /**
             *  FIXME: type inferencer bug with if/then/else
             */
            var g = function (_761) {
                if (_761 instanceof Yield) {
                    var ifThenElse = function (p) {
                        return function (a_1) {
                            return function (b) {
                                if (p) {
                                    return a_1;
                                };
                                if (!p) {
                                    return b;
                                };
                                throw new Error("Failed pattern match");
                            };
                        };
                    };
                    return ifThenElse(f(_761.value0))(new Yield(_761.value0, Prelude["<$>"](Data_Lazy.functorLazy)(takeWhile(__dict_Applicative_716)(f))(_761.value1)))(Done.value);
                };
                if (_761 instanceof Skip) {
                    return Skip.create(Prelude["<$>"](Data_Lazy.functorLazy)(takeWhile(__dict_Applicative_716)(f))(_761.value0));
                };
                if (_761 instanceof Done) {
                    return Done.value;
                };
                throw new Error("Failed pattern match");
            };
            return stepMap((__dict_Applicative_716["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(g);
        };
    };
    var uncons = function (__dict_Monad_717) {
        return function (l) {
            var g = function (_766) {
                if (_766 instanceof Yield) {
                    return Prelude.pure(__dict_Monad_717["__superclass_Prelude.Applicative_0"]())(Data_Maybe.Just.create(new Data_Tuple.Tuple(_766.value0, Data_Lazy.force(_766.value1))));
                };
                if (_766 instanceof Skip) {
                    return uncons(__dict_Monad_717)(Data_Lazy.force(_766.value0));
                };
                if (_766 instanceof Done) {
                    return Prelude.pure(__dict_Monad_717["__superclass_Prelude.Applicative_0"]())(Data_Maybe.Nothing.value);
                };
                throw new Error("Failed pattern match");
            };
            return Prelude[">>="](__dict_Monad_717["__superclass_Prelude.Bind_1"]())(runListT(l))(g);
        };
    };
    var tail = function (__dict_Monad_718) {
        return function (l) {
            return Prelude["<$>"](((__dict_Monad_718["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Prelude["<$>"](Data_Maybe.functorMaybe)(Data_Tuple.snd))(uncons(__dict_Monad_718)(l));
        };
    };
    var prepend$prime = function (__dict_Applicative_719) {
        return function (h) {
            return function (t) {
                return ListT.create(Prelude.pure(__dict_Applicative_719)(new Yield(h, t)));
            };
        };
    };
    var prepend = function (__dict_Applicative_720) {
        return function (h) {
            return function (t) {
                return prepend$prime(__dict_Applicative_720)(h)(Data_Lazy.defer(Prelude["const"](t)));
            };
        };
    };
    var nil = function (__dict_Applicative_721) {
        return ListT.create(Prelude.pure(__dict_Applicative_721)(Done.value));
    };
    var singleton = function (__dict_Applicative_723) {
        return function (a) {
            return prepend(__dict_Applicative_723)(a)(nil(__dict_Applicative_723));
        };
    };
    var take = function (__dict_Applicative_724) {
        return function (_753) {
            return function (_754) {
                if (_753 === 0) {
                    return nil(__dict_Applicative_724);
                };
                var f = function (_760) {
                    if (_760 instanceof Yield) {
                        var s$prime = Prelude["<$>"](Data_Lazy.functorLazy)(take(__dict_Applicative_724)(_753 - 1))(_760.value1);
                        return new Yield(_760.value0, s$prime);
                    };
                    if (_760 instanceof Skip) {
                        var s$prime = Prelude["<$>"](Data_Lazy.functorLazy)(take(__dict_Applicative_724)(_753))(_760.value0);
                        return new Skip(s$prime);
                    };
                    if (_760 instanceof Done) {
                        return Done.value;
                    };
                    throw new Error("Failed pattern match");
                };
                return stepMap((__dict_Applicative_724["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(f)(_754);
            };
        };
    };
    var zipWith$prime = function (__dict_Monad_725) {
        return function (f) {
            var loop = function (fa) {
                return function (fb) {
                    var g = function (_771) {
                        return function (_772) {
                            if (_772 instanceof Data_Maybe.Nothing) {
                                return Prelude.pure(__dict_Monad_725["__superclass_Prelude.Applicative_0"]())(nil(__dict_Monad_725["__superclass_Prelude.Applicative_0"]()));
                            };
                            if (_771 instanceof Data_Maybe.Nothing) {
                                return Prelude.pure(__dict_Monad_725["__superclass_Prelude.Applicative_0"]())(nil(__dict_Monad_725["__superclass_Prelude.Applicative_0"]()));
                            };
                            if (_771 instanceof Data_Maybe.Just && _772 instanceof Data_Maybe.Just) {
                                return Prelude["<$>"](((__dict_Monad_725["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Prelude.flip(prepend$prime(__dict_Monad_725["__superclass_Prelude.Applicative_0"]()))(Data_Lazy.defer(function (_) {
                                    return zipWith$prime(__dict_Monad_725)(f)(_771.value0.value1)(_772.value0.value1);
                                })))(f(_771.value0.value0)(_772.value0.value0));
                            };
                            throw new Error("Failed pattern match");
                        };
                    };
                    return wrapEffect(__dict_Monad_725)(Prelude[">>="](__dict_Monad_725["__superclass_Prelude.Bind_1"]())(uncons(__dict_Monad_725)(fa))(function (_37) {
                        return Prelude[">>="](__dict_Monad_725["__superclass_Prelude.Bind_1"]())(uncons(__dict_Monad_725)(fb))(function (_36) {
                            return g(_37)(_36);
                        });
                    }));
                };
            };
            return loop;
        };
    };
    var zipWith = function (__dict_Monad_726) {
        return function (f) {
            var g = function (a) {
                return function (b) {
                    return Prelude.pure(__dict_Monad_726["__superclass_Prelude.Applicative_0"]())(f(a)(b));
                };
            };
            return zipWith$prime(__dict_Monad_726)(g);
        };
    };
    var mapMaybe = function (__dict_Functor_730) {
        return function (f) {
            var g = function (_765) {
                if (_765 instanceof Yield) {
                    return Data_Maybe.fromMaybe(Skip.create)(Prelude["<$>"](Data_Maybe.functorMaybe)(Yield.create)(f(_765.value0)))(Prelude["<$>"](Data_Lazy.functorLazy)(mapMaybe(__dict_Functor_730)(f))(_765.value1));
                };
                if (_765 instanceof Skip) {
                    return Skip.create(Prelude["<$>"](Data_Lazy.functorLazy)(mapMaybe(__dict_Functor_730)(f))(_765.value0));
                };
                if (_765 instanceof Done) {
                    return Done.value;
                };
                throw new Error("Failed pattern match");
            };
            return stepMap(__dict_Functor_730)(g);
        };
    };
    var iterate = function (__dict_Monad_731) {
        return function (f) {
            return function (a) {
                var g = function (a_1) {
                    return Prelude.pure(__dict_Monad_731["__superclass_Prelude.Applicative_0"]())(new Data_Maybe.Just(new Data_Tuple.Tuple(f(a_1), a_1)));
                };
                return unfold(__dict_Monad_731)(g)(a);
            };
        };
    };
    var repeat = function (__dict_Monad_732) {
        return iterate(__dict_Monad_732)(Prelude.id(Prelude.categoryArr));
    };
    var head = function (__dict_Monad_733) {
        return function (l) {
            return Prelude["<$>"](((__dict_Monad_733["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Prelude["<$>"](Data_Maybe.functorMaybe)(Data_Tuple.fst))(uncons(__dict_Monad_733)(l));
        };
    };
    var functorListT = function (__dict_Functor_734) {
        return new Prelude.Functor(function (f) {
            var g = function (_773) {
                if (_773 instanceof Yield) {
                    return new Yield(f(_773.value0), Prelude["<$>"](Data_Lazy.functorLazy)(Prelude["<$>"](functorListT(__dict_Functor_734))(f))(_773.value1));
                };
                if (_773 instanceof Skip) {
                    return new Skip(Prelude["<$>"](Data_Lazy.functorLazy)(Prelude["<$>"](functorListT(__dict_Functor_734))(f))(_773.value0));
                };
                if (_773 instanceof Done) {
                    return Done.value;
                };
                throw new Error("Failed pattern match");
            };
            return stepMap(__dict_Functor_734)(g);
        });
    };
    var fromEffect = function (__dict_Applicative_735) {
        return function (fa) {
            return ListT.create(Prelude["<$>"]((__dict_Applicative_735["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Prelude.flip(Yield.create)(Data_Lazy.defer(function (_) {
                return nil(__dict_Applicative_735);
            })))(fa));
        };
    };
    var monadTransListT = new Control_Monad_Trans.MonadTrans(function (__dict_Monad_736) {
        return fromEffect(__dict_Monad_736["__superclass_Prelude.Applicative_0"]());
    });
    var fromArray = function (__dict_Monad_737) {
        return function (xs) {
            var f = function (n) {
                return Prelude.pure(__dict_Monad_737["__superclass_Prelude.Applicative_0"]())(Prelude["<$>"](Data_Maybe.functorMaybe)(Data_Tuple.Tuple.create(n + 1))(Data_Array["!!"](xs)(n)));
            };
            return unfold(__dict_Monad_737)(f)(0);
        };
    };
    var foldl$prime = function (__dict_Monad_738) {
        return function (f) {
            var loop = function (b) {
                return function (l) {
                    var g = function (_767) {
                        if (_767 instanceof Data_Maybe.Nothing) {
                            return Prelude.pure(__dict_Monad_738["__superclass_Prelude.Applicative_0"]())(b);
                        };
                        if (_767 instanceof Data_Maybe.Just) {
                            return Prelude[">>="](__dict_Monad_738["__superclass_Prelude.Bind_1"]())(f(b)(_767.value0.value0))(Prelude.flip(loop)(_767.value0.value1));
                        };
                        throw new Error("Failed pattern match");
                    };
                    return Prelude[">>="](__dict_Monad_738["__superclass_Prelude.Bind_1"]())(uncons(__dict_Monad_738)(l))(g);
                };
            };
            return loop;
        };
    };
    var foldl = function (__dict_Monad_739) {
        return function (f) {
            var loop = function (b) {
                return function (l) {
                    var g = function (_768) {
                        if (_768 instanceof Data_Maybe.Nothing) {
                            return Prelude.pure(__dict_Monad_739["__superclass_Prelude.Applicative_0"]())(b);
                        };
                        if (_768 instanceof Data_Maybe.Just) {
                            return loop(f(b)(_768.value0.value0))(_768.value0.value1);
                        };
                        throw new Error("Failed pattern match");
                    };
                    return Prelude[">>="](__dict_Monad_739["__superclass_Prelude.Bind_1"]())(uncons(__dict_Monad_739)(l))(g);
                };
            };
            return loop;
        };
    };
    var toArray = function (__dict_Monad_740) {
        return Prelude["<<<"](Prelude.semigroupoidArr)(Prelude["<$>"](((__dict_Monad_740["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Array.reverse))(foldl(__dict_Monad_740)(Prelude.flip(Prelude[":"]))([  ]));
    };
    var filter = function (__dict_Functor_741) {
        return function (f) {
            var g = function (_764) {
                if (_764 instanceof Yield) {
                    var s$prime = Prelude["<$>"](Data_Lazy.functorLazy)(filter(__dict_Functor_741)(f))(_764.value1);
                    var _2974 = f(_764.value0);
                    if (_2974) {
                        return new Yield(_764.value0, s$prime);
                    };
                    if (!_2974) {
                        return new Skip(s$prime);
                    };
                    throw new Error("Failed pattern match");
                };
                if (_764 instanceof Skip) {
                    var s$prime = Prelude["<$>"](Data_Lazy.functorLazy)(filter(__dict_Functor_741)(f))(_764.value0);
                    return new Skip(s$prime);
                };
                if (_764 instanceof Done) {
                    return Done.value;
                };
                throw new Error("Failed pattern match");
            };
            return stepMap(__dict_Functor_741)(g);
        };
    };
    var dropWhile = function (__dict_Applicative_742) {
        return function (f) {
            var g = function (_763) {
                if (_763 instanceof Yield) {
                    var _2979 = f(_763.value0);
                    if (_2979) {
                        return new Skip(Prelude["<$>"](Data_Lazy.functorLazy)(dropWhile(__dict_Applicative_742)(f))(_763.value1));
                    };
                    if (!_2979) {
                        return new Yield(_763.value0, _763.value1);
                    };
                    throw new Error("Failed pattern match");
                };
                if (_763 instanceof Skip) {
                    return Skip.create(Prelude["<$>"](Data_Lazy.functorLazy)(dropWhile(__dict_Applicative_742)(f))(_763.value0));
                };
                if (_763 instanceof Done) {
                    return Done.value;
                };
                throw new Error("Failed pattern match");
            };
            return stepMap((__dict_Applicative_742["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(g);
        };
    };
    var drop = function (__dict_Applicative_743) {
        return function (_755) {
            return function (_756) {
                if (_755 === 0) {
                    return _756;
                };
                var f = function (_762) {
                    if (_762 instanceof Yield) {
                        var s$prime = Prelude["<$>"](Data_Lazy.functorLazy)(drop(__dict_Applicative_743)(_755 - 1))(_762.value1);
                        return new Skip(s$prime);
                    };
                    if (_762 instanceof Skip) {
                        var s$prime = Prelude["<$>"](Data_Lazy.functorLazy)(drop(__dict_Applicative_743)(_755))(_762.value0);
                        return new Skip(s$prime);
                    };
                    if (_762 instanceof Done) {
                        return Done.value;
                    };
                    throw new Error("Failed pattern match");
                };
                return stepMap((__dict_Applicative_743["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(f)(_756);
            };
        };
    };
    var cons$prime = function (__dict_Applicative_744) {
        return function (lh) {
            return function (t) {
                var f = function (_757) {
                    return new Yield(Data_Lazy.force(lh), t);
                };
                return ListT.create(Prelude["<$>"]((__dict_Applicative_744["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(f)(Prelude.pure(__dict_Applicative_744)(Prelude.unit)));
            };
        };
    };
    var unfoldableListT = function (__dict_Monad_745) {
        return new Data_Unfoldable.Unfoldable(function (f) {
            return function (b) {
                var go = function (_774) {
                    if (_774 instanceof Data_Maybe.Nothing) {
                        return nil(__dict_Monad_745["__superclass_Prelude.Applicative_0"]());
                    };
                    if (_774 instanceof Data_Maybe.Just) {
                        return cons$prime(__dict_Monad_745["__superclass_Prelude.Applicative_0"]())(Prelude.pure(Data_Lazy.applicativeLazy)(_774.value0.value0))(Data_Lazy.defer(function (_) {
                            return go(f(_774.value0.value1));
                        }));
                    };
                    throw new Error("Failed pattern match");
                };
                return go(f(b));
            };
        });
    };
    var semigroupListT = function (__dict_Applicative_747) {
        return new Prelude.Semigroup(concat(__dict_Applicative_747));
    };
    var concat = function (__dict_Applicative_746) {
        return function (x) {
            return function (y) {
                var f = function (_758) {
                    if (_758 instanceof Yield) {
                        return new Yield(_758.value0, Prelude["<$>"](Data_Lazy.functorLazy)(Prelude.flip(Prelude["<>"](semigroupListT(__dict_Applicative_746)))(y))(_758.value1));
                    };
                    if (_758 instanceof Skip) {
                        return new Skip(Prelude["<$>"](Data_Lazy.functorLazy)(Prelude.flip(Prelude["<>"](semigroupListT(__dict_Applicative_746)))(y))(_758.value0));
                    };
                    if (_758 instanceof Done) {
                        return new Skip(Data_Lazy.defer(Prelude["const"](y)));
                    };
                    throw new Error("Failed pattern match");
                };
                return stepMap((__dict_Applicative_746["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(f)(x);
            };
        };
    };
    var monoidListT = function (__dict_Applicative_727) {
        return new Data_Monoid.Monoid(function () {
            return semigroupListT(__dict_Applicative_727);
        }, nil(__dict_Applicative_727));
    };
    var catMaybes = function (__dict_Functor_748) {
        return mapMaybe(__dict_Functor_748)(Prelude.id(Prelude.categoryArr));
    };
    var applyListT = function (__dict_Monad_750) {
        return new Prelude.Apply((function () {
            var g = function (f) {
                return function (x) {
                    return f(x);
                };
            };
            return zipWith(__dict_Monad_750)(g);
        })(), function () {
            return functorListT(((__dict_Monad_750["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]());
        });
    };
    var bindListT = function (__dict_Monad_749) {
        return new Prelude.Bind(function (fa) {
            return function (f) {
                var g = function (_775) {
                    if (_775 instanceof Yield) {
                        var h = function (s_1) {
                            return concat(__dict_Monad_749["__superclass_Prelude.Applicative_0"]())(f(_775.value0))(Prelude[">>="](bindListT(__dict_Monad_749))(s_1)(f));
                        };
                        return new Skip(Prelude["<$>"](Data_Lazy.functorLazy)(h)(_775.value1));
                    };
                    if (_775 instanceof Skip) {
                        var h = function (s_2) {
                            return Prelude[">>="](bindListT(__dict_Monad_749))(s_2)(f);
                        };
                        return new Skip(Prelude["<$>"](Data_Lazy.functorLazy)(h)(_775.value0));
                    };
                    if (_775 instanceof Done) {
                        return Done.value;
                    };
                    throw new Error("Failed pattern match");
                };
                return stepMap(((__dict_Monad_749["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(g)(fa);
            };
        }, function () {
            return applyListT(__dict_Monad_749);
        });
    };
    var applicativeListT = function (__dict_Monad_751) {
        return new Prelude.Applicative(function () {
            return applyListT(__dict_Monad_751);
        }, singleton(__dict_Monad_751["__superclass_Prelude.Applicative_0"]()));
    };
    var monadListT = function (__dict_Monad_729) {
        return new Prelude.Monad(function () {
            return applicativeListT(__dict_Monad_729);
        }, function () {
            return bindListT(__dict_Monad_729);
        });
    };
    var altListT = function (__dict_Applicative_753) {
        return new Control_Alt.Alt(concat(__dict_Applicative_753), function () {
            return functorListT((__dict_Applicative_753["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]());
        });
    };
    var plusListT = function (__dict_Monad_722) {
        return new Control_Plus.Plus(function () {
            return altListT(__dict_Monad_722["__superclass_Prelude.Applicative_0"]());
        }, nil(__dict_Monad_722["__superclass_Prelude.Applicative_0"]()));
    };
    var alternativeListT = function (__dict_Monad_752) {
        return new Control_Alternative.Alternative(function () {
            return plusListT(__dict_Monad_752);
        }, function () {
            return applicativeListT(__dict_Monad_752);
        });
    };
    var monadPlusListT = function (__dict_Monad_728) {
        return new Control_MonadPlus.MonadPlus(function () {
            return alternativeListT(__dict_Monad_728);
        }, function () {
            return monadListT(__dict_Monad_728);
        });
    };
    return {
        "zipWith'": zipWith$prime, 
        zipWith: zipWith, 
        wrapLazy: wrapLazy, 
        wrapEffect: wrapEffect, 
        unfold: unfold, 
        uncons: uncons, 
        toArray: toArray, 
        takeWhile: takeWhile, 
        take: take, 
        tail: tail, 
        singleton: singleton, 
        scanl: scanl, 
        repeat: repeat, 
        "prepend'": prepend$prime, 
        prepend: prepend, 
        nil: nil, 
        mapMaybe: mapMaybe, 
        iterate: iterate, 
        head: head, 
        fromEffect: fromEffect, 
        fromArray: fromArray, 
        "foldl'": foldl$prime, 
        foldl: foldl, 
        filter: filter, 
        dropWhile: dropWhile, 
        drop: drop, 
        "cons'": cons$prime, 
        catMaybes: catMaybes, 
        semigroupListT: semigroupListT, 
        monoidListT: monoidListT, 
        functorListT: functorListT, 
        unfoldableListT: unfoldableListT, 
        applyListT: applyListT, 
        applicativeListT: applicativeListT, 
        bindListT: bindListT, 
        monadListT: monadListT, 
        monadTransListT: monadTransListT, 
        altListT: altListT, 
        plusListT: plusListT, 
        alternativeListT: alternativeListT, 
        monadPlusListT: monadPlusListT
    };
})();
var PS = PS || {};
PS.Data_Enum = (function () {
    "use strict";
    var Data_Maybe = PS.Data_Maybe;
    var Data_Maybe_Unsafe = PS.Data_Maybe_Unsafe;
    var Data_Unfoldable = PS.Data_Unfoldable;
    var Data_Char = PS.Data_Char;
    var Prelude = PS.Prelude;
    var Data_Either = PS.Data_Either;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Array = PS.Data_Array;
    function floor(n){ return Math.floor(n); };
    var Cardinality = function (x) {
        return x;
    };
    
    /**
     *  | Type class for enumerations. This should not be considered a part of a
     *  | numeric hierarchy, ala Haskell. Rather, this is a type class for small,
     *  | ordered sum types with statically-determined cardinality and the ability 
     *  | to easily compute successor and predecessor elements. e.g. DayOfWeek, etc.
     *  |
     *  | Laws:
     *  |   succ firstEnum >>= succ >>= succ ... succ [cardinality - 1 times] == lastEnum
     *  |   pred lastEnum  >>= pred >>= pred ... pred [cardinality - 1 times] == firstEnum
     *  |   
     *  |   e1 `compare` e2 == fromEnum e1 `compare` fromEnum e2
     *  |   
     *  |   for all a > firstEnum: pred a >>= succ == Just a
     *  |   for all a < lastEnum:  succ a >>= pred == Just a
     *  |   
     *  |   pred >=> succ >=> pred = pred
     *  |   succ >=> pred >=> succ = succ
     *  |   
     *  |   toEnum (fromEnum a) = Just a
     *  |   
     *  |   for all a > firstEnum: fromEnum <$> pred a = Just (fromEnum a - 1)
     *  |   for all a < lastEnum:  fromEnum <$> succ a = Just (fromEnum a + 1)
     */
    var Enum = function (__superclass_Prelude$dotOrd_0, cardinality, firstEnum, fromEnum, lastEnum, pred, succ, toEnum) {
        this["__superclass_Prelude.Ord_0"] = __superclass_Prelude$dotOrd_0;
        this.cardinality = cardinality;
        this.firstEnum = firstEnum;
        this.fromEnum = fromEnum;
        this.lastEnum = lastEnum;
        this.pred = pred;
        this.succ = succ;
        this.toEnum = toEnum;
    };
    
    /**
     *  | Type class for enumerations. This should not be considered a part of a
     *  | numeric hierarchy, ala Haskell. Rather, this is a type class for small,
     *  | ordered sum types with statically-determined cardinality and the ability 
     *  | to easily compute successor and predecessor elements. e.g. DayOfWeek, etc.
     *  |
     *  | Laws:
     *  |   succ firstEnum >>= succ >>= succ ... succ [cardinality - 1 times] == lastEnum
     *  |   pred lastEnum  >>= pred >>= pred ... pred [cardinality - 1 times] == firstEnum
     *  |   
     *  |   e1 `compare` e2 == fromEnum e1 `compare` fromEnum e2
     *  |   
     *  |   for all a > firstEnum: pred a >>= succ == Just a
     *  |   for all a < lastEnum:  succ a >>= pred == Just a
     *  |   
     *  |   pred >=> succ >=> pred = pred
     *  |   succ >=> pred >=> succ = succ
     *  |   
     *  |   toEnum (fromEnum a) = Just a
     *  |   
     *  |   for all a > firstEnum: fromEnum <$> pred a = Just (fromEnum a - 1)
     *  |   for all a < lastEnum:  fromEnum <$> succ a = Just (fromEnum a + 1)
     */
    var toEnum = function (dict) {
        return dict.toEnum;
    };
    
    /**
     *  | Type class for enumerations. This should not be considered a part of a
     *  | numeric hierarchy, ala Haskell. Rather, this is a type class for small,
     *  | ordered sum types with statically-determined cardinality and the ability 
     *  | to easily compute successor and predecessor elements. e.g. DayOfWeek, etc.
     *  |
     *  | Laws:
     *  |   succ firstEnum >>= succ >>= succ ... succ [cardinality - 1 times] == lastEnum
     *  |   pred lastEnum  >>= pred >>= pred ... pred [cardinality - 1 times] == firstEnum
     *  |   
     *  |   e1 `compare` e2 == fromEnum e1 `compare` fromEnum e2
     *  |   
     *  |   for all a > firstEnum: pred a >>= succ == Just a
     *  |   for all a < lastEnum:  succ a >>= pred == Just a
     *  |   
     *  |   pred >=> succ >=> pred = pred
     *  |   succ >=> pred >=> succ = succ
     *  |   
     *  |   toEnum (fromEnum a) = Just a
     *  |   
     *  |   for all a > firstEnum: fromEnum <$> pred a = Just (fromEnum a - 1)
     *  |   for all a < lastEnum:  fromEnum <$> succ a = Just (fromEnum a + 1)
     */
    var succ = function (dict) {
        return dict.succ;
    };
    var runCardinality = function (_776) {
        return _776;
    };
    var tupleCardinality = function (__dict_Enum_754) {
        return function (__dict_Enum_755) {
            return function (l) {
                return function (r) {
                    return Cardinality(runCardinality(l) * runCardinality(r));
                };
            };
        };
    };
    
    /**
     *  | Type class for enumerations. This should not be considered a part of a
     *  | numeric hierarchy, ala Haskell. Rather, this is a type class for small,
     *  | ordered sum types with statically-determined cardinality and the ability 
     *  | to easily compute successor and predecessor elements. e.g. DayOfWeek, etc.
     *  |
     *  | Laws:
     *  |   succ firstEnum >>= succ >>= succ ... succ [cardinality - 1 times] == lastEnum
     *  |   pred lastEnum  >>= pred >>= pred ... pred [cardinality - 1 times] == firstEnum
     *  |   
     *  |   e1 `compare` e2 == fromEnum e1 `compare` fromEnum e2
     *  |   
     *  |   for all a > firstEnum: pred a >>= succ == Just a
     *  |   for all a < lastEnum:  succ a >>= pred == Just a
     *  |   
     *  |   pred >=> succ >=> pred = pred
     *  |   succ >=> pred >=> succ = succ
     *  |   
     *  |   toEnum (fromEnum a) = Just a
     *  |   
     *  |   for all a > firstEnum: fromEnum <$> pred a = Just (fromEnum a - 1)
     *  |   for all a < lastEnum:  fromEnum <$> succ a = Just (fromEnum a + 1)
     */
    var pred = function (dict) {
        return dict.pred;
    };
    var maybeCardinality = function (__dict_Enum_756) {
        return function (c) {
            return Cardinality(1 + runCardinality(c));
        };
    };
    var maybeToEnum = function (__dict_Enum_757) {
        return function (_781) {
            return function (_782) {
                if (_782 <= runCardinality(maybeCardinality(__dict_Enum_757)(_781))) {
                    var _3005 = _782 === 0;
                    if (_3005) {
                        return Data_Maybe.Just.create(Data_Maybe.Nothing.value);
                    };
                    if (!_3005) {
                        return Data_Maybe.Just.create(toEnum(__dict_Enum_757)(_782 - 1));
                    };
                    throw new Error("Failed pattern match");
                };
                return Data_Maybe.Nothing.value;
            };
        };
    };
    
    /**
     *  | Type class for enumerations. This should not be considered a part of a
     *  | numeric hierarchy, ala Haskell. Rather, this is a type class for small,
     *  | ordered sum types with statically-determined cardinality and the ability 
     *  | to easily compute successor and predecessor elements. e.g. DayOfWeek, etc.
     *  |
     *  | Laws:
     *  |   succ firstEnum >>= succ >>= succ ... succ [cardinality - 1 times] == lastEnum
     *  |   pred lastEnum  >>= pred >>= pred ... pred [cardinality - 1 times] == firstEnum
     *  |   
     *  |   e1 `compare` e2 == fromEnum e1 `compare` fromEnum e2
     *  |   
     *  |   for all a > firstEnum: pred a >>= succ == Just a
     *  |   for all a < lastEnum:  succ a >>= pred == Just a
     *  |   
     *  |   pred >=> succ >=> pred = pred
     *  |   succ >=> pred >=> succ = succ
     *  |   
     *  |   toEnum (fromEnum a) = Just a
     *  |   
     *  |   for all a > firstEnum: fromEnum <$> pred a = Just (fromEnum a - 1)
     *  |   for all a < lastEnum:  fromEnum <$> succ a = Just (fromEnum a + 1)
     */
    var lastEnum = function (dict) {
        return dict.lastEnum;
    };
    
    /**
     *  Property: forall e in intStepFromTo step a b: a <= e <= b
     *  intStepFromTo :: Int -> Int -> Int -> List Int
     */
    var intStepFromTo = function (step) {
        return function (from) {
            return function (to) {
                return Data_Unfoldable.unfoldr(Data_Unfoldable.unfoldableArray)(function (e) {
                    var _3006 = e <= to;
                    if (_3006) {
                        return Data_Maybe.Just.create(new Data_Tuple.Tuple(e, e + step));
                    };
                    if (!_3006) {
                        return Data_Maybe.Nothing.value;
                    };
                    throw new Error("Failed pattern match");
                })(from);
            };
        };
    };
    
    /**
     *  Property: forall e in intFromTo a b: a <= e <= b
     *  intFromTo :: Int -> Int -> List Int
     */
    var intFromTo = intStepFromTo(1);
    
    /**
     *  | Type class for enumerations. This should not be considered a part of a
     *  | numeric hierarchy, ala Haskell. Rather, this is a type class for small,
     *  | ordered sum types with statically-determined cardinality and the ability 
     *  | to easily compute successor and predecessor elements. e.g. DayOfWeek, etc.
     *  |
     *  | Laws:
     *  |   succ firstEnum >>= succ >>= succ ... succ [cardinality - 1 times] == lastEnum
     *  |   pred lastEnum  >>= pred >>= pred ... pred [cardinality - 1 times] == firstEnum
     *  |   
     *  |   e1 `compare` e2 == fromEnum e1 `compare` fromEnum e2
     *  |   
     *  |   for all a > firstEnum: pred a >>= succ == Just a
     *  |   for all a < lastEnum:  succ a >>= pred == Just a
     *  |   
     *  |   pred >=> succ >=> pred = pred
     *  |   succ >=> pred >=> succ = succ
     *  |   
     *  |   toEnum (fromEnum a) = Just a
     *  |   
     *  |   for all a > firstEnum: fromEnum <$> pred a = Just (fromEnum a - 1)
     *  |   for all a < lastEnum:  fromEnum <$> succ a = Just (fromEnum a + 1)
     */
    var fromEnum = function (dict) {
        return dict.fromEnum;
    };
    var tupleFromEnum = function (__dict_Enum_758) {
        return function (__dict_Enum_759) {
            return function (_785) {
                return function (_786) {
                    return fromEnum(__dict_Enum_758)(_786.value0) * runCardinality(_785) + fromEnum(__dict_Enum_759)(_786.value1);
                };
            };
        };
    };
    
    /**
     *  | Type class for enumerations. This should not be considered a part of a
     *  | numeric hierarchy, ala Haskell. Rather, this is a type class for small,
     *  | ordered sum types with statically-determined cardinality and the ability 
     *  | to easily compute successor and predecessor elements. e.g. DayOfWeek, etc.
     *  |
     *  | Laws:
     *  |   succ firstEnum >>= succ >>= succ ... succ [cardinality - 1 times] == lastEnum
     *  |   pred lastEnum  >>= pred >>= pred ... pred [cardinality - 1 times] == firstEnum
     *  |   
     *  |   e1 `compare` e2 == fromEnum e1 `compare` fromEnum e2
     *  |   
     *  |   for all a > firstEnum: pred a >>= succ == Just a
     *  |   for all a < lastEnum:  succ a >>= pred == Just a
     *  |   
     *  |   pred >=> succ >=> pred = pred
     *  |   succ >=> pred >=> succ = succ
     *  |   
     *  |   toEnum (fromEnum a) = Just a
     *  |   
     *  |   for all a > firstEnum: fromEnum <$> pred a = Just (fromEnum a - 1)
     *  |   for all a < lastEnum:  fromEnum <$> succ a = Just (fromEnum a + 1)
     */
    var firstEnum = function (dict) {
        return dict.firstEnum;
    };
    
    /**
     *  Property: fromEnum a = a', fromEnum b = b' => forall e', a' <= e' <= b': Exists e: toEnum e' = Just e
     *  Following from the propery of intFromTo, We are sure all elements in intFromTo (fromEnum a) (fromEnum b) are Justs.
     */
    var enumFromTo = function (__dict_Enum_760) {
        return function (a) {
            return function (b) {
                var b$prime = fromEnum(__dict_Enum_760)(b);
                var a$prime = fromEnum(__dict_Enum_760)(a);
                return Prelude["<$>"](Data_Array.functorArray)(Prelude[">>>"](Prelude.semigroupoidArr)(toEnum(__dict_Enum_760))(Data_Maybe_Unsafe.fromJust))(intFromTo(a$prime)(b$prime));
            };
        };
    };
    
    /**
     *  [a,b..c]
     *  Correctness for using fromJust is the same as for enumFromTo.
     */
    var enumFromThenTo = function (__dict_Enum_761) {
        return function (a) {
            return function (b) {
                return function (c) {
                    var c$prime = fromEnum(__dict_Enum_761)(c);
                    var b$prime = fromEnum(__dict_Enum_761)(b);
                    var a$prime = fromEnum(__dict_Enum_761)(a);
                    return Prelude["<$>"](Data_Array.functorArray)(Prelude[">>>"](Prelude.semigroupoidArr)(toEnum(__dict_Enum_761))(Data_Maybe_Unsafe.fromJust))(intStepFromTo(b$prime - a$prime)(a$prime)(c$prime));
                };
            };
        };
    };
    var eitherFromEnum = function (__dict_Enum_762) {
        return function (__dict_Enum_763) {
            return function (_787) {
                return function (_788) {
                    if (_788 instanceof Data_Either.Left) {
                        return fromEnum(__dict_Enum_762)(_788.value0);
                    };
                    if (_788 instanceof Data_Either.Right) {
                        return fromEnum(__dict_Enum_763)(_788.value0) + runCardinality(_787);
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
    };
    var eitherCardinality = function (__dict_Enum_764) {
        return function (__dict_Enum_765) {
            return function (l) {
                return function (r) {
                    return Cardinality(runCardinality(l) + runCardinality(r));
                };
            };
        };
    };
    var eitherToEnum = function (__dict_Enum_766) {
        return function (__dict_Enum_767) {
            return function (carda) {
                return function (cardb) {
                    return function (n) {
                        var _3015 = n >= 0 && n < runCardinality(carda);
                        if (_3015) {
                            return Prelude["<$>"](Data_Maybe.functorMaybe)(Data_Either.Left.create)(toEnum(__dict_Enum_766)(n));
                        };
                        if (!_3015) {
                            var _3016 = n >= runCardinality(carda) && n < runCardinality(eitherCardinality(__dict_Enum_766)(__dict_Enum_767)(carda)(cardb));
                            if (_3016) {
                                return Prelude["<$>"](Data_Maybe.functorMaybe)(Data_Either.Right.create)(toEnum(__dict_Enum_767)(n - runCardinality(carda)));
                            };
                            if (!_3016) {
                                return Data_Maybe.Nothing.value;
                            };
                            throw new Error("Failed pattern match");
                        };
                        throw new Error("Failed pattern match");
                    };
                };
            };
        };
    };
    var div = function (a) {
        return function (b) {
            return floor(a / b);
        };
    };
    
    /**
     *  All of these are as a workaround for ScopedTypeVariables. (not yet supported in Purescript)
     */
    var tupleToEnum = function (__dict_Enum_768) {
        return function (__dict_Enum_769) {
            return function (cardb) {
                return function (n) {
                    return Prelude["<*>"](Data_Maybe.applyMaybe)(Prelude["<$>"](Data_Maybe.functorMaybe)(Data_Tuple.Tuple.create)(toEnum(__dict_Enum_768)(div(n)(runCardinality(cardb)))))(toEnum(__dict_Enum_769)(n % runCardinality(cardb)));
                };
            };
        };
    };
    
    /**
     *  | Runs in O(n) where n is (fromEnum a)
     *  | defaultToEnum succ firstEnum = toEnum
     */
    var defaultToEnum = function (_777) {
        return function (_778) {
            return function (_779) {
                if (_779 < 0) {
                    return Data_Maybe.Nothing.value;
                };
                if (_779 === 0) {
                    return new Data_Maybe.Just(_778);
                };
                return Prelude[">>="](Data_Maybe.bindMaybe)(defaultToEnum(_777)(_778)(_779 - 1))(_777);
            };
        };
    };
    
    /**
     *  | defaultSucc toEnum fromEnum = succ
     */
    var defaultSucc = function (toEnum$prime) {
        return function (fromEnum$prime) {
            return function (a) {
                return toEnum$prime(fromEnum$prime(a) + 1);
            };
        };
    };
    
    /**
     *  | defaultPred toEnum fromEnum = pred
     */
    var defaultPred = function (toEnum$prime) {
        return function (fromEnum$prime) {
            return function (a) {
                return toEnum$prime(fromEnum$prime(a) - 1);
            };
        };
    };
    
    /**
     *  | Runs in O(n) where n is (fromEnum a)
     *  | defaultFromEnum pred = fromEnum
     */
    var defaultFromEnum = function (pred$prime) {
        return function (e) {
            return Data_Maybe.maybe(0)(function (prd) {
                return defaultFromEnum(pred$prime)(prd) + 1;
            })(pred$prime(e));
        };
    };
    
    /**
     *  To avoid a compiler bug - can't pass self-class functions, workaround: need to make a concrete function.
     */
    var charToEnum = function (_780) {
        if (_780 >= 0 && _780 <= 65535) {
            return Data_Maybe.Just.create(Data_Char.fromCharCode(_780));
        };
        return Data_Maybe.Nothing.value;
    };
    var charFromEnum = Data_Char.toCharCode;
    
    /**
     *  starting value/state.
     *  | Instances
     */
    var enumChar = new Enum(function () {
        return Data_Char.ordChar;
    }, 65535 + 1, Data_Char.fromCharCode(0), charFromEnum, Data_Char.fromCharCode(65535), defaultPred(charToEnum)(charFromEnum), defaultSucc(charToEnum)(charFromEnum), charToEnum);
    
    /**
     *  | Type class for enumerations. This should not be considered a part of a
     *  | numeric hierarchy, ala Haskell. Rather, this is a type class for small,
     *  | ordered sum types with statically-determined cardinality and the ability 
     *  | to easily compute successor and predecessor elements. e.g. DayOfWeek, etc.
     *  |
     *  | Laws:
     *  |   succ firstEnum >>= succ >>= succ ... succ [cardinality - 1 times] == lastEnum
     *  |   pred lastEnum  >>= pred >>= pred ... pred [cardinality - 1 times] == firstEnum
     *  |   
     *  |   e1 `compare` e2 == fromEnum e1 `compare` fromEnum e2
     *  |   
     *  |   for all a > firstEnum: pred a >>= succ == Just a
     *  |   for all a < lastEnum:  succ a >>= pred == Just a
     *  |   
     *  |   pred >=> succ >=> pred = pred
     *  |   succ >=> pred >=> succ = succ
     *  |   
     *  |   toEnum (fromEnum a) = Just a
     *  |   
     *  |   for all a > firstEnum: fromEnum <$> pred a = Just (fromEnum a - 1)
     *  |   for all a < lastEnum:  fromEnum <$> succ a = Just (fromEnum a + 1)
     */
    var cardinality = function (dict) {
        return dict.cardinality;
    };
    var enumEither = function (__dict_Enum_770) {
        return function (__dict_Enum_771) {
            return new Enum(function () {
                return Data_Either.ordEither(__dict_Enum_770["__superclass_Prelude.Ord_0"]())(__dict_Enum_771["__superclass_Prelude.Ord_0"]());
            }, eitherCardinality(__dict_Enum_770)(__dict_Enum_771)(cardinality(__dict_Enum_770))(cardinality(__dict_Enum_771)), new Data_Either.Left(firstEnum(__dict_Enum_770)), eitherFromEnum(__dict_Enum_770)(__dict_Enum_771)(cardinality(__dict_Enum_770)), new Data_Either.Right(lastEnum(__dict_Enum_771)), function (_795) {
                if (_795 instanceof Data_Either.Left) {
                    return Data_Maybe.maybe(Data_Maybe.Nothing.value)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Maybe.Just.create)(Data_Either.Left.create))(pred(__dict_Enum_770)(_795.value0));
                };
                if (_795 instanceof Data_Either.Right) {
                    return Data_Maybe.maybe(Data_Maybe.Just.create(new Data_Either.Left(lastEnum(__dict_Enum_770))))(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Maybe.Just.create)(Data_Either.Right.create))(pred(__dict_Enum_771)(_795.value0));
                };
                throw new Error("Failed pattern match");
            }, function (_794) {
                if (_794 instanceof Data_Either.Left) {
                    return Data_Maybe.maybe(Data_Maybe.Just.create(new Data_Either.Right(firstEnum(__dict_Enum_771))))(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Maybe.Just.create)(Data_Either.Left.create))(succ(__dict_Enum_770)(_794.value0));
                };
                if (_794 instanceof Data_Either.Right) {
                    return Data_Maybe.maybe(Data_Maybe.Nothing.value)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Maybe.Just.create)(Data_Either.Right.create))(succ(__dict_Enum_771)(_794.value0));
                };
                throw new Error("Failed pattern match");
            }, eitherToEnum(__dict_Enum_770)(__dict_Enum_771)(cardinality(__dict_Enum_770))(cardinality(__dict_Enum_771)));
        };
    };
    var enumMaybe = function (__dict_Enum_772) {
        return new Enum(function () {
            return Data_Maybe.ordMaybe(__dict_Enum_772["__superclass_Prelude.Ord_0"]());
        }, maybeCardinality(__dict_Enum_772)(cardinality(__dict_Enum_772)), Data_Maybe.Nothing.value, function (_791) {
            if (_791 instanceof Data_Maybe.Nothing) {
                return 0;
            };
            if (_791 instanceof Data_Maybe.Just) {
                return fromEnum(__dict_Enum_772)(_791.value0) + 1;
            };
            throw new Error("Failed pattern match");
        }, Data_Maybe.Just.create(lastEnum(__dict_Enum_772)), function (_790) {
            if (_790 instanceof Data_Maybe.Nothing) {
                return Data_Maybe.Nothing.value;
            };
            if (_790 instanceof Data_Maybe.Just) {
                return Prelude["<$>"](Data_Maybe.functorMaybe)(Data_Maybe.Just.create)(pred(__dict_Enum_772)(_790.value0));
            };
            throw new Error("Failed pattern match");
        }, function (_789) {
            if (_789 instanceof Data_Maybe.Nothing) {
                return Data_Maybe.Just.create(firstEnum(enumMaybe(__dict_Enum_772)));
            };
            if (_789 instanceof Data_Maybe.Just) {
                return Prelude["<$>"](Data_Maybe.functorMaybe)(Data_Maybe.Just.create)(succ(__dict_Enum_772)(_789.value0));
            };
            throw new Error("Failed pattern match");
        }, maybeToEnum(__dict_Enum_772)(cardinality(__dict_Enum_772)));
    };
    var enumTuple = function (__dict_Enum_773) {
        return function (__dict_Enum_774) {
            return new Enum(function () {
                return Data_Tuple.ordTuple(__dict_Enum_773["__superclass_Prelude.Ord_0"]())(__dict_Enum_774["__superclass_Prelude.Ord_0"]());
            }, tupleCardinality(__dict_Enum_773)(__dict_Enum_774)(cardinality(__dict_Enum_773))(cardinality(__dict_Enum_774)), new Data_Tuple.Tuple(firstEnum(__dict_Enum_773), firstEnum(__dict_Enum_774)), tupleFromEnum(__dict_Enum_773)(__dict_Enum_774)(cardinality(__dict_Enum_774)), new Data_Tuple.Tuple(lastEnum(__dict_Enum_773), lastEnum(__dict_Enum_774)), function (_793) {
                return Data_Maybe.maybe(Prelude["<$>"](Data_Maybe.functorMaybe)(Prelude.flip(Data_Tuple.Tuple.create)(firstEnum(__dict_Enum_774)))(pred(__dict_Enum_773)(_793.value0)))(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Maybe.Just.create)(Data_Tuple.Tuple.create(_793.value0)))(pred(__dict_Enum_774)(_793.value1));
            }, function (_792) {
                return Data_Maybe.maybe(Prelude["<$>"](Data_Maybe.functorMaybe)(Prelude.flip(Data_Tuple.Tuple.create)(firstEnum(__dict_Enum_774)))(succ(__dict_Enum_773)(_792.value0)))(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Maybe.Just.create)(Data_Tuple.Tuple.create(_792.value0)))(succ(__dict_Enum_774)(_792.value1));
            }, tupleToEnum(__dict_Enum_773)(__dict_Enum_774)(cardinality(__dict_Enum_774)));
        };
    };
    var booleanSucc = function (_783) {
        if (!_783) {
            return new Data_Maybe.Just(true);
        };
        return Data_Maybe.Nothing.value;
    };
    var booleanPred = function (_784) {
        if (_784) {
            return new Data_Maybe.Just(false);
        };
        return Data_Maybe.Nothing.value;
    };
    var booleanFirstEnum = false;
    var enumBoolean = new Enum(function () {
        return Prelude.ordBoolean;
    }, 2, booleanFirstEnum, defaultFromEnum(booleanPred), true, booleanPred, booleanSucc, defaultToEnum(booleanSucc)(booleanFirstEnum));
    return {
        Cardinality: Cardinality, 
        Enum: Enum, 
        enumFromThenTo: enumFromThenTo, 
        enumFromTo: enumFromTo, 
        intStepFromTo: intStepFromTo, 
        intFromTo: intFromTo, 
        defaultFromEnum: defaultFromEnum, 
        defaultToEnum: defaultToEnum, 
        defaultPred: defaultPred, 
        defaultSucc: defaultSucc, 
        toEnum: toEnum, 
        succ: succ, 
        runCardinality: runCardinality, 
        pred: pred, 
        lastEnum: lastEnum, 
        fromEnum: fromEnum, 
        firstEnum: firstEnum, 
        cardinality: cardinality, 
        enumChar: enumChar, 
        enumMaybe: enumMaybe, 
        enumBoolean: enumBoolean, 
        enumTuple: enumTuple, 
        enumEither: enumEither
    };
})();
var PS = PS || {};
PS.Data_Date = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Enum = PS.Data_Enum;
    var Global = PS.Global;
    var Data_Maybe_Unsafe = PS.Data_Maybe_Unsafe;
    var Data_Function = PS.Data_Function;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Data_Maybe = PS.Data_Maybe;
    function jsDateMethod(method) {   return function(date) {     return date[method]();   }; };
    function jsDateConstructor(x) {   return new Date(x); };
    function strictJsDate(Just, Nothing, s) {
    var epoch = Date.parse(s);
    if (isNaN(epoch)) return Nothing;
    var date = new Date(epoch);
    var s2 = date.toISOString();
    var idx = s2.indexOf(s);
    if (idx < 0) return Nothing;
    else return Just(date);
  };
    function jsDateFromRecord(r) {  return new Date(r.year, r.month, r.day, r.hours, r.minutes, r.seconds, r.milliseconds); };
    
  function nowImpl(f) {
    return function(){
      return f(new Date()); 
    };    
  }
  ;
    var January = (function () {
        function January() {

        };
        January.value = new January();
        return January;
    })();
    var February = (function () {
        function February() {

        };
        February.value = new February();
        return February;
    })();
    var March = (function () {
        function March() {

        };
        March.value = new March();
        return March;
    })();
    var April = (function () {
        function April() {

        };
        April.value = new April();
        return April;
    })();
    var May = (function () {
        function May() {

        };
        May.value = new May();
        return May;
    })();
    var June = (function () {
        function June() {

        };
        June.value = new June();
        return June;
    })();
    var July = (function () {
        function July() {

        };
        July.value = new July();
        return July;
    })();
    var August = (function () {
        function August() {

        };
        August.value = new August();
        return August;
    })();
    var September = (function () {
        function September() {

        };
        September.value = new September();
        return September;
    })();
    var October = (function () {
        function October() {

        };
        October.value = new October();
        return October;
    })();
    var November = (function () {
        function November() {

        };
        November.value = new November();
        return November;
    })();
    var December = (function () {
        function December() {

        };
        December.value = new December();
        return December;
    })();
    var Sunday = (function () {
        function Sunday() {

        };
        Sunday.value = new Sunday();
        return Sunday;
    })();
    var Monday = (function () {
        function Monday() {

        };
        Monday.value = new Monday();
        return Monday;
    })();
    var Tuesday = (function () {
        function Tuesday() {

        };
        Tuesday.value = new Tuesday();
        return Tuesday;
    })();
    var Wednesday = (function () {
        function Wednesday() {

        };
        Wednesday.value = new Wednesday();
        return Wednesday;
    })();
    var Thursday = (function () {
        function Thursday() {

        };
        Thursday.value = new Thursday();
        return Thursday;
    })();
    var Friday = (function () {
        function Friday() {

        };
        Friday.value = new Friday();
        return Friday;
    })();
    var Saturday = (function () {
        function Saturday() {

        };
        Saturday.value = new Saturday();
        return Saturday;
    })();
    var DateTime = (function () {
        function DateTime(value0) {
            this.value0 = value0;
        };
        DateTime.create = function (value0) {
            return new DateTime(value0);
        };
        return DateTime;
    })();
    var toJSDate = function (_800) {
        return _800.value0;
    };
    var showMonth = new Prelude.Show(function (_805) {
        if (_805 instanceof January) {
            return "January";
        };
        if (_805 instanceof February) {
            return "February";
        };
        if (_805 instanceof March) {
            return "March";
        };
        if (_805 instanceof April) {
            return "April";
        };
        if (_805 instanceof May) {
            return "May";
        };
        if (_805 instanceof June) {
            return "June";
        };
        if (_805 instanceof July) {
            return "July";
        };
        if (_805 instanceof August) {
            return "August";
        };
        if (_805 instanceof September) {
            return "September";
        };
        if (_805 instanceof October) {
            return "October";
        };
        if (_805 instanceof November) {
            return "November";
        };
        if (_805 instanceof December) {
            return "December";
        };
        throw new Error("Failed pattern match");
    });
    var showDayOfWeek = new Prelude.Show(function (_808) {
        if (_808 instanceof Sunday) {
            return "Sunday";
        };
        if (_808 instanceof Monday) {
            return "Monday";
        };
        if (_808 instanceof Tuesday) {
            return "Tuesday";
        };
        if (_808 instanceof Wednesday) {
            return "Wednesday";
        };
        if (_808 instanceof Thursday) {
            return "Thursday";
        };
        if (_808 instanceof Friday) {
            return "Friday";
        };
        if (_808 instanceof Saturday) {
            return "Saturday";
        };
        throw new Error("Failed pattern match");
    });
    var now = nowImpl(DateTime.create);
    var monthToEnum = function (_796) {
        if (_796 === 0) {
            return new Data_Maybe.Just(January.value);
        };
        if (_796 === 1) {
            return new Data_Maybe.Just(February.value);
        };
        if (_796 === 2) {
            return new Data_Maybe.Just(March.value);
        };
        if (_796 === 3) {
            return new Data_Maybe.Just(April.value);
        };
        if (_796 === 4) {
            return new Data_Maybe.Just(May.value);
        };
        if (_796 === 5) {
            return new Data_Maybe.Just(June.value);
        };
        if (_796 === 6) {
            return new Data_Maybe.Just(July.value);
        };
        if (_796 === 7) {
            return new Data_Maybe.Just(August.value);
        };
        if (_796 === 8) {
            return new Data_Maybe.Just(September.value);
        };
        if (_796 === 9) {
            return new Data_Maybe.Just(October.value);
        };
        if (_796 === 10) {
            return new Data_Maybe.Just(November.value);
        };
        if (_796 === 11) {
            return new Data_Maybe.Just(December.value);
        };
        return Data_Maybe.Nothing.value;
    };
    var monthFromEnum = function (_797) {
        if (_797 instanceof January) {
            return 0;
        };
        if (_797 instanceof February) {
            return 1;
        };
        if (_797 instanceof March) {
            return 2;
        };
        if (_797 instanceof April) {
            return 3;
        };
        if (_797 instanceof May) {
            return 4;
        };
        if (_797 instanceof June) {
            return 5;
        };
        if (_797 instanceof July) {
            return 6;
        };
        if (_797 instanceof August) {
            return 7;
        };
        if (_797 instanceof September) {
            return 8;
        };
        if (_797 instanceof October) {
            return 9;
        };
        if (_797 instanceof November) {
            return 10;
        };
        if (_797 instanceof December) {
            return 11;
        };
        throw new Error("Failed pattern match");
    };
    var liftDate = function (_801) {
        return function (_802) {
            return _801(_802.value0);
        };
    };
    var millisecond = liftDate(jsDateMethod("getMilliseconds"));
    var millisecondUTC = liftDate(jsDateMethod("getUTCMilliseconds"));
    var minute = liftDate(jsDateMethod("getMinutes"));
    var minuteUTC = liftDate(jsDateMethod("getUTCMinutes"));
    var second = liftDate(jsDateMethod("getSeconds"));
    var secondUTC = liftDate(jsDateMethod("getUTCSeconds"));
    var showDate = new Prelude.Show(liftDate(jsDateMethod("toString")));
    var timezoneOffset = liftDate(jsDateMethod("getTimezoneOffset"));
    var toEpochMilliseconds = liftDate(jsDateMethod("getTime"));
    var liftOp = function (op) {
        return function (x) {
            return function (y) {
                return op(toEpochMilliseconds(x))(toEpochMilliseconds(y));
            };
        };
    };
    var year = liftDate(jsDateMethod("getFullYear"));
    var yearUTC = liftDate(jsDateMethod("getUTCFullYear"));
    var hourUTC = liftDate(jsDateMethod("getUTCHours"));
    var hour = liftDate(jsDateMethod("getHours"));
    var fromJSDate = function (d) {
        var _3050 = Global.isNaN(jsDateMethod("getTime")(d));
        if (_3050) {
            return Data_Maybe.Nothing.value;
        };
        if (!_3050) {
            return Data_Maybe.Just.create(new DateTime(d));
        };
        throw new Error("Failed pattern match");
    };
    var fromString = Prelude["<<<"](Prelude.semigroupoidArr)(fromJSDate)(jsDateConstructor);
    var fromStringStrict = function (s) {
        return Prelude[">>="](Data_Maybe.bindMaybe)(strictJsDate(Data_Maybe.Just.create, Data_Maybe.Nothing.value, s))(fromJSDate);
    };
    var fromEpochMilliseconds = Prelude["<<<"](Prelude.semigroupoidArr)(fromJSDate)(jsDateConstructor);
    var eqMonth = new Prelude.Eq(function (a) {
        return function (b) {
            return !Prelude["=="](eqMonth)(a)(b);
        };
    }, function (_803) {
        return function (_804) {
            if (_803 instanceof January && _804 instanceof January) {
                return true;
            };
            if (_803 instanceof February && _804 instanceof February) {
                return true;
            };
            if (_803 instanceof March && _804 instanceof March) {
                return true;
            };
            if (_803 instanceof April && _804 instanceof April) {
                return true;
            };
            if (_803 instanceof May && _804 instanceof May) {
                return true;
            };
            if (_803 instanceof June && _804 instanceof June) {
                return true;
            };
            if (_803 instanceof July && _804 instanceof July) {
                return true;
            };
            if (_803 instanceof August && _804 instanceof August) {
                return true;
            };
            if (_803 instanceof September && _804 instanceof September) {
                return true;
            };
            if (_803 instanceof October && _804 instanceof October) {
                return true;
            };
            if (_803 instanceof November && _804 instanceof November) {
                return true;
            };
            if (_803 instanceof December && _804 instanceof December) {
                return true;
            };
            return false;
        };
    });
    var eqDayOfWeek = new Prelude.Eq(function (a) {
        return function (b) {
            return !Prelude["=="](eqDayOfWeek)(a)(b);
        };
    }, function (_806) {
        return function (_807) {
            if (_806 instanceof Sunday && _807 instanceof Sunday) {
                return true;
            };
            if (_806 instanceof Monday && _807 instanceof Monday) {
                return true;
            };
            if (_806 instanceof Tuesday && _807 instanceof Tuesday) {
                return true;
            };
            if (_806 instanceof Wednesday && _807 instanceof Wednesday) {
                return true;
            };
            if (_806 instanceof Thursday && _807 instanceof Thursday) {
                return true;
            };
            if (_806 instanceof Friday && _807 instanceof Friday) {
                return true;
            };
            if (_806 instanceof Saturday && _807 instanceof Saturday) {
                return true;
            };
            return false;
        };
    });
    var eqDate = new Prelude.Eq(liftOp(Prelude["/="](Prelude.eqNumber)), liftOp(Prelude["=="](Prelude.eqNumber)));
    var ordDate = new Prelude.Ord(function () {
        return eqDate;
    }, liftOp(Prelude.compare(Prelude.ordNumber)));
    var ordMonth = new Prelude.Ord(function () {
        return eqMonth;
    }, function (a) {
        return function (b) {
            return Prelude.compare(Prelude.ordNumber)(Data_Enum.fromEnum(enumMonth)(a))(Data_Enum.fromEnum(enumMonth)(b));
        };
    });
    var enumMonth = new Data_Enum.Enum(function () {
        return ordMonth;
    }, 12, January.value, monthFromEnum, December.value, Data_Enum.defaultPred(monthToEnum)(monthFromEnum), Data_Enum.defaultSucc(monthToEnum)(monthFromEnum), monthToEnum);
    var month = Prelude["<<<"](Prelude.semigroupoidArr)(Data_Maybe_Unsafe.fromJust)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Enum.toEnum(enumMonth))(liftDate(jsDateMethod("getMonth"))));
    var monthUTC = Prelude["<<<"](Prelude.semigroupoidArr)(Data_Maybe_Unsafe.fromJust)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Enum.toEnum(enumMonth))(liftDate(jsDateMethod("getUTCMonth"))));
    var dayUTC = liftDate(jsDateMethod("getUTCDate"));
    var dayOfWeekToEnum = function (_798) {
        if (_798 === 0) {
            return new Data_Maybe.Just(Sunday.value);
        };
        if (_798 === 1) {
            return new Data_Maybe.Just(Monday.value);
        };
        if (_798 === 2) {
            return new Data_Maybe.Just(Tuesday.value);
        };
        if (_798 === 3) {
            return new Data_Maybe.Just(Wednesday.value);
        };
        if (_798 === 4) {
            return new Data_Maybe.Just(Thursday.value);
        };
        if (_798 === 5) {
            return new Data_Maybe.Just(Friday.value);
        };
        if (_798 === 6) {
            return new Data_Maybe.Just(Saturday.value);
        };
        return Data_Maybe.Nothing.value;
    };
    var dayOfWeekFromEnum = function (_799) {
        if (_799 instanceof Sunday) {
            return 0;
        };
        if (_799 instanceof Monday) {
            return 1;
        };
        if (_799 instanceof Tuesday) {
            return 2;
        };
        if (_799 instanceof Wednesday) {
            return 3;
        };
        if (_799 instanceof Thursday) {
            return 4;
        };
        if (_799 instanceof Friday) {
            return 5;
        };
        if (_799 instanceof Saturday) {
            return 6;
        };
        throw new Error("Failed pattern match");
    };
    var ordDayOfWeek = new Prelude.Ord(function () {
        return eqDayOfWeek;
    }, function (a) {
        return function (b) {
            return Prelude.compare(Prelude.ordNumber)(Data_Enum.fromEnum(enumDayOfWeek)(a))(Data_Enum.fromEnum(enumDayOfWeek)(b));
        };
    });
    var enumDayOfWeek = new Data_Enum.Enum(function () {
        return ordDayOfWeek;
    }, 7, Sunday.value, dayOfWeekFromEnum, Saturday.value, Data_Enum.defaultPred(dayOfWeekToEnum)(dayOfWeekFromEnum), Data_Enum.defaultSucc(dayOfWeekToEnum)(dayOfWeekFromEnum), dayOfWeekToEnum);
    var dayOfWeekUTC = Prelude["<<<"](Prelude.semigroupoidArr)(Data_Maybe_Unsafe.fromJust)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Enum.toEnum(enumDayOfWeek))(liftDate(jsDateMethod("getUTCDay"))));
    var dayOfWeek = Prelude["<<<"](Prelude.semigroupoidArr)(Data_Maybe_Unsafe.fromJust)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Enum.toEnum(enumDayOfWeek))(liftDate(jsDateMethod("getDay"))));
    var day = liftDate(jsDateMethod("getDate"));
    var dateTime = function (y) {
        return function (m) {
            return function (d) {
                return function (h) {
                    return function (n) {
                        return function (s) {
                            return function (ms) {
                                return fromJSDate(jsDateFromRecord({
                                    year: y, 
                                    month: Data_Enum.fromEnum(enumMonth)(m), 
                                    day: d, 
                                    hours: h, 
                                    minutes: n, 
                                    seconds: s, 
                                    milliseconds: ms
                                }));
                            };
                        };
                    };
                };
            };
        };
    };
    var date = function (y) {
        return function (m) {
            return function (d) {
                return dateTime(y)(m)(d)(0)(0)(0)(0);
            };
        };
    };
    return {
        January: January, 
        February: February, 
        March: March, 
        April: April, 
        May: May, 
        June: June, 
        July: July, 
        August: August, 
        September: September, 
        October: October, 
        November: November, 
        December: December, 
        fromStringStrict: fromStringStrict, 
        fromString: fromString, 
        fromEpochMilliseconds: fromEpochMilliseconds, 
        toEpochMilliseconds: toEpochMilliseconds, 
        timezoneOffset: timezoneOffset, 
        millisecondUTC: millisecondUTC, 
        millisecond: millisecond, 
        secondUTC: secondUTC, 
        second: second, 
        minuteUTC: minuteUTC, 
        minute: minute, 
        hourUTC: hourUTC, 
        hour: hour, 
        dayOfWeekUTC: dayOfWeekUTC, 
        dayOfWeek: dayOfWeek, 
        dayUTC: dayUTC, 
        day: day, 
        monthUTC: monthUTC, 
        month: month, 
        yearUTC: yearUTC, 
        year: year, 
        date: date, 
        dateTime: dateTime, 
        now: now, 
        toJSDate: toJSDate, 
        fromJSDate: fromJSDate, 
        eqDate: eqDate, 
        ordDate: ordDate, 
        eqMonth: eqMonth, 
        ordMonth: ordMonth, 
        enumMonth: enumMonth, 
        showMonth: showMonth, 
        eqDayOfWeek: eqDayOfWeek, 
        ordDayOfWeek: ordDayOfWeek, 
        enumDayOfWeek: enumDayOfWeek, 
        showDayOfWeek: showDayOfWeek, 
        showDate: showDate
    };
})();
var PS = PS || {};
PS.Data_List = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Monoid = PS.Data_Monoid;
    var Data_Traversable = PS.Data_Traversable;
    var Data_Unfoldable = PS.Data_Unfoldable;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Tuple = PS.Data_Tuple;
    var Control_Alt = PS.Control_Alt;
    var Control_Plus = PS.Control_Plus;
    var Control_Alternative = PS.Control_Alternative;
    var Control_MonadPlus = PS.Control_MonadPlus;
    var Nil = (function () {
        function Nil() {

        };
        Nil.value = new Nil();
        return Nil;
    })();
    var Cons = (function () {
        function Cons(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        };
        Cons.create = function (value0) {
            return function (value1) {
                return new Cons(value0, value1);
            };
        };
        return Cons;
    })();
    var $bang = function (__copy__809) {
        return function (__copy__810) {
            var _809 = __copy__809;
            var _810 = __copy__810;
            tco: while (true) {
                if (_809 instanceof Nil) {
                    return Data_Maybe.Nothing.value;
                };
                if (_809 instanceof Cons && _810 === 0) {
                    return new Data_Maybe.Just(_809.value0);
                };
                if (_809 instanceof Cons) {
                    var __tco__809 = _809.value1;
                    var __tco__810 = _810 - 1;
                    _809 = __tco__809;
                    _810 = __tco__810;
                    continue tco;
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var zipWith = function (_825) {
        return function (_826) {
            return function (_827) {
                if (_826 instanceof Nil) {
                    return Nil.value;
                };
                if (_827 instanceof Nil) {
                    return Nil.value;
                };
                if (_826 instanceof Cons && _827 instanceof Cons) {
                    return new Cons(_825(_826.value0)(_827.value0), zipWith(_825)(_826.value1)(_827.value1));
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var unfoldableList = new Data_Unfoldable.Unfoldable(function (f) {
        return function (b) {
            var go = function (_869) {
                if (_869 instanceof Data_Maybe.Nothing) {
                    return Nil.value;
                };
                if (_869 instanceof Data_Maybe.Just) {
                    return new Cons(_869.value0.value0, go(f(_869.value0.value1)));
                };
                throw new Error("Failed pattern match");
            };
            return go(f(b));
        };
    });
    var uncons = function (_822) {
        if (_822 instanceof Nil) {
            return Data_Maybe.Nothing.value;
        };
        if (_822 instanceof Cons) {
            return Data_Maybe.Just.create(new Data_Tuple.Tuple(_822.value0, _822.value1));
        };
        throw new Error("Failed pattern match");
    };
    var toArray = (function () {
        var step = function (_877) {
            if (_877 instanceof Nil) {
                return Data_Maybe.Nothing.value;
            };
            if (_877 instanceof Cons) {
                return new Data_Maybe.Just(new Data_Tuple.Tuple(_877.value0, _877.value1));
            };
            throw new Error("Failed pattern match");
        };
        return Data_Unfoldable.unfoldr(Data_Unfoldable.unfoldableArray)(step);
    })();
    var take = function (_813) {
        return function (_814) {
            if (_813 === 0) {
                return Nil.value;
            };
            if (_814 instanceof Nil) {
                return Nil.value;
            };
            if (_814 instanceof Cons) {
                return new Cons(_814.value0, take(_813 - 1)(_814.value1));
            };
            throw new Error("Failed pattern match");
        };
    };
    var tail = function (_821) {
        if (_821 instanceof Nil) {
            return Data_Maybe.Nothing.value;
        };
        if (_821 instanceof Cons) {
            return new Data_Maybe.Just(_821.value1);
        };
        throw new Error("Failed pattern match");
    };
    var span = function (_829) {
        return function (_830) {
            if (_830 instanceof Cons) {
                if (_829(_830.value0)) {
                    var _3089 = span(_829)(_830.value1);
                    return new Data_Tuple.Tuple(new Cons(_830.value0, _3089.value0), _3089.value1);
                };
                if (Prelude.otherwise) {
                    return new Data_Tuple.Tuple(Nil.value, _830);
                };
            };
            throw new Error("Failed pattern match");
        };
    };
    var singleton = function (a) {
        return new Cons(a, Nil.value);
    };
    var showList = function (__dict_Show_777) {
        return new Prelude.Show(function (_852) {
            if (_852 instanceof Nil) {
                return "Nil";
            };
            if (_852 instanceof Cons) {
                return "Cons (" + (Prelude.show(__dict_Show_777)(_852.value0) + (") (" + (Prelude.show(showList(__dict_Show_777))(_852.value1) + ")")));
            };
            throw new Error("Failed pattern match");
        });
    };
    var semigroupList = new Prelude.Semigroup(function (_857) {
        return function (_858) {
            if (_857 instanceof Nil) {
                return _858;
            };
            if (_857 instanceof Cons) {
                return new Cons(_857.value0, Prelude["<>"](semigroupList)(_857.value1)(_858));
            };
            throw new Error("Failed pattern match");
        };
    });
    var reverse = (function () {
        var go = function (__copy__878) {
            return function (__copy__879) {
                var _878 = __copy__878;
                var _879 = __copy__879;
                tco: while (true) {
                    if (_879 instanceof Nil) {
                        return _878;
                    };
                    if (_879 instanceof Cons) {
                        var __tco__878 = new Cons(_879.value0, _878);
                        var __tco__879 = _879.value1;
                        _878 = __tco__878;
                        _879 = __tco__879;
                        continue tco;
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
        return go(Nil.value);
    })();
    var $$null = function (_828) {
        if (_828 instanceof Nil) {
            return true;
        };
        return false;
    };
    var monoidList = new Data_Monoid.Monoid(function () {
        return semigroupList;
    }, Nil.value);
    var mapMaybe = function (_818) {
        return function (_819) {
            if (_819 instanceof Nil) {
                return Nil.value;
            };
            if (_819 instanceof Cons) {
                var _3108 = _818(_819.value0);
                if (_3108 instanceof Data_Maybe.Nothing) {
                    return mapMaybe(_818)(_819.value1);
                };
                if (_3108 instanceof Data_Maybe.Just) {
                    return new Cons(_3108.value0, mapMaybe(_818)(_819.value1));
                };
                throw new Error("Failed pattern match");
            };
            throw new Error("Failed pattern match");
        };
    };
    var length = function (_815) {
        if (_815 instanceof Nil) {
            return 0;
        };
        if (_815 instanceof Cons) {
            return 1 + length(_815.value1);
        };
        throw new Error("Failed pattern match");
    };
    var last = function (__copy__823) {
        var _823 = __copy__823;
        tco: while (true) {
            if (_823 instanceof Cons && _823.value1 instanceof Nil) {
                return new Data_Maybe.Just(_823.value0);
            };
            if (_823 instanceof Cons) {
                var __tco__823 = _823.value1;
                _823 = __tco__823;
                continue tco;
            };
            return Data_Maybe.Nothing.value;
        };
    };
    var insertBy = function (_833) {
        return function (_834) {
            return function (_835) {
                if (_835 instanceof Nil) {
                    return new Cons(_834, Nil.value);
                };
                if (_835 instanceof Cons) {
                    var _3123 = _833(_834)(_835.value0);
                    if (_3123 instanceof Prelude.GT) {
                        return new Cons(_835.value0, insertBy(_833)(_834)(_835.value1));
                    };
                    return new Cons(_834, _835);
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var insertAt = function (_836) {
        return function (_837) {
            return function (_838) {
                if (_836 === 0) {
                    return new Data_Maybe.Just(new Cons(_837, _838));
                };
                if (_838 instanceof Cons) {
                    return Prelude["<$>"](Data_Maybe.functorMaybe)(Cons.create(_838.value0))(insertAt(_836 - 1)(_837)(_838.value1));
                };
                return Data_Maybe.Nothing.value;
            };
        };
    };
    var insert = function (__dict_Ord_779) {
        return insertBy(Prelude.compare(__dict_Ord_779));
    };
    var init = function (_824) {
        if (_824 instanceof Cons && _824.value1 instanceof Nil) {
            return new Data_Maybe.Just(Nil.value);
        };
        if (_824 instanceof Cons) {
            return Prelude["<$>"](Data_Maybe.functorMaybe)(Cons.create(_824.value0))(init(_824.value1));
        };
        return Data_Maybe.Nothing.value;
    };
    var head = function (_820) {
        if (_820 instanceof Nil) {
            return Data_Maybe.Nothing.value;
        };
        if (_820 instanceof Cons) {
            return new Data_Maybe.Just(_820.value0);
        };
        throw new Error("Failed pattern match");
    };
    var groupBy = function (_831) {
        return function (_832) {
            if (_832 instanceof Nil) {
                return Nil.value;
            };
            if (_832 instanceof Cons) {
                var _3141 = span(_831(_832.value0))(_832.value1);
                return new Cons(new Cons(_832.value0, _3141.value0), groupBy(_831)(_3141.value1));
            };
            throw new Error("Failed pattern match");
        };
    };
    var group = function (__dict_Eq_780) {
        return groupBy(Prelude["=="](__dict_Eq_780));
    };
    var functorList = new Prelude.Functor(function (_859) {
        return function (_860) {
            if (_860 instanceof Nil) {
                return Nil.value;
            };
            if (_860 instanceof Cons) {
                return new Cons(_859(_860.value0), Prelude["<$>"](functorList)(_859)(_860.value1));
            };
            throw new Error("Failed pattern match");
        };
    });
    var fromArray = Data_Foldable.foldr(Data_Foldable.foldableArray)(Cons.create)(Nil.value);
    var foldableList = new Data_Foldable.Foldable(function (__dict_Monoid_781) {
        return function (_867) {
            return function (_868) {
                if (_868 instanceof Nil) {
                    return Data_Monoid.mempty(__dict_Monoid_781);
                };
                if (_868 instanceof Cons) {
                    return Prelude["<>"](__dict_Monoid_781["__superclass_Prelude.Semigroup_0"]())(_867(_868.value0))(Data_Foldable.foldMap(foldableList)(__dict_Monoid_781)(_867)(_868.value1));
                };
                throw new Error("Failed pattern match");
            };
        };
    }, function (_864) {
        return function (_865) {
            return function (_866) {
                if (_866 instanceof Nil) {
                    return _865;
                };
                if (_866 instanceof Cons) {
                    return Data_Foldable.foldl(foldableList)(_864)(_864(_865)(_866.value0))(_866.value1);
                };
                throw new Error("Failed pattern match");
            };
        };
    }, function (_861) {
        return function (_862) {
            return function (_863) {
                if (_863 instanceof Nil) {
                    return _862;
                };
                if (_863 instanceof Cons) {
                    return _861(_863.value0)(Data_Foldable.foldr(foldableList)(_861)(_862)(_863.value1));
                };
                throw new Error("Failed pattern match");
            };
        };
    });
    var traversableList = new Data_Traversable.Traversable(function () {
        return foldableList;
    }, function () {
        return functorList;
    }, function (__dict_Applicative_776) {
        return function (_872) {
            if (_872 instanceof Nil) {
                return Prelude.pure(__dict_Applicative_776)(Nil.value);
            };
            if (_872 instanceof Cons) {
                return Prelude["<*>"](__dict_Applicative_776["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((__dict_Applicative_776["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Cons.create)(_872.value0))(Data_Traversable.sequence(traversableList)(__dict_Applicative_776)(_872.value1));
            };
            throw new Error("Failed pattern match");
        };
    }, function (__dict_Applicative_775) {
        return function (_870) {
            return function (_871) {
                if (_871 instanceof Nil) {
                    return Prelude.pure(__dict_Applicative_775)(Nil.value);
                };
                if (_871 instanceof Cons) {
                    return Prelude["<*>"](__dict_Applicative_775["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((__dict_Applicative_775["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Cons.create)(_870(_871.value0)))(Data_Traversable.traverse(traversableList)(__dict_Applicative_775)(_870)(_871.value1));
                };
                throw new Error("Failed pattern match");
            };
        };
    });
    var filter = function (_816) {
        return function (_817) {
            if (_817 instanceof Nil) {
                return Nil.value;
            };
            if (_817 instanceof Cons && _816(_817.value0)) {
                return new Cons(_817.value0, filter(_816)(_817.value1));
            };
            if (_817 instanceof Cons) {
                return filter(_816)(_817.value1);
            };
            throw new Error("Failed pattern match");
        };
    };
    var intersectBy = function (_849) {
        return function (_850) {
            return function (_851) {
                if (_850 instanceof Nil) {
                    return Nil.value;
                };
                if (_851 instanceof Nil) {
                    return Nil.value;
                };
                return filter(function (x) {
                    return Data_Foldable.any(foldableList)(_849(x))(_851);
                })(_850);
            };
        };
    };
    var intersect = function (__dict_Eq_782) {
        return intersectBy(Prelude["=="](__dict_Eq_782));
    };
    var nubBy = function (_847) {
        return function (_848) {
            if (_848 instanceof Nil) {
                return Nil.value;
            };
            if (_848 instanceof Cons) {
                return new Cons(_848.value0, nubBy(_847)(filter(function (y) {
                    return !_847(_848.value0)(y);
                })(_848.value1)));
            };
            throw new Error("Failed pattern match");
        };
    };
    var nub = function (__dict_Eq_783) {
        return nubBy(Prelude["=="](__dict_Eq_783));
    };
    var eqList = function (__dict_Eq_784) {
        return new Prelude.Eq(function (xs) {
            return function (ys) {
                return !Prelude["=="](eqList(__dict_Eq_784))(xs)(ys);
            };
        }, function (_853) {
            return function (_854) {
                if (_853 instanceof Nil && _854 instanceof Nil) {
                    return true;
                };
                if (_853 instanceof Cons && _854 instanceof Cons) {
                    return Prelude["=="](__dict_Eq_784)(_853.value0)(_854.value0) && Prelude["=="](eqList(__dict_Eq_784))(_853.value1)(_854.value1);
                };
                return false;
            };
        });
    };
    var ordList = function (__dict_Ord_778) {
        return new Prelude.Ord(function () {
            return eqList(__dict_Ord_778["__superclass_Prelude.Eq_0"]());
        }, function (_855) {
            return function (_856) {
                if (_855 instanceof Nil && _856 instanceof Nil) {
                    return Prelude.EQ.value;
                };
                if (_855 instanceof Nil) {
                    return Prelude.LT.value;
                };
                if (_856 instanceof Nil) {
                    return Prelude.GT.value;
                };
                if (_855 instanceof Cons && _856 instanceof Cons) {
                    var _3192 = Prelude.compare(__dict_Ord_778)(_855.value0)(_856.value0);
                    if (_3192 instanceof Prelude.EQ) {
                        return Prelude.compare(ordList(__dict_Ord_778))(_855.value1)(_856.value1);
                    };
                    return _3192;
                };
                throw new Error("Failed pattern match");
            };
        });
    };
    var drop = function (__copy__811) {
        return function (__copy__812) {
            var _811 = __copy__811;
            var _812 = __copy__812;
            tco: while (true) {
                if (_811 === 0) {
                    return _812;
                };
                if (_812 instanceof Nil) {
                    return Nil.value;
                };
                if (_812 instanceof Cons) {
                    var __tco__811 = _811 - 1;
                    var __tco__812 = _812.value1;
                    _811 = __tco__811;
                    _812 = __tco__812;
                    continue tco;
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var deleteBy = function (_839) {
        return function (_840) {
            return function (_841) {
                if (_841 instanceof Nil) {
                    return Nil.value;
                };
                if (_841 instanceof Cons && _839(_840)(_841.value0)) {
                    return _841.value1;
                };
                if (_841 instanceof Cons) {
                    return new Cons(_841.value0, deleteBy(_839)(_840)(_841.value1));
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var unionBy = function (eq) {
        return function (xs) {
            return function (ys) {
                return Prelude["<>"](semigroupList)(xs)(Data_Foldable.foldl(foldableList)(Prelude.flip(deleteBy(eq)))(nubBy(eq)(ys))(xs));
            };
        };
    };
    var union = function (__dict_Eq_785) {
        return unionBy(Prelude["=="](__dict_Eq_785));
    };
    var deleteAt = function (_842) {
        return function (_843) {
            if (_842 === 0 && _843 instanceof Cons) {
                return new Data_Maybe.Just(_843.value1);
            };
            if (_843 instanceof Cons) {
                return Prelude["<$>"](Data_Maybe.functorMaybe)(Cons.create(_843.value0))(deleteAt(_842 - 1)(_843.value1));
            };
            return Data_Maybe.Nothing.value;
        };
    };
    var $$delete = function (__dict_Eq_786) {
        return deleteBy(Prelude["=="](__dict_Eq_786));
    };
    var $bslash$bslash = function (__dict_Eq_787) {
        return Data_Foldable.foldl(foldableList)(Prelude.flip($$delete(__dict_Eq_787)));
    };
    var catMaybes = mapMaybe(Prelude.id(Prelude.categoryArr));
    var applyList = new Prelude.Apply(function (_873) {
        return function (_874) {
            if (_873 instanceof Nil) {
                return Nil.value;
            };
            if (_873 instanceof Cons) {
                return Prelude["<>"](semigroupList)(Prelude["<$>"](functorList)(_873.value0)(_874))(Prelude["<*>"](applyList)(_873.value1)(_874));
            };
            throw new Error("Failed pattern match");
        };
    }, function () {
        return functorList;
    });
    var bindList = new Prelude.Bind(function (_875) {
        return function (_876) {
            if (_875 instanceof Nil) {
                return Nil.value;
            };
            if (_875 instanceof Cons) {
                return Prelude["<>"](semigroupList)(_876(_875.value0))(Prelude[">>="](bindList)(_875.value1)(_876));
            };
            throw new Error("Failed pattern match");
        };
    }, function () {
        return applyList;
    });
    var applicativeList = new Prelude.Applicative(function () {
        return applyList;
    }, function (a) {
        return new Cons(a, Nil.value);
    });
    var monadList = new Prelude.Monad(function () {
        return applicativeList;
    }, function () {
        return bindList;
    });
    var alterAt = function (_844) {
        return function (_845) {
            return function (_846) {
                if (_844 === 0 && _846 instanceof Cons) {
                    return Data_Maybe.Just.create((function () {
                        var _3225 = _845(_846.value0);
                        if (_3225 instanceof Data_Maybe.Nothing) {
                            return _846.value1;
                        };
                        if (_3225 instanceof Data_Maybe.Just) {
                            return new Cons(_3225.value0, _846.value1);
                        };
                        throw new Error("Failed pattern match");
                    })());
                };
                if (_846 instanceof Cons) {
                    return Prelude["<$>"](Data_Maybe.functorMaybe)(Cons.create(_846.value0))(alterAt(_844 - 1)(_845)(_846.value1));
                };
                return Data_Maybe.Nothing.value;
            };
        };
    };
    var altList = new Control_Alt.Alt(Prelude["<>"](semigroupList), function () {
        return functorList;
    });
    var plusList = new Control_Plus.Plus(function () {
        return altList;
    }, Nil.value);
    var alternativeList = new Control_Alternative.Alternative(function () {
        return plusList;
    }, function () {
        return applicativeList;
    });
    var monadPlusList = new Control_MonadPlus.MonadPlus(function () {
        return alternativeList;
    }, function () {
        return monadList;
    });
    return {
        Nil: Nil, 
        Cons: Cons, 
        unionBy: unionBy, 
        union: union, 
        uncons: uncons, 
        intersectBy: intersectBy, 
        intersect: intersect, 
        nubBy: nubBy, 
        nub: nub, 
        reverse: reverse, 
        alterAt: alterAt, 
        deleteAt: deleteAt, 
        deleteBy: deleteBy, 
        "delete": $$delete, 
        insertAt: insertAt, 
        insertBy: insertBy, 
        insert: insert, 
        "\\\\": $bslash$bslash, 
        groupBy: groupBy, 
        group: group, 
        span: span, 
        "null": $$null, 
        zipWith: zipWith, 
        init: init, 
        last: last, 
        tail: tail, 
        head: head, 
        catMaybes: catMaybes, 
        mapMaybe: mapMaybe, 
        filter: filter, 
        length: length, 
        take: take, 
        drop: drop, 
        "!": $bang, 
        toArray: toArray, 
        fromArray: fromArray, 
        showList: showList, 
        eqList: eqList, 
        ordList: ordList, 
        semigroupList: semigroupList, 
        monoidList: monoidList, 
        functorList: functorList, 
        foldableList: foldableList, 
        unfoldableList: unfoldableList, 
        traversableList: traversableList, 
        applyList: applyList, 
        applicativeList: applicativeList, 
        bindList: bindList, 
        monadList: monadList, 
        altList: altList, 
        plusList: plusList, 
        alternativeList: alternativeList, 
        monadPlusList: monadPlusList
    };
})();
var PS = PS || {};
PS.Data_List_Unsafe = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_List = PS.Data_List;
    var tail = function (_881) {
        if (_881 instanceof Data_List.Cons) {
            return _881.value1;
        };
        throw new Error("Failed pattern match");
    };
    var last = function (__copy__882) {
        var _882 = __copy__882;
        tco: while (true) {
            if (_882 instanceof Data_List.Cons && _882.value1 instanceof Data_List.Nil) {
                return _882.value0;
            };
            if (_882 instanceof Data_List.Cons) {
                var __tco__882 = _882.value1;
                _882 = __tco__882;
                continue tco;
            };
            throw new Error("Failed pattern match");
        };
    };
    var init = function (_883) {
        if (_883 instanceof Data_List.Cons && _883.value1 instanceof Data_List.Nil) {
            return Data_List.Nil.value;
        };
        if (_883 instanceof Data_List.Cons) {
            return new Data_List.Cons(_883.value0, init(_883.value1));
        };
        throw new Error("Failed pattern match");
    };
    var head = function (_880) {
        if (_880 instanceof Data_List.Cons) {
            return _880.value0;
        };
        throw new Error("Failed pattern match");
    };
    return {
        init: init, 
        last: last, 
        tail: tail, 
        head: head
    };
})();
var PS = PS || {};
PS.Data_List_Lazy = (function () {
    "use strict";
    var Control_Monad_ListT = PS.Control_Monad_ListT;
    var Prelude = PS.Prelude;
    var Data_Lazy = PS.Data_Lazy;
    var Data_Monoid = PS.Data_Monoid;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Unfoldable = PS.Data_Unfoldable;
    var Data_Traversable = PS.Data_Traversable;
    var LazyList = function (x) {
        return x;
    };
    var zipWith$prime = Control_Monad_ListT["zipWith'"];
    var zipWith = Control_Monad_ListT.zipWith;
    var wrapLazy = Control_Monad_ListT.wrapLazy;
    var wrapEffect = Control_Monad_ListT.wrapEffect;
    var unfold = Control_Monad_ListT.unfold;
    var uncons = Control_Monad_ListT.uncons;
    var unLazyList = function (_884) {
        return _884;
    };
    var toArray = Control_Monad_ListT.toArray;
    var takeWhile = Control_Monad_ListT.takeWhile;
    var take = Control_Monad_ListT.take;
    var tail = Control_Monad_ListT.tail;
    var singleton = Control_Monad_ListT.singleton;
    var repeat = Control_Monad_ListT.repeat;
    var prepend$prime = Control_Monad_ListT["prepend'"];
    var prepend = Control_Monad_ListT.prepend;
    var nil = Control_Monad_ListT.nil;
    var mapMaybe = Control_Monad_ListT.mapMaybe;
    var iterate = Control_Monad_ListT.iterate;
    var head = Control_Monad_ListT.head;
    var fromEffect = Control_Monad_ListT.fromEffect;
    var fromArray = Control_Monad_ListT.fromArray;
    var foldableLazyList = new Data_Foldable.Foldable(function (__dict_Monoid_788) {
        return function (_891) {
            return function (_892) {
                var foldMap$prime = function (l_1) {
                    var g = function (_895) {
                        if (_895 instanceof Data_Maybe.Nothing) {
                            return Data_Monoid.mempty(__dict_Monoid_788);
                        };
                        if (_895 instanceof Data_Maybe.Just) {
                            return Prelude["<>"](__dict_Monoid_788["__superclass_Prelude.Semigroup_0"]())(_891(_895.value0.value0))(foldMap$prime(_895.value0.value1));
                        };
                        throw new Error("Failed pattern match");
                    };
                    return g(Data_Lazy.force(uncons(Data_Lazy.monadLazy)(l_1)));
                };
                return foldMap$prime(_892);
            };
        };
    }, function (_888) {
        return function (_889) {
            return function (_890) {
                var foldl$prime = function (b_1) {
                    return function (l_1) {
                        var g = function (_894) {
                            if (_894 instanceof Data_Maybe.Nothing) {
                                return b_1;
                            };
                            if (_894 instanceof Data_Maybe.Just) {
                                return foldl$prime(_888(b_1)(_894.value0.value0))(_894.value0.value1);
                            };
                            throw new Error("Failed pattern match");
                        };
                        return g(Data_Lazy.force(uncons(Data_Lazy.monadLazy)(l_1)));
                    };
                };
                return foldl$prime(_889)(_890);
            };
        };
    }, function (_885) {
        return function (_886) {
            return function (_887) {
                var foldr$prime = function (b_1) {
                    return function (l_1) {
                        var g = function (_893) {
                            if (_893 instanceof Data_Maybe.Nothing) {
                                return Prelude.pure(Data_Lazy.applicativeLazy)(b_1);
                            };
                            if (_893 instanceof Data_Maybe.Just) {
                                return Prelude["<$>"](Data_Lazy.functorLazy)(_885(_893.value0.value0))(foldr$prime(b_1)(_893.value0.value1));
                            };
                            throw new Error("Failed pattern match");
                        };
                        return Prelude[">>="](Data_Lazy.bindLazy)(uncons(Data_Lazy.monadLazy)(l_1))(g);
                    };
                };
                return Data_Lazy.force(foldr$prime(_886)(_887));
            };
        };
    });
    var filter = Control_Monad_ListT.filter;
    var dropWhile = Control_Monad_ListT.dropWhile;
    var drop = Control_Monad_ListT.drop;
    var cons$prime = Control_Monad_ListT["cons'"];
    var catMaybes = Control_Monad_ListT.catMaybes;
    return {
        LazyList: LazyList, 
        "zipWith'": zipWith$prime, 
        zipWith: zipWith, 
        wrapLazy: wrapLazy, 
        wrapEffect: wrapEffect, 
        unLazyList: unLazyList, 
        unfold: unfold, 
        uncons: uncons, 
        toArray: toArray, 
        takeWhile: takeWhile, 
        take: take, 
        tail: tail, 
        singleton: singleton, 
        repeat: repeat, 
        "prepend'": prepend$prime, 
        prepend: prepend, 
        nil: nil, 
        mapMaybe: mapMaybe, 
        iterate: iterate, 
        head: head, 
        fromEffect: fromEffect, 
        fromArray: fromArray, 
        filter: filter, 
        dropWhile: dropWhile, 
        drop: drop, 
        "cons'": cons$prime, 
        catMaybes: catMaybes, 
        foldableLazyList: foldableLazyList
    };
})();
var PS = PS || {};
PS.Optic_Fold = (function () {
    "use strict";
    var Data_Profunctor = PS.Data_Profunctor;
    var Data_Either = PS.Data_Either;
    var Prelude = PS.Prelude;
    var Data_Profunctor_Choice = PS.Data_Profunctor_Choice;
    var Data_Const = PS.Data_Const;
    var Data_Monoid_Endo = PS.Data_Monoid_Endo;
    var Data_Monoid_Dual = PS.Data_Monoid_Dual;
    var Data_Monoid_Any = PS.Data_Monoid_Any;
    var Data_Monoid_All = PS.Data_Monoid_All;
    var Data_Monoid_First = PS.Data_Monoid_First;
    var Data_Maybe = PS.Data_Maybe;
    var Optic_Types = PS.Optic_Types;
    var Optic_Types_Extended = PS.Optic_Types_Extended;
    var foldOf = function (asa) {
        return function (s) {
            return Data_Const.getConst(asa(Data_Const.Const)(s));
        };
    };
    var foldMapOf = function (__dict_Profunctor_789) {
        return function (prsa) {
            return function (par) {
                return Data_Profunctor.rmap(Data_Profunctor.profunctorArr)(Data_Const.getConst)(prsa(Data_Profunctor.rmap(__dict_Profunctor_789)(Data_Const.Const)(par)));
            };
        };
    };
    var foldlOf = function (pErsa) {
        return function (par2r) {
            return function (r) {
                return Data_Profunctor.rmap(Data_Profunctor.profunctorArr)(Data_Profunctor.lmap(Data_Profunctor.profunctorArr)(Data_Monoid_Dual.runDual)(Prelude.flip(Data_Monoid_Endo.runEndo)(r)))(foldMapOf(Data_Profunctor.profunctorArr)(pErsa)(Data_Profunctor.rmap(Data_Profunctor.profunctorArr)(Data_Profunctor.rmap(Data_Profunctor.profunctorArr)(Data_Monoid_Dual.Dual)(Data_Monoid_Endo.Endo))(Prelude.flip(par2r))));
            };
        };
    };
    var foldrOf = function (__dict_Profunctor_790) {
        return function (pErsa) {
            return function (par2r) {
                return function (r) {
                    return Data_Profunctor.rmap(Data_Profunctor.profunctorArr)(Prelude.flip(Data_Monoid_Endo.runEndo)(r))(foldMapOf(__dict_Profunctor_790)(pErsa)(Data_Profunctor.rmap(__dict_Profunctor_790)(Data_Monoid_Endo.Endo)(par2r)));
                };
            };
        };
    };
    var toListOf = function (easa) {
        return foldrOf(Data_Profunctor.profunctorArr)(easa)(Prelude[":"])([  ]);
    };
    var $up$dot$dot = Prelude.flip(toListOf);
    var has = function (asa) {
        return function (s) {
            return Data_Monoid_Any.runAny(foldMapOf(Data_Profunctor.profunctorArr)(asa)(Prelude["const"](true))(s));
        };
    };
    var hasn$primet = function (asa) {
        return function (s) {
            return Data_Monoid_All.runAll(foldMapOf(Data_Profunctor.profunctorArr)(asa)(Prelude["const"](false))(s));
        };
    };
    var $up$qmark = function (s) {
        return function (fasa) {
            return Data_Monoid_First.runFirst(foldMapOf(Data_Profunctor.profunctorArr)(fasa)(Data_Profunctor.rmap(Data_Profunctor.profunctorArr)(Data_Monoid_First.First)(Data_Maybe.Just.create))(s));
        };
    };
    var filtered = function (__dict_Applicative_791) {
        return function (__dict_Choice_792) {
            return function (p) {
                return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Profunctor.dimap(__dict_Choice_792["__superclass_Data.Profunctor.Profunctor_0"]())(function (x) {
                    var _3268 = p(x);
                    if (_3268) {
                        return new Data_Either.Right(x);
                    };
                    if (!_3268) {
                        return new Data_Either.Left(x);
                    };
                    throw new Error("Failed pattern match");
                })(Data_Either.either(Prelude.pure(__dict_Applicative_791))(Prelude.id(Prelude.categoryArr))))(Data_Profunctor_Choice.right(__dict_Choice_792));
            };
        };
    };
    return {
        toListOf: toListOf, 
        "hasn't": hasn$primet, 
        has: has, 
        foldrOf: foldrOf, 
        foldOf: foldOf, 
        foldMapOf: foldMapOf, 
        foldlOf: foldlOf, 
        filtered: filtered, 
        "^?": $up$qmark, 
        "^..": $up$dot$dot
    };
})();
var PS = PS || {};
PS.Optic_Index_Class = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Identity = PS.Data_Identity;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Map = PS.Data_Map;
    var Data_Set = PS.Data_Set;
    var Data_StrMap = PS.Data_StrMap;
    var IndexKey = {};
    var IndexValue = {};
    var indexValueStrMap = IndexValue;
    var indexValueSet = IndexValue;
    var indexValueMaybe = IndexValue;
    var indexValueMap = IndexValue;
    var indexValueIdentity = IndexValue;
    var indexValueArray = IndexValue;
    var indexValueArr = IndexValue;
    var indexKeyStrMap = IndexKey;
    var indexKeySet = IndexKey;
    var indexKeyMaybe = IndexKey;
    var indexKeyMap = IndexKey;
    var indexKeyIdentity = IndexKey;
    var indexKeyArray = IndexKey;
    var indexKeyArr = IndexKey;
    return {
        IndexValue: IndexValue, 
        IndexKey: IndexKey, 
        indexKeyArr: indexKeyArr, 
        indexKeyArray: indexKeyArray, 
        indexKeyIdentity: indexKeyIdentity, 
        indexKeyMap: indexKeyMap, 
        indexKeyMaybe: indexKeyMaybe, 
        indexKeySet: indexKeySet, 
        indexKeyStrMap: indexKeyStrMap, 
        indexValueArr: indexValueArr, 
        indexValueArray: indexValueArray, 
        indexValueIdentity: indexValueIdentity, 
        indexValueMap: indexValueMap, 
        indexValueMaybe: indexValueMaybe, 
        indexValueSet: indexValueSet, 
        indexValueStrMap: indexValueStrMap
    };
})();
var PS = PS || {};
PS.Optic_Contains = (function () {
    "use strict";
    var Data_Set = PS.Data_Set;
    var Prelude = PS.Prelude;
    var Optic_Index_Class = PS.Optic_Index_Class;
    var Optic_Index_Types = PS.Optic_Index_Types;
    var Contains = function (__superclass_Optic$dotIndex$dotClass$dotIndexKey_0, contains) {
        this["__superclass_Optic.Index.Class.IndexKey_0"] = __superclass_Optic$dotIndex$dotClass$dotIndexKey_0;
        this.contains = contains;
    };
    var containsSet = function (__dict_Ord_793) {
        return new Contains(function () {
            return Optic_Index_Class.indexKeySet;
        }, function (k) {
            return function (__dict_Functor_794) {
                return function (f) {
                    return function (s) {
                        return Prelude["<$>"](__dict_Functor_794)(function (b) {
                            if (b) {
                                return Data_Set.insert(__dict_Ord_793)(k)(s);
                            };
                            if (!b) {
                                return Data_Set["delete"](__dict_Ord_793)(k)(s);
                            };
                            throw new Error("Failed pattern match");
                        })(f(Data_Set.member(__dict_Ord_793)(k)(s)));
                    };
                };
            };
        });
    };
    var contains = function (dict) {
        return dict.contains;
    };
    return {
        Contains: Contains, 
        contains: contains, 
        containsSet: containsSet
    };
})();
var PS = PS || {};
PS.Optic_Index = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Set = PS.Data_Set;
    var Data_Map = PS.Data_Map;
    var Data_Maybe = PS.Data_Maybe;
    var Data_StrMap = PS.Data_StrMap;
    var Data_Identity = PS.Data_Identity;
    var Optic_Index_Class = PS.Optic_Index_Class;
    var Optic_Index_Types = PS.Optic_Index_Types;
    var Index = function (__superclass_Optic$dotIndex$dotClass$dotIndexKey_0, __superclass_Optic$dotIndex$dotClass$dotIndexValue_1, ix) {
        this["__superclass_Optic.Index.Class.IndexKey_0"] = __superclass_Optic$dotIndex$dotClass$dotIndexKey_0;
        this["__superclass_Optic.Index.Class.IndexValue_1"] = __superclass_Optic$dotIndex$dotClass$dotIndexValue_1;
        this.ix = ix;
    };
    var ix = function (dict) {
        return dict.ix;
    };
    var indexStrMap = new Index(function () {
        return Optic_Index_Class.indexKeyStrMap;
    }, function () {
        return Optic_Index_Class.indexValueStrMap;
    }, function (str) {
        return function (__dict_Applicative_795) {
            return function (v2fv) {
                return function (sm) {
                    return Data_Maybe.maybe(Prelude.pure(__dict_Applicative_795)(sm))(function (v) {
                        return Prelude["<$>"]((__dict_Applicative_795["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(function (v$prime) {
                            return Data_StrMap.insert(str)(v$prime)(sm);
                        })(v2fv(v));
                    })(Data_StrMap.lookup(str)(sm));
                };
            };
        };
    });
    var indexSet = function (__dict_Ord_796) {
        return new Index(function () {
            return Optic_Index_Class.indexKeySet;
        }, function () {
            return Optic_Index_Class.indexValueSet;
        }, function (a) {
            return function (__dict_Applicative_797) {
                return function (u2fu) {
                    return function (s) {
                        var _3270 = Data_Set.member(__dict_Ord_796)(a)(s);
                        if (_3270) {
                            return Prelude.pure(__dict_Applicative_797)(Data_Set.insert(__dict_Ord_796)(a)(s));
                        };
                        if (!_3270) {
                            return Prelude.pure(__dict_Applicative_797)(s);
                        };
                        throw new Error("Failed pattern match");
                    };
                };
            };
        });
    };
    var indexMaybe = new Index(function () {
        return Optic_Index_Class.indexKeyMaybe;
    }, function () {
        return Optic_Index_Class.indexValueMaybe;
    }, function (_896) {
        return function (__dict_Applicative_798) {
            return function (_897) {
                return function (_898) {
                    if (_898 instanceof Data_Maybe.Nothing) {
                        return Prelude.pure(__dict_Applicative_798)(Data_Maybe.Nothing.value);
                    };
                    if (_898 instanceof Data_Maybe.Just) {
                        return Prelude["<$>"]((__dict_Applicative_798["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Maybe.Just.create)(_897(_898.value0));
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
    });
    var indexMap = function (__dict_Ord_799) {
        return new Index(function () {
            return Optic_Index_Class.indexKeyMap;
        }, function () {
            return Optic_Index_Class.indexValueMap;
        }, function (k) {
            return function (__dict_Applicative_800) {
                return function (v2fv) {
                    return function (m) {
                        return Data_Maybe.maybe(Prelude.pure(__dict_Applicative_800)(m))(function (v) {
                            return Prelude["<$>"]((__dict_Applicative_800["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(function (v$prime) {
                                return Data_Map.insert(__dict_Ord_799)(k)(v$prime)(m);
                            })(v2fv(v));
                        })(Data_Map.lookup(__dict_Ord_799)(k)(m));
                    };
                };
            };
        });
    };
    var indexIdentity = new Index(function () {
        return Optic_Index_Class.indexKeyIdentity;
    }, function () {
        return Optic_Index_Class.indexValueIdentity;
    }, function (_899) {
        return function (__dict_Applicative_801) {
            return function (_900) {
                return function (_901) {
                    return Prelude["<$>"]((__dict_Applicative_801["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Identity.Identity)(_900(_901));
                };
            };
        };
    });
    var indexArray = new Index(function () {
        return Optic_Index_Class.indexKeyArray;
    }, function () {
        return Optic_Index_Class.indexValueArray;
    }, function (_902) {
        return function (__dict_Applicative_802) {
            return function (_903) {
                return function (_904) {
                    if (_902 < 0) {
                        return Prelude.pure(__dict_Applicative_802)(_904);
                    };
                    if (_904.length === 0) {
                        return Prelude.pure(__dict_Applicative_802)([  ]);
                    };
                    if (_902 === 0 && _904.length >= 1) {
                        var _3282 = _904.slice(1);
                        return Prelude["<#>"]((__dict_Applicative_802["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(_903(_904[0]))(function (a$prime) {
                            return Prelude[":"](a$prime)(_3282);
                        });
                    };
                    if (_904.length >= 1) {
                        var _3284 = _904.slice(1);
                        return Prelude["<$>"]((__dict_Applicative_802["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Prelude[":"](_904[0]))(ix(indexArray)(_902 - 1)(__dict_Applicative_802)(_903)(_3284));
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
    });
    var indexArr = function (__dict_Eq_803) {
        return new Index(function () {
            return Optic_Index_Class.indexKeyArr;
        }, function () {
            return Optic_Index_Class.indexValueArr;
        }, function (e) {
            return function (__dict_Applicative_804) {
                return function (a2fa) {
                    return function (e2a) {
                        return Prelude["<$>"]((__dict_Applicative_804["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(function (a) {
                            return function (e$prime) {
                                var _3285 = Prelude["=="](__dict_Eq_803)(e)(e$prime);
                                if (_3285) {
                                    return a;
                                };
                                if (!_3285) {
                                    return e2a(e$prime);
                                };
                                throw new Error("Failed pattern match");
                            };
                        })(a2fa(e2a(e)));
                    };
                };
            };
        });
    };
    return {
        Index: Index, 
        ix: ix, 
        indexArr: indexArr, 
        indexMaybe: indexMaybe, 
        indexIdentity: indexIdentity, 
        indexArray: indexArray, 
        indexSet: indexSet, 
        indexMap: indexMap, 
        indexStrMap: indexStrMap
    };
})();
var PS = PS || {};
PS.Optic_At = (function () {
    "use strict";
    var Data_Maybe = PS.Data_Maybe;
    var Prelude = PS.Prelude;
    var Data_Set = PS.Data_Set;
    var Data_Map = PS.Data_Map;
    var Data_StrMap = PS.Data_StrMap;
    var Data_Identity = PS.Data_Identity;
    var Optic_Index = PS.Optic_Index;
    var Optic_Index_Types = PS.Optic_Index_Types;
    var At = function (__superclass_Optic$dotIndex$dotIndex_0, at) {
        this["__superclass_Optic.Index.Index_0"] = __superclass_Optic$dotIndex$dotIndex_0;
        this.at = at;
    };
    var atStrMap = new At(function () {
        return Optic_Index.indexStrMap;
    }, function (k) {
        return function (__dict_Functor_805) {
            return function (mv2fMv) {
                return function (sm) {
                    var sm$prime = Data_StrMap.lookup(k)(sm);
                    var go = function (_911) {
                        if (_911 instanceof Data_Maybe.Nothing) {
                            return Data_Maybe.maybe(sm)(function (_) {
                                return Data_StrMap["delete"](k)(sm);
                            })(sm$prime);
                        };
                        if (_911 instanceof Data_Maybe.Just) {
                            return Data_StrMap.insert(k)(_911.value0)(sm);
                        };
                        throw new Error("Failed pattern match");
                    };
                    return Prelude["<$>"](__dict_Functor_805)(go)(mv2fMv(sm$prime));
                };
            };
        };
    });
    var atSet = function (__dict_Ord_806) {
        return new At(function () {
            return Optic_Index.indexSet(__dict_Ord_806);
        }, function (v) {
            return function (__dict_Functor_807) {
                return function (mu2fMu) {
                    return function (s) {
                        var s$prime = (function () {
                            var _3288 = Data_Set.member(__dict_Ord_806)(v)(s);
                            if (_3288) {
                                return new Data_Maybe.Just(Prelude.unit);
                            };
                            if (!_3288) {
                                return Data_Maybe.Nothing.value;
                            };
                            throw new Error("Failed pattern match");
                        })();
                        var go = function (_909) {
                            if (_909 instanceof Data_Maybe.Nothing) {
                                return Data_Maybe.maybe(s)(function (_) {
                                    return Data_Set["delete"](__dict_Ord_806)(v)(s);
                                })(s$prime);
                            };
                            if (_909 instanceof Data_Maybe.Just) {
                                return Data_Set.insert(__dict_Ord_806)(v)(s);
                            };
                            throw new Error("Failed pattern match");
                        };
                        return Prelude["<$>"](__dict_Functor_807)(go)(mu2fMu(s$prime));
                    };
                };
            };
        });
    };
    var atMaybe = new At(function () {
        return Optic_Index.indexMaybe;
    }, function (_908) {
        return function (__dict_Functor_808) {
            return Prelude["$"];
        };
    });
    var atMap = function (__dict_Ord_809) {
        return new At(function () {
            return Optic_Index.indexMap(__dict_Ord_809);
        }, function (k) {
            return function (__dict_Functor_810) {
                return function (mv2fMv) {
                    return function (m) {
                        var m$prime = Data_Map.lookup(__dict_Ord_809)(k)(m);
                        var go = function (_910) {
                            if (_910 instanceof Data_Maybe.Nothing) {
                                return Data_Maybe.maybe(m)(function (_) {
                                    return Data_Map["delete"](__dict_Ord_809)(k)(m);
                                })(m$prime);
                            };
                            if (_910 instanceof Data_Maybe.Just) {
                                return Data_Map.insert(__dict_Ord_809)(k)(_910.value0)(m);
                            };
                            throw new Error("Failed pattern match");
                        };
                        return Prelude["<$>"](__dict_Functor_810)(go)(mv2fMv(m$prime));
                    };
                };
            };
        });
    };
    var atIdentity = new At(function () {
        return Optic_Index.indexIdentity;
    }, function (_905) {
        return function (__dict_Functor_811) {
            return function (_906) {
                return function (_907) {
                    return Prelude["<$>"](__dict_Functor_811)(Data_Maybe.maybe(_907)(Data_Identity.Identity))(_906(new Data_Maybe.Just(_907)));
                };
            };
        };
    });
    var at = function (dict) {
        return dict.at;
    };
    return {
        At: At, 
        at: at, 
        atIdentity: atIdentity, 
        atMaybe: atMaybe, 
        atSet: atSet, 
        atMap: atMap, 
        atStrMap: atStrMap
    };
})();
var PS = PS || {};
PS.Optic_Iso = (function () {
    "use strict";
    var Data_Profunctor = PS.Data_Profunctor;
    var Prelude = PS.Prelude;
    var Data_Identity = PS.Data_Identity;
    var Data_Enum = PS.Data_Enum;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Monoid = PS.Data_Monoid;
    var Data_Tuple = PS.Data_Tuple;
    var Optic_Internal_Iso = PS.Optic_Internal_Iso;
    var Optic_Types_Extended = PS.Optic_Types_Extended;
    var withIso = function (stab) {
        return function (f) {
            var _3297 = stab(new Optic_Internal_Iso.Exchange(Prelude.id(Prelude.categoryArr), Data_Identity.Identity));
            return f(_3297.value0)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Identity.runIdentity)(_3297.value1));
        };
    };
    var under = function (stab) {
        return withIso(stab)(function (s2a) {
            return function (b2t) {
                return function (t2s) {
                    return Prelude[">>>"](Prelude.semigroupoidArr)(b2t)(Prelude[">>>"](Prelude.semigroupoidArr)(t2s)(s2a));
                };
            };
        });
    };
    
    /**
     *  iso :: forall s t a b. (s -> a) -> (b -> t) -> Iso s t a b
     */
    var iso = function (__dict_Profunctor_812) {
        return function (__dict_Functor_813) {
            return function (s2a) {
                return function (b2t) {
                    return Data_Profunctor.dimap(__dict_Profunctor_812)(s2a)(Prelude["<$>"](__dict_Functor_813)(b2t));
                };
            };
        };
    };
    var mapping = function (__dict_Functor_814) {
        return function (__dict_Functor_815) {
            return function (__dict_Profunctor_816) {
                return function (stab) {
                    return withIso(stab)(function (s2a) {
                        return function (b2t) {
                            return iso(__dict_Profunctor_816)(__dict_Functor_814)(Prelude["<$>"](__dict_Functor_814)(s2a))(Prelude["<$>"](__dict_Functor_815)(b2t));
                        };
                    });
                };
            };
        };
    };
    var uncurried = function (__dict_Functor_817) {
        return function (__dict_Profunctor_818) {
            return iso(__dict_Profunctor_818)(__dict_Functor_817)(Data_Tuple.uncurry)(Data_Tuple.curry);
        };
    };
    
    /**
     *  from :: forall s t a b. AnIso s t a b -> Iso b a t s
     */
    var from = function (__dict_Profunctor_819) {
        return function (__dict_Functor_820) {
            return function (stab) {
                return withIso(stab)(function (s2a) {
                    return function (b2t) {
                        return iso(__dict_Profunctor_819)(__dict_Functor_820)(b2t)(s2a);
                    };
                });
            };
        };
    };
    var flipped = function (__dict_Functor_821) {
        return function (__dict_Profunctor_822) {
            return iso(__dict_Profunctor_822)(__dict_Functor_821)(Prelude.flip)(Prelude.flip);
        };
    };
    var $$enum = function (__dict_Enum_823) {
        return function (__dict_Monoid_824) {
            return function (__dict_Functor_825) {
                return function (__dict_Profunctor_826) {
                    return iso(__dict_Profunctor_826)(__dict_Functor_825)(Prelude[">>>"](Prelude.semigroupoidArr)(Data_Enum.toEnum(__dict_Enum_823))(Data_Maybe.maybe(Data_Monoid.mempty(__dict_Monoid_824))(Prelude.id(Prelude.categoryArr))))(Data_Enum.fromEnum(__dict_Enum_823));
                };
            };
        };
    };
    var curried = function (__dict_Functor_827) {
        return function (__dict_Profunctor_828) {
            return iso(__dict_Profunctor_828)(__dict_Functor_827)(Data_Tuple.curry)(Data_Tuple.uncurry);
        };
    };
    var cloneIso = function (__dict_Profunctor_829) {
        return function (__dict_Functor_830) {
            return function (stab) {
                return withIso(stab)(iso(__dict_Profunctor_829)(__dict_Functor_830));
            };
        };
    };
    var auf = function (__dict_Profunctor_831) {
        return function (stab) {
            return withIso(stab)(function (s2a) {
                return function (b2t) {
                    return function (f) {
                        return function (prs) {
                            return function (e) {
                                return b2t(f(Data_Profunctor.rmap(__dict_Profunctor_831)(s2a)(prs))(e));
                            };
                        };
                    };
                };
            });
        };
    };
    var au = function (stab) {
        return withIso(stab)(function (s2a) {
            return function (b2t) {
                return function (f) {
                    return function (e) {
                        return s2a(f(b2t)(e));
                    };
                };
            };
        });
    };
    return {
        withIso: withIso, 
        under: under, 
        mapping: mapping, 
        iso: iso, 
        from: from, 
        "enum": $$enum, 
        cloneIso: cloneIso, 
        auf: auf, 
        au: au
    };
})();
var PS = PS || {};
PS.Optic_Prism = (function () {
    "use strict";
    var Data_Either = PS.Data_Either;
    var Prelude = PS.Prelude;
    var Data_Profunctor = PS.Data_Profunctor;
    var Data_Profunctor_Choice = PS.Data_Profunctor_Choice;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Identity = PS.Data_Identity;
    var Optic_Internal_Prism = PS.Optic_Internal_Prism;
    var Optic_Types = PS.Optic_Types;
    var withPrism = function (stab) {
        return function (f) {
            var _3300 = stab(new Optic_Internal_Prism.Market(Data_Identity.Identity, Data_Either.Right.create));
            return f(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Identity.runIdentity)(_3300.value0))(Prelude[">>>"](Prelude.semigroupoidArr)(_3300.value1)(Data_Either.either(Prelude[">>>"](Prelude.semigroupoidArr)(Data_Identity.runIdentity)(Data_Either.Left.create))(Data_Either.Right.create)));
        };
    };
    var prism = function (__dict_Applicative_832) {
        return function (__dict_Choice_833) {
            return function (b2t) {
                return function (s2Eta) {
                    return function (pafb) {
                        return Data_Profunctor.dimap(__dict_Choice_833["__superclass_Data.Profunctor.Profunctor_0"]())(s2Eta)(Data_Either.either(Prelude.pure(__dict_Applicative_832))(Prelude["<$>"]((__dict_Applicative_832["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(b2t)))(Data_Profunctor_Choice.right(__dict_Choice_833)(pafb));
                    };
                };
            };
        };
    };
    var prism$prime = function (b2s) {
        return function (s2Ma) {
            return function (__dict_Applicative_834) {
                return function (__dict_Choice_835) {
                    return prism(__dict_Applicative_834)(__dict_Choice_835)(b2s)(function (s) {
                        return Data_Maybe.maybe(new Data_Either.Left(s))(Data_Either.Right.create)(s2Ma(s));
                    });
                };
            };
        };
    };
    var nearly = function (x) {
        return function (p) {
            return function (__dict_Applicative_836) {
                return function (__dict_Choice_837) {
                    var guard = function (_912) {
                        if (_912) {
                            return new Data_Maybe.Just(Prelude.unit);
                        };
                        if (!_912) {
                            return Data_Maybe.Nothing.value;
                        };
                        throw new Error("Failed pattern match");
                    };
                    return prism$prime(Prelude["const"](x))(Prelude["<<<"](Prelude.semigroupoidArr)(guard)(p))(__dict_Applicative_836)(__dict_Choice_837);
                };
            };
        };
    };
    var only = function (__dict_Eq_838) {
        return function (x) {
            return function (__dict_Applicative_839) {
                return function (__dict_Choice_840) {
                    return nearly(x)(Prelude["=="](__dict_Eq_838)(x))(__dict_Applicative_839)(__dict_Choice_840);
                };
            };
        };
    };
    var matching = function (stab) {
        return withPrism(stab)(function (_) {
            return function (s) {
                return s;
            };
        });
    };
    var is = function (stab) {
        return function (s) {
            return Data_Either.either(Prelude["const"](false))(Prelude["const"](true))(matching(stab)(s));
        };
    };
    var isn$primet = function (stab) {
        return function (s) {
            return !is(stab)(s);
        };
    };
    var clonePrism = function (__dict_Applicative_841) {
        return function (__dict_Choice_842) {
            return function (stab) {
                return withPrism(stab)(prism(__dict_Applicative_841)(__dict_Choice_842));
            };
        };
    };
    return {
        withPrism: withPrism, 
        "prism'": prism$prime, 
        prism: prism, 
        only: only, 
        nearly: nearly, 
        matching: matching, 
        "isn't": isn$primet, 
        is: is, 
        clonePrism: clonePrism
    };
})();
var PS = PS || {};
PS.Optic_Setter = (function () {
    "use strict";
    var Data_Profunctor = PS.Data_Profunctor;
    var Data_Contravariant = PS.Data_Contravariant;
    var Prelude = PS.Prelude;
    var Data_Identity = PS.Data_Identity;
    var Optic_Internal_Setter = PS.Optic_Internal_Setter;
    var Data_Maybe = PS.Data_Maybe;
    var Optic_Types = PS.Optic_Types;
    var sets = function (__dict_Profunctor_843) {
        return function (__dict_Profunctor_844) {
            return function (__dict_Settable_845) {
                return function (pab2qst) {
                    return Prelude[">>>"](Prelude.semigroupoidArr)(Optic_Internal_Setter.untaintedDot(__dict_Settable_845)(__dict_Profunctor_843))(Prelude[">>>"](Prelude.semigroupoidArr)(pab2qst)(Optic_Internal_Setter.taintedDot(__dict_Settable_845)(__dict_Profunctor_844)));
                };
            };
        };
    };
    var set$prime = function (sa) {
        return function (a) {
            return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Identity.runIdentity)(sa(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Identity.Identity)(Prelude["const"](a))));
        };
    };
    var set = function (stab) {
        return function (b) {
            return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Identity.runIdentity)(stab(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Identity.Identity)(Prelude["const"](b))));
        };
    };
    var $dot$tilde = set;
    var $qmark$tilde = function (stab) {
        return function (a) {
            return set(stab)(new Data_Maybe.Just(a));
        };
    };
    var over = function (__dict_Profunctor_846) {
        return function (pstab) {
            return function (pab) {
                return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Identity.runIdentity)(pstab(Data_Profunctor.rmap(__dict_Profunctor_846)(Data_Identity.Identity)(pab)));
            };
        };
    };
    
    /**
     *  Line noise time.
     */
    var $percent$tilde = function (__dict_Profunctor_847) {
        return over(__dict_Profunctor_847);
    };
    var $amp$amp$tilde = function (__dict_BoolLike_848) {
        return function (staa) {
            return function (a) {
                return over(Data_Profunctor.profunctorArr)(staa)(Prelude.flip(Prelude["&&"](__dict_BoolLike_848))(a));
            };
        };
    };
    var $times$tilde = function (__dict_Num_849) {
        return function (staa) {
            return function (a) {
                return over(Data_Profunctor.profunctorArr)(staa)(Prelude.flip(Prelude["*"](__dict_Num_849))(a));
            };
        };
    };
    var $plus$plus$tilde = function (__dict_Semigroup_850) {
        return function (staa) {
            return function (a) {
                return over(Data_Profunctor.profunctorArr)(staa)(Prelude.flip(Prelude["++"](__dict_Semigroup_850))(a));
            };
        };
    };
    var $plus$tilde = function (__dict_Num_851) {
        return function (staa) {
            return function (a) {
                return over(Data_Profunctor.profunctorArr)(staa)(Prelude.flip(Prelude["+"](__dict_Num_851))(a));
            };
        };
    };
    var $minus$tilde = function (__dict_Num_852) {
        return function (staa) {
            return function (a) {
                return over(Data_Profunctor.profunctorArr)(staa)(Prelude.flip(Prelude["-"](__dict_Num_852))(a));
            };
        };
    };
    var $div$div$tilde = function (__dict_Num_853) {
        return function (staa) {
            return function (a) {
                return over(Data_Profunctor.profunctorArr)(staa)(Prelude.flip(Prelude["/"](__dict_Num_853))(a));
            };
        };
    };
    var $less$greater$tilde = function (__dict_Semigroup_854) {
        return function (staa) {
            return function (a) {
                return over(Data_Profunctor.profunctorArr)(staa)(Prelude.flip(Prelude["<>"](__dict_Semigroup_854))(a));
            };
        };
    };
    var $bar$bar$tilde = function (__dict_BoolLike_855) {
        return function (staa) {
            return function (a) {
                return over(Data_Profunctor.profunctorArr)(staa)(Prelude.flip(Prelude["||"](__dict_BoolLike_855))(a));
            };
        };
    };
    var mapped = function (__dict_Functor_856) {
        return function (__dict_Settable_857) {
            return sets(Data_Profunctor.profunctorArr)(Data_Profunctor.profunctorArr)(__dict_Settable_857)(Prelude["<$>"](__dict_Functor_856));
        };
    };
    var contramapped = function (__dict_Contravariant_858) {
        return function (__dict_Settable_859) {
            return sets(Data_Profunctor.profunctorArr)(Data_Profunctor.profunctorArr)(__dict_Settable_859)(Data_Contravariant[">$<"](__dict_Contravariant_858));
        };
    };
    var argument = function (__dict_Profunctor_860) {
        return function (__dict_Settable_861) {
            return sets(Data_Profunctor.profunctorArr)(Data_Profunctor.profunctorArr)(__dict_Settable_861)(Data_Profunctor.lmap(__dict_Profunctor_860));
        };
    };
    return {
        sets: sets, 
        "set'": set$prime, 
        set: set, 
        over: over, 
        mapped: mapped, 
        contramapped: contramapped, 
        argument: argument, 
        "?~": $qmark$tilde, 
        "++~": $plus$plus$tilde, 
        "<>~": $less$greater$tilde, 
        "&&~": $amp$amp$tilde, 
        "||~": $bar$bar$tilde, 
        "//~": $div$div$tilde, 
        "*~": $times$tilde, 
        "-~": $minus$tilde, 
        "+~": $plus$tilde, 
        ".~": $dot$tilde, 
        "%~": $percent$tilde
    };
})();
var PS = PS || {};
PS.Optic_Core = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Optic_Getter = PS.Optic_Getter;
    var Optic_Lens = PS.Optic_Lens;
    var Optic_Prism = PS.Optic_Prism;
    var Optic_Setter = PS.Optic_Setter;
    var Optic_Types = PS.Optic_Types;
    var $bar$bar$tilde = Optic_Setter["||~"];
    var $up$dot = Optic_Getter["^."];
    var $qmark$tilde = Optic_Setter["?~"];
    var $qmark$qmark = Optic_Lens["??"];
    var $less$greater$tilde = Optic_Setter["<>~"];
    var $div$div$tilde = Optic_Setter["//~"];
    var $dot$tilde = Optic_Setter[".~"];
    var $dot$dot = Prelude["<<<"];
    var $minus$tilde = Optic_Setter["-~"];
    var $plus$tilde = Optic_Setter["+~"];
    var $plus$plus$tilde = Optic_Setter["++~"];
    var $times$tilde = Optic_Setter["*~"];
    var $amp$amp$tilde = Optic_Setter["&&~"];
    var $percent$tilde = Optic_Setter["%~"];
    var withPrism = Optic_Prism.withPrism;
    var view = Optic_Getter.view;
    var to = Optic_Getter.to;
    var sets = Optic_Setter.sets;
    var set$prime = Optic_Setter["set'"];
    var set = Optic_Setter.set;
    var prism$prime = Optic_Prism["prism'"];
    var prism = Optic_Prism.prism;
    var over = Optic_Setter.over;
    var only = Optic_Prism.only;
    var nearly = Optic_Prism.nearly;
    var matching = Optic_Prism.matching;
    var mapped = Optic_Setter.mapped;
    var lens = Optic_Lens.lens;
    var isn$primet = Optic_Prism["isn't"];
    var is = Optic_Prism.is;
    var contramapped = Optic_Setter.contramapped;
    
    /**
     *  Prism
     */
    var clonePrism = Optic_Prism.clonePrism;
    var argument = Optic_Setter.argument;
    return {
        sets: sets, 
        "set'": set$prime, 
        set: set, 
        over: over, 
        mapped: mapped, 
        contramapped: contramapped, 
        argument: argument, 
        "?~": $qmark$tilde, 
        "++~": $plus$plus$tilde, 
        "<>~": $less$greater$tilde, 
        "&&~": $amp$amp$tilde, 
        "||~": $bar$bar$tilde, 
        "//~": $div$div$tilde, 
        "*~": $times$tilde, 
        "-~": $minus$tilde, 
        "+~": $plus$tilde, 
        ".~": $dot$tilde, 
        "%~": $percent$tilde, 
        withPrism: withPrism, 
        "prism'": prism$prime, 
        prism: prism, 
        only: only, 
        nearly: nearly, 
        matching: matching, 
        "isn't": isn$primet, 
        is: is, 
        clonePrism: clonePrism, 
        lens: lens, 
        "??": $qmark$qmark, 
        "^.": $up$dot, 
        view: view, 
        to: to, 
        "..": $dot$dot
    };
})();
var PS = PS || {};
PS.Optic_Monad_Setter = (function () {
    "use strict";
    var Control_Monad_State_Class = PS.Control_Monad_State_Class;
    var Optic_Setter = PS.Optic_Setter;
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Profunctor = PS.Data_Profunctor;
    var Optic_Types = PS.Optic_Types;
    var $bar$bar$eq = function (__dict_Monad_862) {
        return function (__dict_MonadState_863) {
            return function (__dict_BoolLike_864) {
                return function (ssab) {
                    return function (b) {
                        return Control_Monad_State_Class.modify(__dict_Monad_862)(__dict_MonadState_863)(Optic_Setter["||~"](__dict_BoolLike_864)(ssab)(b));
                    };
                };
            };
        };
    };
    var $qmark$eq = function (__dict_Monad_865) {
        return function (__dict_MonadState_866) {
            return function (ssab) {
                return function (b) {
                    return Control_Monad_State_Class.modify(__dict_Monad_865)(__dict_MonadState_866)(Optic_Setter["?~"](ssab)(b));
                };
            };
        };
    };
    var $less$greater$eq = function (__dict_Monad_867) {
        return function (__dict_MonadState_868) {
            return function (__dict_Semigroup_869) {
                return function (ssab) {
                    return function (b) {
                        return Control_Monad_State_Class.modify(__dict_Monad_867)(__dict_MonadState_868)(Optic_Setter["<>~"](__dict_Semigroup_869)(ssab)(b));
                    };
                };
            };
        };
    };
    var $div$div$eq = function (__dict_Monad_870) {
        return function (__dict_MonadState_871) {
            return function (__dict_Num_872) {
                return function (ssab) {
                    return function (b) {
                        return Control_Monad_State_Class.modify(__dict_Monad_870)(__dict_MonadState_871)(Optic_Setter["//~"](__dict_Num_872)(ssab)(b));
                    };
                };
            };
        };
    };
    var $dot$eq = function (__dict_Monad_873) {
        return function (__dict_MonadState_874) {
            return function (ssab) {
                return function (b) {
                    return Control_Monad_State_Class.modify(__dict_Monad_873)(__dict_MonadState_874)(Optic_Setter[".~"](ssab)(b));
                };
            };
        };
    };
    var $minus$eq = function (__dict_Monad_875) {
        return function (__dict_MonadState_876) {
            return function (__dict_Num_877) {
                return function (ssab) {
                    return function (b) {
                        return Control_Monad_State_Class.modify(__dict_Monad_875)(__dict_MonadState_876)(Optic_Setter["-~"](__dict_Num_877)(ssab)(b));
                    };
                };
            };
        };
    };
    var $plus$eq = function (__dict_Monad_878) {
        return function (__dict_MonadState_879) {
            return function (__dict_Num_880) {
                return function (ssab) {
                    return function (b) {
                        return Control_Monad_State_Class.modify(__dict_Monad_878)(__dict_MonadState_879)(Optic_Setter["+~"](__dict_Num_880)(ssab)(b));
                    };
                };
            };
        };
    };
    var $plus$plus$eq = function (__dict_Monad_881) {
        return function (__dict_MonadState_882) {
            return function (__dict_Semigroup_883) {
                return function (ssab) {
                    return function (b) {
                        return Control_Monad_State_Class.modify(__dict_Monad_881)(__dict_MonadState_882)(Optic_Setter["++~"](__dict_Semigroup_883)(ssab)(b));
                    };
                };
            };
        };
    };
    var $times$eq = function (__dict_Monad_884) {
        return function (__dict_MonadState_885) {
            return function (__dict_Num_886) {
                return function (ssab) {
                    return function (b) {
                        return Control_Monad_State_Class.modify(__dict_Monad_884)(__dict_MonadState_885)(Optic_Setter["*~"](__dict_Num_886)(ssab)(b));
                    };
                };
            };
        };
    };
    var $amp$amp$eq = function (__dict_Monad_887) {
        return function (__dict_MonadState_888) {
            return function (__dict_BoolLike_889) {
                return function (ssab) {
                    return function (b) {
                        return Control_Monad_State_Class.modify(__dict_Monad_887)(__dict_MonadState_888)(Optic_Setter["&&~"](__dict_BoolLike_889)(ssab)(b));
                    };
                };
            };
        };
    };
    
    /**
     *  Line noise with State!
     */
    var $percent$eq = function (__dict_Monad_890) {
        return function (__dict_MonadState_891) {
            return function (__dict_Profunctor_892) {
                return function (ssab) {
                    return function (b) {
                        return Control_Monad_State_Class.modify(__dict_Monad_890)(__dict_MonadState_891)(Optic_Setter["%~"](__dict_Profunctor_892)(ssab)(b));
                    };
                };
            };
        };
    };
    var assign = function (__dict_Monad_893) {
        return function (__dict_MonadState_894) {
            return function (ssab) {
                return function (b) {
                    return Control_Monad_State_Class.modify(__dict_Monad_893)(__dict_MonadState_894)(Optic_Setter.set(ssab)(b));
                };
            };
        };
    };
    return {
        "?=": $qmark$eq, 
        "++=": $plus$plus$eq, 
        "<>=": $less$greater$eq, 
        "&&=": $amp$amp$eq, 
        "||=": $bar$bar$eq, 
        "//=": $div$div$eq, 
        "*=": $times$eq, 
        "-=": $minus$eq, 
        "+=": $plus$eq, 
        ".=": $dot$eq, 
        "%=": $percent$eq, 
        assign: assign
    };
})();
var PS = PS || {};
PS.Optic_Extended = (function () {
    "use strict";
    var Optic_Equality = PS.Optic_Equality;
    var Optic_Fold = PS.Optic_Fold;
    var Optic_Iso = PS.Optic_Iso;
    var Optic_Monad = PS.Optic_Monad;
    var Optic_Monad_Getter = PS.Optic_Monad_Getter;
    var Optic_Monad_Setter = PS.Optic_Monad_Setter;
    var Optic_Review = PS.Optic_Review;
    var Optic_Traversal = PS.Optic_Traversal;
    var Prelude = PS.Prelude;
    var Optic_Types_Extended = PS.Optic_Types_Extended;
    var $bar$bar$eq = Optic_Monad_Setter["||="];
    var $up$qmark = Optic_Fold["^?"];
    var $up$dot$dot = Optic_Fold["^.."];
    var $qmark$eq = Optic_Monad_Setter["?="];
    var $less$greater$eq = Optic_Monad_Setter["<>="];
    var $div$div$eq = Optic_Monad_Setter["//="];
    var $dot$eq = Optic_Monad_Setter[".="];
    var $minus$eq = Optic_Monad_Setter["-="];
    var $plus$eq = Optic_Monad_Setter["+="];
    var $plus$plus$eq = Optic_Monad_Setter["++="];
    var $times$eq = Optic_Monad_Setter["*="];
    var $amp$amp$eq = Optic_Monad_Setter["&&="];
    var $percent$eq = Optic_Monad_Setter["%="];
    var $hash$tilde = Optic_Monad["#~"];
    var $hash$hash = Optic_Review["##"];
    var withIso = Optic_Iso.withIso;
    
    /**
     *  Monad.Getter
     */
    var use = Optic_Monad_Getter.use;
    var unto = Optic_Review.unto;
    var under = Optic_Iso.under;
    var un = Optic_Review.un;
    var traverseOf = Optic_Traversal.traverseOf;
    var toListOf = Optic_Fold.toListOf;
    var simply = Optic_Equality.simply;
    
    /**
     *  Equality
     */
    var simple = Optic_Equality.simple;
    var sequenceOf = Optic_Traversal.sequenceOf;
    var reuses = Optic_Review.reuses;
    var reuse = Optic_Review.reuse;
    var relooks = Optic_Review.relooks;
    var relook = Optic_Review.relook;
    var re = Optic_Review.re;
    var mapping = Optic_Iso.mapping;
    var look = Optic_Monad_Getter.look;
    var iso = Optic_Iso.iso;
    var hasn$primet = Optic_Fold["hasn't"];
    var has = Optic_Fold.has;
    var from = Optic_Iso.from;
    var forOf = Optic_Traversal.forOf;
    var foldrOf = Optic_Fold.foldrOf;
    var foldlOf = Optic_Fold.foldlOf;
    var foldOf = Optic_Fold.foldOf;
    var foldMapOf = Optic_Fold.foldMapOf;
    var filtered = Optic_Fold.filtered;
    var $$enum = Optic_Iso["enum"];
    var cloneIso = Optic_Iso.cloneIso;
    
    /**
     *  Traversal
     */
    var both = Optic_Traversal.both;
    var auf = Optic_Iso.auf;
    
    /**
     *  Iso
     */
    var au = Optic_Iso.au;
    var assign = Optic_Monad_Setter.assign;
    return {
        traverseOf: traverseOf, 
        sequenceOf: sequenceOf, 
        forOf: forOf, 
        both: both, 
        un: un, 
        unto: unto, 
        relooks: relooks, 
        relook: relook, 
        reuses: reuses, 
        reuse: reuse, 
        re: re, 
        "##": $hash$hash, 
        assign: assign, 
        "?=": $qmark$eq, 
        "++=": $plus$plus$eq, 
        "<>=": $less$greater$eq, 
        "&&=": $amp$amp$eq, 
        "||=": $bar$bar$eq, 
        "//=": $div$div$eq, 
        "*=": $times$eq, 
        "-=": $minus$eq, 
        "+=": $plus$eq, 
        ".=": $dot$eq, 
        "%=": $percent$eq, 
        look: look, 
        use: use, 
        "#~": $hash$tilde, 
        withIso: withIso, 
        under: under, 
        mapping: mapping, 
        iso: iso, 
        from: from, 
        "enum": $$enum, 
        cloneIso: cloneIso, 
        auf: auf, 
        au: au, 
        toListOf: toListOf, 
        "hasn't": hasn$primet, 
        has: has, 
        foldrOf: foldrOf, 
        foldOf: foldOf, 
        foldMapOf: foldMapOf, 
        foldlOf: foldlOf, 
        filtered: filtered, 
        "^?": $up$qmark, 
        "^..": $up$dot$dot, 
        simply: simply, 
        simple: simple
    };
})();
var PS = PS || {};
PS.Data_Argonaut_Core = (function () {
    "use strict";
    var Data_Function = PS.Data_Function;
    var Prelude = PS.Prelude;
    var Data_StrMap = PS.Data_StrMap;
    var Optic_Prism = PS.Optic_Prism;
    var Optic_Fold = PS.Optic_Fold;
    var Optic_Core = PS.Optic_Core;
    var Optic_Extended = PS.Optic_Extended;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Profunctor_Choice = PS.Data_Profunctor_Choice;
    function fromNull(_){return null;};
    function fromBoolean(b){return b;};
    function fromNumber(n){return n;};
    function fromString(s){return s;};
    function fromArray(a){return a;};
    function fromObject(o){return o;};
    var jsonNull = null;;
    function _stringify(j){ return JSON.stringify(j); };
    function _foldJson(isNull, isBool, isNum, isStr, isArr, isObj, j) {   if (j == null) return isNull(null);                                else if (typeof j === 'boolean') return isBool(j);                 else if (typeof j === 'number') return isNum(j);                   else if (typeof j === 'string') return isStr(j);                   else if (Object.prototype.toString.call(j) === '[object Array]') return isArr(j);    else return isObj(j);                                           };
    
    function _compare(EQ, GT, LT, a, b) {
      function isArray(a) {
        return Object.prototype.toString.call(a) === '[object Array]';
      }
      function keys(o) {
        var a = [];
        for (var k in o) {
          a.push(k);
        }
        return a;
      }

      if (a == null) {
        if (b == null) return EQ;
        else return LT;
      } else if (typeof a === 'boolean') {
        if (typeof b === 'boolean') {
          // boolean / boolean
          if (a === b) return EQ;
          else if (a == false) return LT;
          else return GT;
        } else if (b == null) return GT;
        else return LT;
      } else if (typeof a === 'number') {
        if (typeof b === 'number') {
          if (a === b) return EQ;
          else if (a < b) return LT;
          else return GT;
        } else if (b == null) return GT;
        else if (typeof b === 'boolean') return GT;
        else return LT;
      } else if (typeof a === 'string') {
        if (typeof b === 'string') {
          if (a === b) return EQ;
          else if (a < b) return LT;
          else return GT;
        } else if (b == null) return GT;
        else if (typeof b === 'boolean') return GT;
        else if (typeof b === 'number') return GT;
        else return LT;
      } else if (isArray(a)) {
        if (isArray(b)) {
          for (var i = 0; i < Math.min(a.length, b.length); i++) {
            var c = _compare(EQ, GT, LT, a[i], b[i]);

            if (c !== EQ) return c;
          }
          if (a.length === b.length) return EQ;
          else if (a.length < b.length) return LT;
          else return GT;
        } else if (b == null) return GT;
        else if (typeof b === 'boolean') return GT;
        else if (typeof b === 'number') return GT;
        else if (typeof b === 'string') return GT;
        else return LT;
      }
      else {
        if (b == null) return GT;
        else if (typeof b === 'boolean') return GT;
        else if (typeof b === 'number') return GT;
        else if (typeof b === 'string') return GT;
        else if (isArray(b)) return GT;
        else {
          var akeys = keys(a);
          var bkeys = keys(b);

          var keys = akeys.concat(bkeys).sort();

          for (var i = 0; i < keys.length; i++) {
            var k = keys[i];

            if (a[k] === undefined) return LT;
            else if (b[k] === undefined) return GT;

            var c = _compare(EQ, GT, LT, a[k], b[k]);

            if (c !== EQ) return c;
          }

          if (akeys.length === bkeys.length) return EQ;
          else if (akeys.length < bkeys.length) return LT;
          else return GT;
        }
      }
    }
    ;
    var verbJsonType = function (def) {
        return function (f) {
            return function (fold) {
                return fold(def)(f);
            };
        };
    };
    
    /**
     *  Decoding
     */
    var toJsonType = verbJsonType(Data_Maybe.Nothing.value)(Data_Maybe.Just.create);
    var showJsonNull = new Prelude.Show(Prelude["const"]("null"));
    var showJson = new Prelude.Show(_stringify);
    var jsonZero = fromNumber(0);
    
    /**
     *  Default values
     */
    var jsonTrue = fromBoolean(true);
    var jsonSingletonObject = function (key) {
        return function (val) {
            return fromObject(Data_StrMap.singleton(key)(val));
        };
    };
    var jsonSingletonArray = function (j) {
        return fromArray([ j ]);
    };
    var jsonFalse = fromBoolean(false);
    var jsonEmptyString = fromString("");
    var jsonEmptyObject = fromObject(Data_StrMap.empty);
    var jsonEmptyArray = fromArray([  ]);
    
    /**
     *  Tests
     */
    var isJsonType = verbJsonType(false)(Prelude["const"](true));
    var foldJsonString = function (d) {
        return function (f) {
            return function (j) {
                return _foldJson(Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), f, Prelude["const"](d), Prelude["const"](d), j);
            };
        };
    };
    var isString = isJsonType(foldJsonString);
    var jsonStringL = function (__dict_Applicative_895) {
        return Prelude["<<<"](Prelude.semigroupoidArr)(Prelude.id(Prelude.categoryArr))(Optic_Fold.filtered(__dict_Applicative_895)(Data_Profunctor_Choice.choiceArr)(isString));
    };
    var toString = toJsonType(foldJsonString);
    var stringL = function (__dict_Applicative_896) {
        return function (__dict_Choice_897) {
            return Optic_Prism["prism'"](fromString)(toString)(__dict_Applicative_896)(__dict_Choice_897);
        };
    };
    var foldJsonObject = function (d) {
        return function (f) {
            return function (j) {
                return _foldJson(Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), f, j);
            };
        };
    };
    var isObject = isJsonType(foldJsonObject);
    var jsonObjectL = function (__dict_Applicative_898) {
        return Prelude["<<<"](Prelude.semigroupoidArr)(Prelude.id(Prelude.categoryArr))(Optic_Fold.filtered(__dict_Applicative_898)(Data_Profunctor_Choice.choiceArr)(isObject));
    };
    var toObject = toJsonType(foldJsonObject);
    var objectL = function (__dict_Applicative_899) {
        return function (__dict_Choice_900) {
            return Optic_Prism["prism'"](fromObject)(toObject)(__dict_Applicative_899)(__dict_Choice_900);
        };
    };
    var foldJsonNumber = function (d) {
        return function (f) {
            return function (j) {
                return _foldJson(Prelude["const"](d), Prelude["const"](d), f, Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), j);
            };
        };
    };
    var isNumber = isJsonType(foldJsonNumber);
    var jsonNumberL = function (__dict_Applicative_901) {
        return Prelude["<<<"](Prelude.semigroupoidArr)(Prelude.id(Prelude.categoryArr))(Optic_Fold.filtered(__dict_Applicative_901)(Data_Profunctor_Choice.choiceArr)(isNumber));
    };
    var toNumber = toJsonType(foldJsonNumber);
    var numberL = function (__dict_Applicative_902) {
        return function (__dict_Choice_903) {
            return Optic_Prism["prism'"](fromNumber)(toNumber)(__dict_Applicative_902)(__dict_Choice_903);
        };
    };
    var foldJsonNull = function (d) {
        return function (f) {
            return function (j) {
                return _foldJson(f, Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), j);
            };
        };
    };
    var isNull = isJsonType(foldJsonNull);
    
    /**
     *  Traversals
     */
    var jsonNullL = function (__dict_Applicative_904) {
        return Prelude["<<<"](Prelude.semigroupoidArr)(Prelude.id(Prelude.categoryArr))(Optic_Fold.filtered(__dict_Applicative_904)(Data_Profunctor_Choice.choiceArr)(isNull));
    };
    var toNull = toJsonType(foldJsonNull);
    
    /**
     *  Prisms
     */
    var nullL = function (__dict_Applicative_905) {
        return function (__dict_Choice_906) {
            return Optic_Prism["prism'"](fromNull)(toNull)(__dict_Applicative_905)(__dict_Choice_906);
        };
    };
    var foldJsonBoolean = function (d) {
        return function (f) {
            return function (j) {
                return _foldJson(Prelude["const"](d), f, Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), j);
            };
        };
    };
    var isBoolean = isJsonType(foldJsonBoolean);
    var jsonBooleanL = function (__dict_Applicative_907) {
        return Prelude["<<<"](Prelude.semigroupoidArr)(Prelude.id(Prelude.categoryArr))(Optic_Fold.filtered(__dict_Applicative_907)(Data_Profunctor_Choice.choiceArr)(isBoolean));
    };
    var toBoolean = toJsonType(foldJsonBoolean);
    var foldJsonArray = function (d) {
        return function (f) {
            return function (j) {
                return _foldJson(Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), f, Prelude["const"](d), j);
            };
        };
    };
    var isArray = isJsonType(foldJsonArray);
    var jsonArrayL = function (__dict_Applicative_908) {
        return Prelude["<<<"](Prelude.semigroupoidArr)(Prelude.id(Prelude.categoryArr))(Optic_Fold.filtered(__dict_Applicative_908)(Data_Profunctor_Choice.choiceArr)(isArray));
    };
    var toArray = toJsonType(foldJsonArray);
    
    /**
     *  Folds
     */
    var foldJson = function (a) {
        return function (b) {
            return function (c) {
                return function (d) {
                    return function (e) {
                        return function (f) {
                            return function (json) {
                                return _foldJson(a, b, c, d, e, f, json);
                            };
                        };
                    };
                };
            };
        };
    };
    var ordJson = new Prelude.Ord(function () {
        return eqJson;
    }, function (a) {
        return function (b) {
            return _compare(Prelude.EQ.value, Prelude.GT.value, Prelude.LT.value, a, b);
        };
    });
    var eqJson = new Prelude.Eq(function (j) {
        return function (j$prime) {
            return !Prelude["=="](eqJson)(j)(j$prime);
        };
    }, function (j1) {
        return function (j2) {
            return Prelude["=="](Prelude.eqOrdering)(Prelude.compare(ordJson)(j1)(j2))(Prelude.EQ.value);
        };
    });
    var eqJNull = new Prelude.Eq(function (n1) {
        return function (n2) {
            return false;
        };
    }, function (n1) {
        return function (n2) {
            return true;
        };
    });
    var ordJNull = new Prelude.Ord(function () {
        return eqJNull;
    }, Prelude["<<<"](Prelude.semigroupoidArr)(Prelude["const"])(Prelude["const"](Prelude.EQ.value)));
    var booleanL = function (__dict_Applicative_909) {
        return function (__dict_Choice_910) {
            return Optic_Prism["prism'"](fromBoolean)(toBoolean)(__dict_Applicative_909)(__dict_Choice_910);
        };
    };
    var arrayL = function (__dict_Applicative_911) {
        return function (__dict_Choice_912) {
            return Optic_Prism["prism'"](fromArray)(toArray)(__dict_Applicative_911)(__dict_Choice_912);
        };
    };
    return {
        toString: toString, 
        toObject: toObject, 
        toNumber: toNumber, 
        toNull: toNull, 
        toBoolean: toBoolean, 
        toArray: toArray, 
        stringL: stringL, 
        objectL: objectL, 
        numberL: numberL, 
        nullL: nullL, 
        jsonZero: jsonZero, 
        jsonTrue: jsonTrue, 
        jsonStringL: jsonStringL, 
        jsonSingletonObject: jsonSingletonObject, 
        jsonSingletonArray: jsonSingletonArray, 
        jsonObjectL: jsonObjectL, 
        jsonNumberL: jsonNumberL, 
        jsonNullL: jsonNullL, 
        jsonNull: jsonNull, 
        jsonFalse: jsonFalse, 
        jsonEmptyString: jsonEmptyString, 
        jsonEmptyObject: jsonEmptyObject, 
        jsonEmptyArray: jsonEmptyArray, 
        jsonBooleanL: jsonBooleanL, 
        jsonArrayL: jsonArrayL, 
        isString: isString, 
        isObject: isObject, 
        isNumber: isNumber, 
        isNull: isNull, 
        isJsonType: isJsonType, 
        isBoolean: isBoolean, 
        isArray: isArray, 
        fromString: fromString, 
        fromObject: fromObject, 
        fromNumber: fromNumber, 
        fromNull: fromNull, 
        fromBoolean: fromBoolean, 
        fromArray: fromArray, 
        foldJsonString: foldJsonString, 
        foldJsonObject: foldJsonObject, 
        foldJsonNumber: foldJsonNumber, 
        foldJsonNull: foldJsonNull, 
        foldJsonBoolean: foldJsonBoolean, 
        foldJsonArray: foldJsonArray, 
        booleanL: booleanL, 
        arrayL: arrayL, 
        foldJson: foldJson, 
        eqJNull: eqJNull, 
        ordJNull: ordJNull, 
        showJson: showJson, 
        showJsonNull: showJsonNull, 
        eqJson: eqJson, 
        ordJson: ordJson
    };
})();
var PS = PS || {};
PS.Data_Argonaut_Encode = (function () {
    "use strict";
    var Data_Argonaut_Core = PS.Data_Argonaut_Core;
    var Prelude = PS.Prelude;
    var Data_Char = PS.Data_Char;
    var Data_Map = PS.Data_Map;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Either = PS.Data_Either;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Tuple = PS.Data_Tuple;
    var Data_StrMap = PS.Data_StrMap;
    var Data_Array = PS.Data_Array;
    var EncodeJson = function (encodeJson) {
        this.encodeJson = encodeJson;
    };
    var encodeJsonUnit = new EncodeJson(Prelude["const"](Data_Argonaut_Core.jsonNull));
    var encodeJsonJson = new EncodeJson(Prelude.id(Prelude.categoryArr));
    var encodeJsonJString = new EncodeJson(Data_Argonaut_Core.fromString);
    var encodeJsonJNumber = new EncodeJson(Data_Argonaut_Core.fromNumber);
    var encodeJsonJBoolean = new EncodeJson(Data_Argonaut_Core.fromBoolean);
    var encodeJson = function (dict) {
        return dict.encodeJson;
    };
    var encodeJsonArray = function (__dict_EncodeJson_913) {
        return new EncodeJson(function (json) {
            return Data_Argonaut_Core.fromArray(Prelude["<$>"](Data_Array.functorArray)(encodeJson(__dict_EncodeJson_913))(json));
        });
    };
    var encodeJsonChar = new EncodeJson(Prelude["<<<"](Prelude.semigroupoidArr)(encodeJson(encodeJsonJString))(Data_Char.charString));
    var encodeJsonEither = function (__dict_EncodeJson_914) {
        return function (__dict_EncodeJson_915) {
            return new EncodeJson(function (_915) {
                if (_915 instanceof Data_Either.Left) {
                    return encodeJson(__dict_EncodeJson_914)(_915.value0);
                };
                if (_915 instanceof Data_Either.Right) {
                    return encodeJson(__dict_EncodeJson_915)(_915.value0);
                };
                throw new Error("Failed pattern match");
            });
        };
    };
    var encodeJsonMaybe = function (__dict_EncodeJson_916) {
        return new EncodeJson(function (_913) {
            if (_913 instanceof Data_Maybe.Nothing) {
                return Data_Argonaut_Core.jsonNull;
            };
            if (_913 instanceof Data_Maybe.Just) {
                return encodeJson(__dict_EncodeJson_916)(_913.value0);
            };
            throw new Error("Failed pattern match");
        });
    };
    var encodeJsonTuple = function (__dict_EncodeJson_917) {
        return function (__dict_EncodeJson_918) {
            return new EncodeJson(function (_914) {
                return encodeJson(encodeJsonArray(encodeJsonJson))([ encodeJson(__dict_EncodeJson_917)(_914.value0), encodeJson(__dict_EncodeJson_918)(_914.value1) ]);
            });
        };
    };
    var encodeMap = function (__dict_Ord_919) {
        return function (__dict_EncodeJson_920) {
            return function (__dict_EncodeJson_921) {
                return new EncodeJson(Prelude["<<<"](Prelude.semigroupoidArr)(encodeJson(encodeJsonArray(encodeJsonTuple(__dict_EncodeJson_920)(__dict_EncodeJson_921))))(Data_Map.toList));
            };
        };
    };
    var encodeStrMap = function (__dict_EncodeJson_922) {
        return new EncodeJson(function (m) {
            return Data_Argonaut_Core.fromObject(Prelude["<$>"](Data_StrMap.functorStrMap)(encodeJson(__dict_EncodeJson_922))(m));
        });
    };
    return {
        EncodeJson: EncodeJson, 
        encodeJson: encodeJson, 
        encodeJsonMaybe: encodeJsonMaybe, 
        encodeJsonTuple: encodeJsonTuple, 
        encodeJsonEither: encodeJsonEither, 
        encodeJsonUnit: encodeJsonUnit, 
        encodeJsonJBoolean: encodeJsonJBoolean, 
        encodeJsonJNumber: encodeJsonJNumber, 
        encodeJsonJString: encodeJsonJString, 
        encodeJsonJson: encodeJsonJson, 
        encodeJsonChar: encodeJsonChar, 
        encodeJsonArray: encodeJsonArray, 
        encodeStrMap: encodeStrMap, 
        encodeMap: encodeMap
    };
})();
var PS = PS || {};
PS.Data_Argonaut_Parser = (function () {
    "use strict";
    var Data_Function = PS.Data_Function;
    var Prelude = PS.Prelude;
    var Data_Argonaut_Core = PS.Data_Argonaut_Core;
    var Data_Either = PS.Data_Either;
    function _jsonParser(fail, succ, s) {   try { return succ(JSON.parse(s)); } catch (e) { return fail(e.message); }};
    var jsonParser = function (j) {
        return _jsonParser(Data_Either.Left.create, Data_Either.Right.create, j);
    };
    return {
        jsonParser: jsonParser
    };
})();
var PS = PS || {};
PS.Data_Argonaut_Printer = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Argonaut_Core = PS.Data_Argonaut_Core;
    var Data_Function = PS.Data_Function;
    var Printer = function (printJson) {
        this.printJson = printJson;
    };
    var printerString = new Printer(Prelude.show(Data_Argonaut_Core.showJson));
    var printJson = function (dict) {
        return dict.printJson;
    };
    return {
        Printer: Printer, 
        printJson: printJson, 
        printerString: printerString
    };
})();
var PS = PS || {};
PS.Data_Argonaut_Decode = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Argonaut_Core = PS.Data_Argonaut_Core;
    var Data_String = PS.Data_String;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Traversable = PS.Data_Traversable;
    var Data_Map = PS.Data_Map;
    var Data_Either = PS.Data_Either;
    var Optic_Prism = PS.Optic_Prism;
    var Data_Argonaut_Encode = PS.Data_Argonaut_Encode;
    var Optic_Index = PS.Optic_Index;
    var Optic_Core = PS.Optic_Core;
    var Optic_Extended = PS.Optic_Extended;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Char = PS.Data_Char;
    var Control_Alt = PS.Control_Alt;
    var Data_StrMap = PS.Data_StrMap;
    var Data_Profunctor_Choice = PS.Data_Profunctor_Choice;
    var DecodeJson = function (decodeJson) {
        this.decodeJson = decodeJson;
    };
    var decodeJsonString = new DecodeJson(Data_Argonaut_Core.foldJsonString(new Data_Either.Left("Not a String."))(Data_Either.Right.create));
    var decodeJsonNumber = new DecodeJson(Data_Argonaut_Core.foldJsonNumber(new Data_Either.Left("Not a Number."))(Data_Either.Right.create));
    var decodeJsonNull = new DecodeJson(Data_Argonaut_Core.foldJsonNull(new Data_Either.Left("Not null."))(Prelude["const"](new Data_Either.Right(Prelude.unit))));
    var decodeJsonJson = new DecodeJson(Data_Either.Right.create);
    var decodeJsonBoolean = new DecodeJson(Data_Argonaut_Core.foldJsonBoolean(new Data_Either.Left("Not a Boolean."))(Data_Either.Right.create));
    var decodeJson = function (dict) {
        return dict.decodeJson;
    };
    var decodeJsonChar = new DecodeJson(function (j) {
        var go = function (_917) {
            if (_917 instanceof Data_Maybe.Nothing) {
                return Data_Either.Left.create("Expected character but found: " + Prelude.show(Data_Argonaut_Core.showJson)(j));
            };
            if (_917 instanceof Data_Maybe.Just) {
                return new Data_Either.Right(_917.value0);
            };
            throw new Error("Failed pattern match");
        };
        return Prelude[">>="](Data_Either.bindEither)(Prelude["<$>"](Data_Either.functorEither)(Data_String.charAt(0))(decodeJson(decodeJsonString)(j)))(go);
    });
    var decodeJsonEither = function (__dict_DecodeJson_923) {
        return function (__dict_DecodeJson_924) {
            return new DecodeJson(function (j) {
                return Control_Alt["<|>"](Data_Either.altEither)(Prelude["<$>"](Data_Either.functorEither)(Data_Either.Left.create)(decodeJson(__dict_DecodeJson_923)(j)))(Prelude["<$>"](Data_Either.functorEither)(Data_Either.Right.create)(decodeJson(__dict_DecodeJson_924)(j)));
            });
        };
    };
    var decodeJsonMaybe = function (__dict_DecodeJson_925) {
        return new DecodeJson(function (j) {
            return Control_Alt["<|>"](Data_Either.altEither)(decodeJson(decodeJsonMaybe(__dict_DecodeJson_925))(j))(Prelude.pure(Data_Either.applicativeEither)(Data_Maybe.Nothing.value));
        });
    };
    var decodeMaybe = function (__dict_DecodeJson_931) {
        return function (json) {
            return Data_Either.either(Prelude["const"](Data_Maybe.Nothing.value))(Data_Maybe.Just.create)(decodeJson(__dict_DecodeJson_931)(json));
        };
    };
    var decodeL = function (__dict_DecodeJson_932) {
        return function (__dict_EncodeJson_933) {
            return function (__dict_Applicative_934) {
                return function (__dict_Choice_935) {
                    return Optic_Prism["prism'"](Data_Argonaut_Encode.encodeJson(__dict_EncodeJson_933))(decodeMaybe(__dict_DecodeJson_932))(__dict_Applicative_934)(__dict_Choice_935);
                };
            };
        };
    };
    var objectFieldL = function (__dict_DecodeJson_936) {
        return function (__dict_EncodeJson_937) {
            return function (key) {
                return function (__dict_Applicative_938) {
                    return Prelude[">>>"](Prelude.semigroupoidArr)(decodeL(__dict_DecodeJson_936)(__dict_EncodeJson_937)(__dict_Applicative_938)(Data_Profunctor_Choice.choiceArr))(Prelude[">>>"](Prelude.semigroupoidArr)(Optic_Index.ix(Optic_Index.indexStrMap)(key)(__dict_Applicative_938))(Data_Argonaut_Core.objectL(__dict_Applicative_938)(Data_Profunctor_Choice.choiceArr)));
                };
            };
        };
    };
    var decodeStrMap = function (__dict_DecodeJson_939) {
        return new DecodeJson(function (json) {
            return Data_Maybe.maybe(new Data_Either.Left("Couldn't decode."))(Data_Either.Right.create)(Prelude[">>="](Data_Maybe.bindMaybe)(Data_Argonaut_Core.toObject(json))(function (_38) {
                return Data_Traversable.traverse(Data_StrMap.traversableStrMap)(Data_Maybe.applicativeMaybe)(decodeMaybe(__dict_DecodeJson_939))(_38);
            }));
        });
    };
    var decodeArray = function (__dict_DecodeJson_940) {
        return new DecodeJson(function (json) {
            return Data_Maybe.maybe(new Data_Either.Left("Couldn't decode."))(Data_Either.Right.create)(Prelude[">>="](Data_Maybe.bindMaybe)(Data_Argonaut_Core.toArray(json))(function (_39) {
                return Data_Traversable.traverse(Data_Traversable.traversableArray)(Data_Maybe.applicativeMaybe)(decodeMaybe(__dict_DecodeJson_940))(_39);
            }));
        });
    };
    var decodeJsonTuple = function (__dict_DecodeJson_926) {
        return function (__dict_DecodeJson_927) {
            return new DecodeJson(function (j) {
                var f = function (_916) {
                    if (_916.length >= 2) {
                        var _3319 = _916.slice(2);
                        if (_3319.length === 0) {
                            return Prelude["<*>"](Data_Either.applyEither)(Prelude["<$>"](Data_Either.functorEither)(Data_Tuple.Tuple.create)(decodeJson(__dict_DecodeJson_926)(_916[0])))(decodeJson(__dict_DecodeJson_927)(_916[1]));
                        };
                    };
                    throw new Error("Failed pattern match");
                };
                return Prelude[">>="](Data_Either.bindEither)(decodeJson(decodeArray(decodeJsonJson))(j))(f);
            });
        };
    };
    var decodeMap = function (__dict_Ord_928) {
        return function (__dict_DecodeJson_929) {
            return function (__dict_DecodeJson_930) {
                return new DecodeJson(function (j) {
                    return Prelude["<$>"](Data_Either.functorEither)(Data_Map.fromList(__dict_Ord_928))(decodeJson(decodeArray(decodeJsonTuple(__dict_DecodeJson_929)(__dict_DecodeJson_930)))(j));
                });
            };
        };
    };
    var arrayIndexL = function (__dict_DecodeJson_941) {
        return function (__dict_EncodeJson_942) {
            return function (i) {
                return function (__dict_Applicative_943) {
                    return Prelude[">>>"](Prelude.semigroupoidArr)(decodeL(__dict_DecodeJson_941)(__dict_EncodeJson_942)(__dict_Applicative_943)(Data_Profunctor_Choice.choiceArr))(Prelude[">>>"](Prelude.semigroupoidArr)(Optic_Index.ix(Optic_Index.indexArray)(i)(__dict_Applicative_943))(Data_Argonaut_Core.arrayL(__dict_Applicative_943)(Data_Profunctor_Choice.choiceArr)));
                };
            };
        };
    };
    return {
        DecodeJson: DecodeJson, 
        objectFieldL: objectFieldL, 
        arrayIndexL: arrayIndexL, 
        decodeL: decodeL, 
        decodeMaybe: decodeMaybe, 
        decodeJson: decodeJson, 
        decodeJsonMaybe: decodeJsonMaybe, 
        decodeJsonTuple: decodeJsonTuple, 
        decodeJsonEither: decodeJsonEither, 
        decodeJsonNull: decodeJsonNull, 
        decodeJsonBoolean: decodeJsonBoolean, 
        decodeJsonNumber: decodeJsonNumber, 
        decodeJsonString: decodeJsonString, 
        decodeJsonJson: decodeJsonJson, 
        decodeJsonChar: decodeJsonChar, 
        decodeStrMap: decodeStrMap, 
        decodeArray: decodeArray, 
        decodeMap: decodeMap
    };
})();
var PS = PS || {};
PS.Data_Argonaut_Combinators = (function () {
    "use strict";
    var Data_Argonaut_Encode = PS.Data_Argonaut_Encode;
    var Data_Argonaut_Core = PS.Data_Argonaut_Core;
    var Data_StrMap = PS.Data_StrMap;
    var Data_Maybe = PS.Data_Maybe;
    var Prelude = PS.Prelude;
    var Data_Argonaut_Decode = PS.Data_Argonaut_Decode;
    var Data_Either = PS.Data_Either;
    var Data_Tuple = PS.Data_Tuple;
    var $tilde$greater = function (__dict_EncodeJson_944) {
        return function (_918) {
            return function (_919) {
                return Data_Argonaut_Core.foldJsonObject(Data_Argonaut_Core.jsonSingletonObject(_918.value0)(_918.value1))(Prelude[">>>"](Prelude.semigroupoidArr)(Data_StrMap.insert(_918.value0)(_918.value1))(Data_Argonaut_Core.fromObject))(Data_Argonaut_Encode.encodeJson(__dict_EncodeJson_944)(_919));
            };
        };
    };
    var $qmark$greater$greater$eq = function (_920) {
        return function (_921) {
            if (_920 instanceof Data_Maybe.Just) {
                return new Data_Either.Right(_920.value0);
            };
            return Data_Either.Left.create("Couldn't decode " + _921);
        };
    };
    var $colon$eq = function (__dict_EncodeJson_945) {
        return function (k) {
            return function (v) {
                return Data_Tuple.Tuple.create(k)(Data_Argonaut_Encode.encodeJson(__dict_EncodeJson_945)(v));
            };
        };
    };
    
    /**
     *  obj .? "foo"
     */
    var $dot$qmark = function (__dict_DecodeJson_946) {
        return function (o) {
            return function (s) {
                return Data_Maybe.maybe(Data_Either.Left.create("Expected field " + Prelude.show(Prelude.showString)(s)))(Data_Argonaut_Decode.decodeJson(__dict_DecodeJson_946))(Data_StrMap.lookup(s)(o));
            };
        };
    };
    return {
        ".?": $dot$qmark, 
        "?>>=": $qmark$greater$greater$eq, 
        "~>": $tilde$greater, 
        ":=": $colon$eq
    };
})();
var PS = PS || {};
PS.Data_Argonaut_JCursor = (function () {
    "use strict";
    var Data_Argonaut_Core = PS.Data_Argonaut_Core;
    var Data_StrMap = PS.Data_StrMap;
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Array = PS.Data_Array;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Argonaut_Encode = PS.Data_Argonaut_Encode;
    var Data_Argonaut_Decode = PS.Data_Argonaut_Decode;
    var Data_Argonaut_Combinators = PS.Data_Argonaut_Combinators;
    var Data_Monoid = PS.Data_Monoid;
    var Data_String = PS.Data_String;
    var Data_Either = PS.Data_Either;
    var jsonNull0 = null;;
    var JsonPrim = function (x) {
        return x;
    };
    var JCursorTop = (function () {
        function JCursorTop() {

        };
        JCursorTop.value = new JCursorTop();
        return JCursorTop;
    })();
    var JField = (function () {
        function JField(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        };
        JField.create = function (value0) {
            return function (value1) {
                return new JField(value0, value1);
            };
        };
        return JField;
    })();
    var JIndex = (function () {
        function JIndex(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        };
        JIndex.create = function (value0) {
            return function (value1) {
                return new JIndex(value0, value1);
            };
        };
        return JIndex;
    })();
    var showJCursor = new Prelude.Show(function (_934) {
        if (_934 instanceof JCursorTop) {
            return "";
        };
        if (_934 instanceof JField) {
            return "." + (_934.value0 + Prelude.show(showJCursor)(_934.value1));
        };
        if (_934 instanceof JIndex) {
            return "[" + (Prelude.show(Prelude.showNumber)(_934.value0) + ("]" + Prelude.show(showJCursor)(_934.value1)));
        };
        throw new Error("Failed pattern match");
    });
    var semigroupJCursor = new Prelude.Semigroup(function (_939) {
        return function (_940) {
            if (_940 instanceof JCursorTop) {
                return _939;
            };
            if (_939 instanceof JCursorTop) {
                return _940;
            };
            if (_939 instanceof JField) {
                return new JField(_939.value0, Prelude["<>"](semigroupJCursor)(_939.value1)(_940));
            };
            if (_939 instanceof JIndex) {
                return new JIndex(_939.value0, Prelude["<>"](semigroupJCursor)(_939.value1)(_940));
            };
            throw new Error("Failed pattern match");
        };
    });
    var runJsonPrim = function (_922) {
        return _922;
    };
    var showJsonPrim = new Prelude.Show(function (p) {
        return runJsonPrim(p)(Prelude.show(Data_Argonaut_Core.showJsonNull))(Prelude.show(Prelude.showBoolean))(Prelude.show(Prelude.showNumber))(Prelude.show(Prelude.showString));
    });
    var primToJson = function (p) {
        return runJsonPrim(p)(Data_Argonaut_Core.fromNull)(Data_Argonaut_Core.fromBoolean)(Data_Argonaut_Core.fromNumber)(Data_Argonaut_Core.fromString);
    };
    var primStr = function (v) {
        return function (_) {
            return function (__1) {
                return function (__2) {
                    return function (f) {
                        return f(v);
                    };
                };
            };
        };
    };
    var primNum = function (v) {
        return function (_) {
            return function (__1) {
                return function (f) {
                    return function (__2) {
                        return f(v);
                    };
                };
            };
        };
    };
    var primNull = function (f) {
        return function (_) {
            return function (__1) {
                return function (__2) {
                    return f(jsonNull0);
                };
            };
        };
    };
    var primBool = function (v) {
        return function (_) {
            return function (f) {
                return function (__1) {
                    return function (__2) {
                        return f(v);
                    };
                };
            };
        };
    };
    var toPrims = Data_Argonaut_Core.foldJson(Prelude["const"]([ new Data_Tuple.Tuple(JCursorTop.value, primNull) ]))(function (b) {
        return [ Data_Tuple.Tuple.create(JCursorTop.value)(primBool(b)) ];
    })(function (n) {
        return [ Data_Tuple.Tuple.create(JCursorTop.value)(primNum(n)) ];
    })(function (s) {
        return [ Data_Tuple.Tuple.create(JCursorTop.value)(primStr(s)) ];
    })(function (a) {
        var zipped = Data_Array.zipWith(Data_Tuple.Tuple.create)(Data_Array.range(0)(Data_Array.length(a) - 1))(a);
        var f = function (_930) {
            return Prelude["<$>"](Data_Array.functorArray)(function (t) {
                return new Data_Tuple.Tuple(new JIndex(_930.value0, Data_Tuple.fst(t)), Data_Tuple.snd(t));
            })(toPrims(_930.value1));
        };
        return Prelude[">>="](Data_Array.bindArray)(zipped)(f);
    })(function (o) {
        var f = function (_931) {
            return Prelude["<$>"](Data_Array.functorArray)(function (t) {
                return new Data_Tuple.Tuple(new JField(_931.value0, Data_Tuple.fst(t)), Data_Tuple.snd(t));
            })(toPrims(_931.value1));
        };
        return Prelude[">>="](Data_Array.bindArray)(Data_StrMap.toList(o))(f);
    });
    var monoidJCursor = new Data_Monoid.Monoid(function () {
        return semigroupJCursor;
    }, JCursorTop.value);
    var inferEmpty = function (_925) {
        if (_925 instanceof JCursorTop) {
            return Data_Argonaut_Core.jsonNull;
        };
        if (_925 instanceof JField) {
            return Data_Argonaut_Core.jsonEmptyObject;
        };
        if (_925 instanceof JIndex) {
            return Data_Argonaut_Core.jsonEmptyArray;
        };
        throw new Error("Failed pattern match");
    };
    var fail = function (__dict_Show_947) {
        return function (x) {
            return Data_Either.Left.create("Expected String or Number but found: " + Prelude.show(__dict_Show_947)(x));
        };
    };
    var eqJCursor = new Prelude.Eq(function (a) {
        return function (b) {
            return !Prelude["=="](eqJCursor)(a)(b);
        };
    }, function (_935) {
        return function (_936) {
            if (_935 instanceof JCursorTop && _936 instanceof JCursorTop) {
                return true;
            };
            if (_935 instanceof JField && _936 instanceof JField) {
                return _935.value0 === _936.value0 && Prelude["=="](eqJCursor)(_935.value1)(_936.value1);
            };
            if (_935 instanceof JIndex && _936 instanceof JIndex) {
                return _935.value0 === _936.value0 && Prelude["=="](eqJCursor)(_935.value1)(_936.value1);
            };
            return false;
        };
    });
    var ordJCursor = new Prelude.Ord(function () {
        return eqJCursor;
    }, function (_937) {
        return function (_938) {
            if (_937 instanceof JCursorTop && _938 instanceof JCursorTop) {
                return Prelude.EQ.value;
            };
            if (_937 instanceof JCursorTop) {
                return Prelude.LT.value;
            };
            if (_938 instanceof JCursorTop) {
                return Prelude.GT.value;
            };
            if (_937 instanceof JField && _938 instanceof JIndex) {
                return Prelude.LT.value;
            };
            if (_937 instanceof JIndex && _938 instanceof JField) {
                return Prelude.GT.value;
            };
            if (_937 instanceof JField && _938 instanceof JField) {
                var _3370 = Prelude.compare(Prelude.ordString)(_937.value0)(_938.value0);
                if (_3370 instanceof Prelude.EQ) {
                    return Prelude.compare(ordJCursor)(_937.value1)(_938.value1);
                };
                return _3370;
            };
            if (_937 instanceof JIndex && _938 instanceof JIndex) {
                var _3375 = Prelude.compare(Prelude.ordNumber)(_937.value0)(_938.value0);
                if (_3375 instanceof Prelude.EQ) {
                    return Prelude.compare(ordJCursor)(_937.value1)(_938.value1);
                };
                return _3375;
            };
            throw new Error("Failed pattern match");
        };
    });
    var encodeJsonJCursor = new Data_Argonaut_Encode.EncodeJson((function () {
        var loop = function (_941) {
            if (_941 instanceof JCursorTop) {
                return [  ];
            };
            if (_941 instanceof JField) {
                return Prelude["<>"](Data_Array.semigroupArray)([ Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJString)(_941.value0) ])(loop(_941.value1));
            };
            if (_941 instanceof JIndex) {
                return Prelude["<>"](Data_Array.semigroupArray)([ Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJNumber)(_941.value0) ])(loop(_941.value1));
            };
            throw new Error("Failed pattern match");
        };
        return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonArray(Data_Argonaut_Encode.encodeJsonJson)))(loop);
    })());
    var downIndex = function (i) {
        var downIndex$prime = function (_929) {
            if (_929 instanceof JCursorTop) {
                return new JIndex(i, JCursorTop.value);
            };
            if (_929 instanceof JField) {
                return new JField(_929.value0, downIndex$prime(_929.value1));
            };
            if (_929 instanceof JIndex) {
                return new JIndex(_929.value0, downIndex$prime(_929.value1));
            };
            throw new Error("Failed pattern match");
        };
        return downIndex$prime;
    };
    var downField = function (i) {
        var downField$prime = function (_928) {
            if (_928 instanceof JCursorTop) {
                return new JField(i, JCursorTop.value);
            };
            if (_928 instanceof JField) {
                return new JField(_928.value0, downField$prime(_928.value1));
            };
            if (_928 instanceof JIndex) {
                return new JIndex(_928.value0, downField$prime(_928.value1));
            };
            throw new Error("Failed pattern match");
        };
        return downField$prime;
    };
    var insideOut = function (_923) {
        if (_923 instanceof JCursorTop) {
            return JCursorTop.value;
        };
        if (_923 instanceof JField) {
            return downField(_923.value0)(insideOut(_923.value1));
        };
        if (_923 instanceof JIndex) {
            return downIndex(_923.value0)(insideOut(_923.value1));
        };
        throw new Error("Failed pattern match");
    };
    var decodeJsonJCursor = new Data_Argonaut_Decode.DecodeJson(function (j) {
        var loop = function (_942) {
            if (_942.length === 0) {
                return new Data_Either.Right(JCursorTop.value);
            };
            if (_942.length >= 1) {
                var _3403 = _942.slice(1);
                return Prelude[">>="](Data_Either.bindEither)(loop(_3403))(function (_40) {
                    return Data_Argonaut_Core.foldJson(fail(Data_Argonaut_Core.showJsonNull))(fail(Prelude.showBoolean))(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Either.Right.create)(Prelude.flip(JIndex.create)(_40)))(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Either.Right.create)(Prelude.flip(JField.create)(_40)))(fail(Prelude.showArray(Data_Argonaut_Core.showJson)))(fail(Data_StrMap.showStrMap(Data_Argonaut_Core.showJson)))(_942[0]);
                });
            };
            throw new Error("Failed pattern match");
        };
        return Prelude[">>="](Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeArray(Data_Argonaut_Decode.decodeJsonJson))(j))(loop);
    });
    var cursorSet = function (_926) {
        return function (_927) {
            if (_926 instanceof JCursorTop) {
                return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Maybe.Just.create)(Prelude["const"](_927));
            };
            if (_926 instanceof JField) {
                var g = function (m) {
                    return Prelude["<$>"](Data_Maybe.functorMaybe)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Argonaut_Core.fromObject)(Prelude.flip(Data_StrMap.insert(_926.value0))(m)))(cursorSet(_926.value1)(_927)(Data_Maybe.fromMaybe(inferEmpty(_926.value1))(Data_StrMap.lookup(_926.value0)(m))));
                };
                var d = Prelude["<$>"](Data_Maybe.functorMaybe)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Argonaut_Core.fromObject)(Data_StrMap.singleton(_926.value0)))(cursorSet(_926.value1)(_927)(inferEmpty(_926.value1)));
                return Data_Argonaut_Core.foldJson(Prelude["const"](d))(Prelude["const"](d))(Prelude["const"](d))(Prelude["const"](d))(Prelude["const"](d))(g);
            };
            if (_926 instanceof JIndex) {
                var setArr = function (__copy_xs) {
                    return function (__copy_i_2) {
                        return function (__copy_v_3) {
                            var xs = __copy_xs;
                            var i_2 = __copy_i_2;
                            var v_3 = __copy_v_3;
                            tco: while (true) {
                                var len = Data_Array.length(xs);
                                var _3408 = i_2 < 0;
                                if (_3408) {
                                    return Data_Maybe.Nothing.value;
                                };
                                if (!_3408) {
                                    var _3409 = i_2 >= len;
                                    if (_3409) {
                                        var __tco_xs = Prelude["<>"](Data_Array.semigroupArray)(xs)(Prelude["<$>"](Data_Array.functorArray)(Prelude["const"](Data_Argonaut_Core.jsonNull))(Data_Array.range(0)(i_2 - len)));
                                        var __tco_i_2 = i_2;
                                        var __tco_v_3 = v_3;
                                        xs = __tco_xs;
                                        i_2 = __tco_i_2;
                                        v_3 = __tco_v_3;
                                        continue tco;
                                    };
                                    if (!_3409) {
                                        return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Maybe.Just.create)(Data_Argonaut_Core.fromArray)(Data_Array.updateAt(i_2)(v_3)(xs));
                                    };
                                    throw new Error("Failed pattern match");
                                };
                                throw new Error("Failed pattern match");
                            };
                        };
                    };
                };
                var g = function (a) {
                    return Prelude[">>="](Data_Maybe.bindMaybe)(cursorSet(_926.value1)(_927)(Data_Maybe.fromMaybe(inferEmpty(_926.value1))(Data_Array["!!"](a)(_926.value0))))(setArr(a)(_926.value0));
                };
                var d = Prelude["<$>"](Data_Maybe.functorMaybe)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Argonaut_Core.fromArray)(Prelude.flip(Data_Array.updateAt(_926.value0))(Prelude["<$>"](Data_Array.functorArray)(Prelude["const"](Data_Argonaut_Core.jsonNull))(Data_Array.range(0)(_926.value0)))))(cursorSet(_926.value1)(_927)(inferEmpty(_926.value1)));
                return Data_Argonaut_Core.foldJson(Prelude["const"](d))(Prelude["const"](d))(Prelude["const"](d))(Prelude["const"](d))(g)(Prelude["const"](d));
            };
            throw new Error("Failed pattern match");
        };
    };
    var fromPrims = function (a) {
        var f = function (_932) {
            return function (_933) {
                return Prelude[">>="](Data_Maybe.bindMaybe)(_932)(cursorSet(_933.value0)(runJsonPrim(_933.value1)(Data_Argonaut_Core.fromNull)(Data_Argonaut_Core.fromBoolean)(Data_Argonaut_Core.fromNumber)(Data_Argonaut_Core.fromString)));
            };
        };
        return Data_Foldable.foldlArray(f)(Prelude["<$>"](Data_Maybe.functorMaybe)(Prelude["<<<"](Prelude.semigroupoidArr)(inferEmpty)(Data_Tuple.fst))(Data_Array.head(a)))(a);
    };
    var cursorGet = function (_924) {
        if (_924 instanceof JCursorTop) {
            return Data_Maybe.Just.create;
        };
        if (_924 instanceof JField) {
            var g = function (m) {
                return Prelude[">>="](Data_Maybe.bindMaybe)(Data_StrMap.lookup(_924.value0)(m))(cursorGet(_924.value1));
            };
            return Data_Argonaut_Core.foldJsonObject(Data_Maybe.Nothing.value)(g);
        };
        if (_924 instanceof JIndex) {
            var g = function (a) {
                return Prelude[">>="](Data_Maybe.bindMaybe)(Data_Array["!!"](a)(_924.value0))(cursorGet(_924.value1));
            };
            return Data_Argonaut_Core.foldJsonArray(Data_Maybe.Nothing.value)(g);
        };
        throw new Error("Failed pattern match");
    };
    return {
        JsonPrim: JsonPrim, 
        JCursorTop: JCursorTop, 
        JField: JField, 
        JIndex: JIndex, 
        toPrims: toPrims, 
        runJsonPrim: runJsonPrim, 
        primToJson: primToJson, 
        primStr: primStr, 
        primNum: primNum, 
        primBool: primBool, 
        primNull: primNull, 
        insideOut: insideOut, 
        downIndex: downIndex, 
        downField: downField, 
        fromPrims: fromPrims, 
        cursorSet: cursorSet, 
        cursorGet: cursorGet, 
        showJCursor: showJCursor, 
        showJsonPrim: showJsonPrim, 
        eqJCursor: eqJCursor, 
        ordJCursor: ordJCursor, 
        semigroupJCursor: semigroupJCursor, 
        monoidJCursor: monoidJCursor, 
        encodeJsonJCursor: encodeJsonJCursor, 
        decodeJsonJCursor: decodeJsonJCursor
    };
})();
var PS = PS || {};
PS.Data_Argonaut = (function () {
    "use strict";
    var Data_Argonaut_Combinators = PS.Data_Argonaut_Combinators;
    var Data_Argonaut_JCursor = PS.Data_Argonaut_JCursor;
    var Data_Argonaut_Core = PS.Data_Argonaut_Core;
    var Data_Argonaut_Decode = PS.Data_Argonaut_Decode;
    var Data_Argonaut_Encode = PS.Data_Argonaut_Encode;
    var Data_Argonaut_Parser = PS.Data_Argonaut_Parser;
    var Data_Argonaut_Printer = PS.Data_Argonaut_Printer;
    var Prelude = PS.Prelude;
    var $tilde$greater = Data_Argonaut_Combinators["~>"];
    var $qmark$greater$greater$eq = Data_Argonaut_Combinators["?>>="];
    var $colon$eq = Data_Argonaut_Combinators[":="];
    var $dot$qmark = Data_Argonaut_Combinators[".?"];
    var toString = Data_Argonaut_Core.toString;
    var toPrims = Data_Argonaut_JCursor.toPrims;
    var toObject = Data_Argonaut_Core.toObject;
    var toNumber = Data_Argonaut_Core.toNumber;
    
    /**
     *  Decoding
     */
    var toNull = Data_Argonaut_Core.toNull;
    var toBoolean = Data_Argonaut_Core.toBoolean;
    var toArray = Data_Argonaut_Core.toArray;
    var stringL = Data_Argonaut_Core.stringL;
    var runJsonPrim = Data_Argonaut_JCursor.runJsonPrim;
    
    /**
     *  | Printer
     */
    var printJson = Data_Argonaut_Printer.printJson;
    var primToJson = Data_Argonaut_JCursor.primToJson;
    var primStr = Data_Argonaut_JCursor.primStr;
    var primNum = Data_Argonaut_JCursor.primNum;
    
    /**
     *  Prims
     */
    var primNull = Data_Argonaut_JCursor.primNull;
    var primBool = Data_Argonaut_JCursor.primBool;
    var objectL = Data_Argonaut_Core.objectL;
    var objectFieldL = Data_Argonaut_Decode.objectFieldL;
    var numberL = Data_Argonaut_Core.numberL;
    
    /**
     *  Prisms
     */
    var nullL = Data_Argonaut_Core.nullL;
    var jsonZero = Data_Argonaut_Core.jsonZero;
    
    /**
     *  Defaults
     */
    var jsonTrue = Data_Argonaut_Core.jsonTrue;
    var jsonStringL = Data_Argonaut_Core.jsonStringL;
    var jsonSingletonObject = Data_Argonaut_Core.jsonSingletonObject;
    var jsonSingletonArray = Data_Argonaut_Core.jsonSingletonArray;
    
    /**
     *  | Parser
     */
    var jsonParser = Data_Argonaut_Parser.jsonParser;
    var jsonObjectL = Data_Argonaut_Core.jsonObjectL;
    var jsonNumberL = Data_Argonaut_Core.jsonNumberL;
    
    /**
     *  Traversals
     */
    var jsonNullL = Data_Argonaut_Core.jsonNullL;
    var jsonNull = Data_Argonaut_Core.jsonNull;
    var jsonFalse = Data_Argonaut_Core.jsonFalse;
    var jsonEmptyString = Data_Argonaut_Core.jsonEmptyString;
    var jsonEmptyObject = Data_Argonaut_Core.jsonEmptyObject;
    var jsonEmptyArray = Data_Argonaut_Core.jsonEmptyArray;
    var jsonBooleanL = Data_Argonaut_Core.jsonBooleanL;
    var jsonArrayL = Data_Argonaut_Core.jsonArrayL;
    var isString = Data_Argonaut_Core.isString;
    var isObject = Data_Argonaut_Core.isObject;
    var isNumber = Data_Argonaut_Core.isNumber;
    
    /**
     *  Tests
     */
    var isNull = Data_Argonaut_Core.isNull;
    var isBoolean = Data_Argonaut_Core.isBoolean;
    var isArray = Data_Argonaut_Core.isArray;
    var insideOut = Data_Argonaut_JCursor.insideOut;
    var fromString = Data_Argonaut_Core.fromString;
    var fromPrims = Data_Argonaut_JCursor.fromPrims;
    var fromObject = Data_Argonaut_Core.fromObject;
    var fromNumber = Data_Argonaut_Core.fromNumber;
    
    /**
     *  Encoding
     */
    var fromNull = Data_Argonaut_Core.fromNull;
    var fromBoolean = Data_Argonaut_Core.fromBoolean;
    var fromArray = Data_Argonaut_Core.fromArray;
    var foldJsonString = Data_Argonaut_Core.foldJsonString;
    var foldJsonObject = Data_Argonaut_Core.foldJsonObject;
    var foldJsonNumber = Data_Argonaut_Core.foldJsonNumber;
    var foldJsonNull = Data_Argonaut_Core.foldJsonNull;
    var foldJsonBoolean = Data_Argonaut_Core.foldJsonBoolean;
    var foldJsonArray = Data_Argonaut_Core.foldJsonArray;
    
    /**
     *  Folds
     */
    var foldJson = Data_Argonaut_Core.foldJson;
    
    /**
     *  | Encode
     */
    var encodeJson = Data_Argonaut_Encode.encodeJson;
    var downIndex = Data_Argonaut_JCursor.downIndex;
    var downField = Data_Argonaut_JCursor.downField;
    var decodeMaybe = Data_Argonaut_Decode.decodeMaybe;
    
    /**
     *  Lenses
     */
    var decodeL = Data_Argonaut_Decode.decodeL;
    
    /**
     *  | Decode
     */
    var decodeJson = Data_Argonaut_Decode.decodeJson;
    var cursorSet = Data_Argonaut_JCursor.cursorSet;
    
    /**
     *  Cursors
     */
    var cursorGet = Data_Argonaut_JCursor.cursorGet;
    var booleanL = Data_Argonaut_Core.booleanL;
    var arrayL = Data_Argonaut_Core.arrayL;
    var arrayIndexL = Data_Argonaut_Decode.arrayIndexL;
    return {
        printJson: printJson, 
        jsonParser: jsonParser, 
        encodeJson: encodeJson, 
        objectFieldL: objectFieldL, 
        arrayIndexL: arrayIndexL, 
        decodeL: decodeL, 
        decodeMaybe: decodeMaybe, 
        decodeJson: decodeJson, 
        jsonObjectL: jsonObjectL, 
        jsonArrayL: jsonArrayL, 
        jsonStringL: jsonStringL, 
        jsonNumberL: jsonNumberL, 
        jsonBooleanL: jsonBooleanL, 
        jsonNullL: jsonNullL, 
        objectL: objectL, 
        arrayL: arrayL, 
        stringL: stringL, 
        numberL: numberL, 
        booleanL: booleanL, 
        nullL: nullL, 
        jsonSingletonObject: jsonSingletonObject, 
        jsonSingletonArray: jsonSingletonArray, 
        jsonEmptyObject: jsonEmptyObject, 
        jsonEmptyArray: jsonEmptyArray, 
        jsonEmptyString: jsonEmptyString, 
        jsonNull: jsonNull, 
        jsonZero: jsonZero, 
        jsonFalse: jsonFalse, 
        jsonTrue: jsonTrue, 
        fromObject: fromObject, 
        fromArray: fromArray, 
        fromString: fromString, 
        fromNumber: fromNumber, 
        fromBoolean: fromBoolean, 
        fromNull: fromNull, 
        toObject: toObject, 
        toArray: toArray, 
        toString: toString, 
        toNumber: toNumber, 
        toBoolean: toBoolean, 
        toNull: toNull, 
        isObject: isObject, 
        isArray: isArray, 
        isString: isString, 
        isNumber: isNumber, 
        isBoolean: isBoolean, 
        isNull: isNull, 
        foldJsonObject: foldJsonObject, 
        foldJsonArray: foldJsonArray, 
        foldJsonString: foldJsonString, 
        foldJsonNumber: foldJsonNumber, 
        foldJsonBoolean: foldJsonBoolean, 
        foldJsonNull: foldJsonNull, 
        foldJson: foldJson, 
        ".?": $dot$qmark, 
        "?>>=": $qmark$greater$greater$eq, 
        "~>": $tilde$greater, 
        ":=": $colon$eq
    };
})();
var PS = PS || {};
PS.Data_Json_JSemantic = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_String_Regex = PS.Data_String_Regex;
    var Math = PS.Math;
    var Data_Array = PS.Data_Array;
    var Data_Date = PS.Data_Date;
    var Data_String = PS.Data_String;
    var Data_Argonaut_JCursor = PS.Data_Argonaut_JCursor;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Foldable = PS.Data_Foldable;
    var Control_Alt = PS.Control_Alt;
    var Control_Apply = PS.Control_Apply;
    var Control_MonadPlus = PS.Control_MonadPlus;
    var _s2n = function (Just) { return function(Nothing) {
  return function (s) { 
    var n = s * 1; if (isNaN(n)) {return Nothing} else {return Just(n)} 
}}};
    var Integral = (function () {
        function Integral(value0) {
            this.value0 = value0;
        };
        Integral.create = function (value0) {
            return new Integral(value0);
        };
        return Integral;
    })();
    var Fractional = (function () {
        function Fractional(value0) {
            this.value0 = value0;
        };
        Fractional.create = function (value0) {
            return new Fractional(value0);
        };
        return Fractional;
    })();
    var Date = (function () {
        function Date(value0) {
            this.value0 = value0;
        };
        Date.create = function (value0) {
            return new Date(value0);
        };
        return Date;
    })();
    var DateTime = (function () {
        function DateTime(value0) {
            this.value0 = value0;
        };
        DateTime.create = function (value0) {
            return new DateTime(value0);
        };
        return DateTime;
    })();
    var Time = (function () {
        function Time(value0) {
            this.value0 = value0;
        };
        Time.create = function (value0) {
            return new Time(value0);
        };
        return Time;
    })();
    var Interval = (function () {
        function Interval(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        };
        Interval.create = function (value0) {
            return function (value1) {
                return new Interval(value0, value1);
            };
        };
        return Interval;
    })();
    var Text = (function () {
        function Text(value0) {
            this.value0 = value0;
        };
        Text.create = function (value0) {
            return new Text(value0);
        };
        return Text;
    })();
    var Bool = (function () {
        function Bool(value0) {
            this.value0 = value0;
        };
        Bool.create = function (value0) {
            return new Bool(value0);
        };
        return Bool;
    })();
    var Percent = (function () {
        function Percent(value0) {
            this.value0 = value0;
        };
        Percent.create = function (value0) {
            return new Percent(value0);
        };
        return Percent;
    })();
    var Currency = (function () {
        function Currency(value0) {
            this.value0 = value0;
        };
        Currency.create = function (value0) {
            return new Currency(value0);
        };
        return Currency;
    })();
    var NA = (function () {
        function NA() {

        };
        NA.value = new NA();
        return NA;
    })();
    var showJSemantic = new Prelude.Show(function (_944) {
        if (_944 instanceof Integral) {
            return "(Integral " + (Prelude.show(Prelude.showNumber)(_944.value0) + ")");
        };
        if (_944 instanceof Fractional) {
            return "(Fractional " + (Prelude.show(Prelude.showNumber)(_944.value0) + ")");
        };
        if (_944 instanceof Date) {
            return "(Date " + (Prelude.show(Data_Date.showDate)(_944.value0) + ")");
        };
        if (_944 instanceof DateTime) {
            return "(DateTime " + (Prelude.show(Data_Date.showDate)(_944.value0) + ")");
        };
        if (_944 instanceof Time) {
            return "(Time " + (Prelude.show(Data_Date.showDate)(_944.value0) + ")");
        };
        if (_944 instanceof Interval) {
            return "(Interval " + (Prelude.show(Data_Date.showDate)(_944.value0) + (" " + (Prelude.show(Data_Date.showDate)(_944.value1) + ")")));
        };
        if (_944 instanceof Text) {
            return "(Text " + (Prelude.show(Prelude.showString)(_944.value0) + ")");
        };
        if (_944 instanceof Bool) {
            return "(Bool " + (Prelude.show(Prelude.showBoolean)(_944.value0) + ")");
        };
        if (_944 instanceof Percent) {
            return "(Percent " + (Prelude.show(Prelude.showNumber)(_944.value0) + ")");
        };
        if (_944 instanceof Currency) {
            return "(Currency " + (Prelude.show(Prelude.showNumber)(_944.value0) + ")");
        };
        if (_944 instanceof NA) {
            return "NA";
        };
        throw new Error("Failed pattern match");
    });
    var s2n = _s2n(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
    var rx = function (s) {
        return Data_String_Regex.regex(s)(Data_String_Regex.noFlags);
    };
    var rg = function (s) {
        return Data_String_Regex.regex(s)(Data_String_Regex.parseFlags("g"));
    };
    var renderJSemantic = function (j) {
        if (j instanceof Integral) {
            return Prelude.show(Prelude.showNumber)(j.value0);
        };
        if (j instanceof Fractional) {
            return Prelude.show(Prelude.showNumber)(j.value0);
        };
        if (j instanceof Date) {
            return Prelude.show(Data_Date.showDate)(j.value0);
        };
        if (j instanceof DateTime) {
            return Prelude.show(Data_Date.showDate)(j.value0);
        };
        if (j instanceof Time) {
            return Prelude.show(Data_Date.showDate)(j.value0);
        };
        if (j instanceof Interval) {
            return Prelude.show(Data_Date.showDate)(j.value0) + (" - " + Prelude.show(Data_Date.showDate)(j.value1));
        };
        if (j instanceof Text) {
            return j.value0;
        };
        if (j instanceof Bool) {
            return Prelude.show(Prelude.showBoolean)(j.value0);
        };
        if (j instanceof Percent) {
            return Prelude.show(Prelude.showNumber)(j.value0) + "%";
        };
        if (j instanceof Currency) {
            return "$" + Prelude.show(Prelude.showNumber)(j.value0);
        };
        if (j instanceof NA) {
            return "";
        };
        throw new Error("Failed pattern match");
    };
    var parseX = function (regexp) {
        return function (parser) {
            return function (constr) {
                return function (s) {
                    return Prelude[">>="](Data_Maybe.bindMaybe)(Prelude[">>="](Data_Maybe.bindMaybe)(Prelude[">>="](Data_Maybe.bindMaybe)(Data_String_Regex.match(regexp)(s))(Data_Array.tail))(Data_Array.head))(function (s_1) {
                        return Prelude["<$>"](Data_Maybe.functorMaybe)(constr)(parser(s_1));
                    });
                };
            };
        };
    };
    var parsePercent = function (r) {
        return parseX(r)(s2n)(Percent.create);
    };
    var parseInterval = function (r) {
        return function (s) {
            var _3445 = Data_String.split(" - ")(s);
            if (_3445.length >= 2) {
                var _3448 = _3445.slice(2);
                if (_3448.length === 0 && (Data_String_Regex.test(r)(_3445[0]) && Data_String_Regex.test(r)(_3445[1]))) {
                    return Prelude["<*>"](Data_Maybe.applyMaybe)(Prelude["<$>"](Data_Maybe.functorMaybe)(Interval.create)(Data_Date.fromString(_3445[0])))(Data_Date.fromString(_3445[1]));
                };
            };
            return Data_Maybe.Nothing.value;
        };
    };
    var parseDateTime = function (r) {
        return parseX(r)(Data_Date.fromString)(DateTime.create);
    };
    var parseCurrency = function (r) {
        return parseX(r)(Prelude[">>>"](Prelude.semigroupoidArr)(Data_String_Regex.replace(rg(","))(""))(s2n))(Currency.create);
    };
    var eqJSemantic = new Prelude.Eq(function (a) {
        return function (b) {
            return !Prelude["=="](eqJSemantic)(a)(b);
        };
    }, function (_945) {
        return function (_946) {
            if (_945 instanceof Integral && _946 instanceof Integral) {
                return _945.value0 === _946.value0;
            };
            if (_945 instanceof Fractional && _946 instanceof Fractional) {
                return _945.value0 === _946.value0;
            };
            if (_945 instanceof Date && _946 instanceof Date) {
                return Prelude["=="](Data_Date.eqDate)(_945.value0)(_946.value0);
            };
            if (_945 instanceof DateTime && _946 instanceof DateTime) {
                return Prelude["=="](Data_Date.eqDate)(_945.value0)(_946.value0);
            };
            if (_945 instanceof Time && _946 instanceof Time) {
                return Prelude["=="](Data_Date.eqDate)(_945.value0)(_946.value0);
            };
            if (_945 instanceof Interval && _946 instanceof Interval) {
                return Prelude["=="](Data_Date.eqDate)(_945.value0)(_946.value0) && Prelude["=="](Data_Date.eqDate)(_945.value1)(_946.value1);
            };
            if (_945 instanceof Text && _946 instanceof Text) {
                return _945.value0 === _946.value0;
            };
            if (_945 instanceof Bool && _946 instanceof Bool) {
                return _945.value0 === _946.value0;
            };
            if (_945 instanceof Percent && _946 instanceof Percent) {
                return _945.value0 === _946.value0;
            };
            if (_945 instanceof Currency && _946 instanceof Currency) {
                return _945.value0 === _946.value0;
            };
            if (_945 instanceof NA && _946 instanceof NA) {
                return true;
            };
            return false;
        };
    });
    
    /**
     *  source: http://www.fileformat.info/info/unicode/category/Sc/list.htm
     */
    var currency_symbols = "[\\$\\u20A0-\\u20CF\\u00A2\\u00A3\\u00A4\\u00A5\\u058F\\u060B\\u09F2\\u09F3\\u09FB\\u0AF1\\u0BF9\\u0E3F\\u17DB\\uA838\\uFDFC\\uFE69\\uFF04\\uFFE0\\uFFE1\\uFFE5\\uFFE6]";
    var jSemanticOptsDefault = {
        regexps: {
            percent: rx("^(-?\\d+(\\.\\d+)?)\\%$"), 
            currency: rx("^" + (currency_symbols + "?(([0-9]{1,3},([0-9]{3},)*[0-9]{3}|[0-9]+)(.[0-9][0-9])?)$")), 
            date: rx("^((\\d{4})-(\\d{2})-(\\d{2})T(\\d{2})\\:(\\d{2})\\:(\\d{2})Z?[+-](\\d{2})\\:(\\d{2}))$")
        }
    };
    
    /**
     *  analyzeStr :: {regexps} -> String -> JSemantic
     */
    var analyzeStr = function (rs) {
        return function (s) {
            return Data_Maybe.fromMaybe(new Text(s))(Control_Alt["<|>"](Data_Maybe.altMaybe)(Control_Alt["<|>"](Data_Maybe.altMaybe)(Control_Alt["<|>"](Data_Maybe.altMaybe)(parsePercent(rs.percent)(s))(parseCurrency(rs.currency)(s)))(parseDateTime(rs.date)(s)))(parseInterval(rs.date)(s)));
        };
    };
    var analyzeNum = function (_943) {
        if (Math.floor(_943) === _943) {
            return new Integral(_943);
        };
        return new Fractional(_943);
    };
    
    /**
     *  TODO: date, time
     */
    var toSemantic = function (o) {
        return function (p) {
            return Data_Argonaut_JCursor.runJsonPrim(p)(Prelude["const"](NA.value))(Bool.create)(analyzeNum)(analyzeStr(o.regexps));
        };
    };
    var toSemanticDef = toSemantic(jSemanticOptsDefault);
    return {
        Integral: Integral, 
        Fractional: Fractional, 
        Date: Date, 
        DateTime: DateTime, 
        Time: Time, 
        Interval: Interval, 
        Text: Text, 
        Bool: Bool, 
        Percent: Percent, 
        Currency: Currency, 
        NA: NA, 
        jSemanticOptsDefault: jSemanticOptsDefault, 
        toSemanticDef: toSemanticDef, 
        toSemantic: toSemantic, 
        showJSemantic: showJSemantic, 
        eqJSemantic: eqJSemantic
    };
})();
var PS = PS || {};
PS.Text_Smolder_Markup = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var Data_Maybe = PS.Data_Maybe;
    var Control_Apply = PS.Control_Apply;
    var Data_Array = PS.Data_Array;
    var Attr = (function () {
        function Attr(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        };
        Attr.create = function (value0) {
            return function (value1) {
                return new Attr(value0, value1);
            };
        };
        return Attr;
    })();
    var Attribute = (function () {
        function Attribute(value0) {
            this.value0 = value0;
        };
        Attribute.create = function (value0) {
            return new Attribute(value0);
        };
        return Attribute;
    })();
    var Element = (function () {
        function Element(value0, value1, value2, value3) {
            this.value0 = value0;
            this.value1 = value1;
            this.value2 = value2;
            this.value3 = value3;
        };
        Element.create = function (value0) {
            return function (value1) {
                return function (value2) {
                    return function (value3) {
                        return new Element(value0, value1, value2, value3);
                    };
                };
            };
        };
        return Element;
    })();
    var Content = (function () {
        function Content(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        };
        Content.create = function (value0) {
            return function (value1) {
                return new Content(value0, value1);
            };
        };
        return Content;
    })();
    var Return = (function () {
        function Return(value0) {
            this.value0 = value0;
        };
        Return.create = function (value0) {
            return new Return(value0);
        };
        return Return;
    })();
    var Attributable = function ($bang) {
        this["!"] = $bang;
    };
    var $bang = function (dict) {
        return dict["!"];
    };
    var $bang$qmark = function (__dict_Attributable_948) {
        return function (h) {
            return function (c) {
                return function (a) {
                    if (c) {
                        return $bang(__dict_Attributable_948)(h)(a);
                    };
                    if (!c) {
                        return h;
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
    };
    var text = function (s) {
        return new Content(s, new Return(Prelude.unit));
    };
    var semigroupAttribute = new Prelude.Semigroup(function (_951) {
        return function (_952) {
            return new Attribute(Prelude["<>"](Data_Array.semigroupArray)(_951.value0)(_952.value0));
        };
    });
    var parent = function (el) {
        return function (kids) {
            return new Element(el, new Data_Maybe.Just(kids), [  ], new Return(Prelude.unit));
        };
    };
    var monoidAttribute = new Data_Monoid.Monoid(function () {
        return semigroupAttribute;
    }, new Attribute(Data_Monoid.mempty(Data_Monoid.monoidArray)));
    var leaf = function (el) {
        return new Element(el, Data_Maybe.Nothing.value, [  ], new Return(Prelude.unit));
    };
    var functorMarkupM = new Prelude.Functor(function (_947) {
        return function (_948) {
            if (_948 instanceof Element) {
                return new Element(_948.value0, _948.value1, _948.value2, Prelude["<$>"](functorMarkupM)(_947)(_948.value3));
            };
            if (_948 instanceof Content) {
                return new Content(_948.value0, Prelude["<$>"](functorMarkupM)(_947)(_948.value1));
            };
            if (_948 instanceof Return) {
                return new Return(_947(_948.value0));
            };
            throw new Error("Failed pattern match");
        };
    });
    var attribute = function (key) {
        return function (value) {
            return new Attribute([ new Attr(key, value) ]);
        };
    };
    var attributableMarkupM = new Attributable(function (_953) {
        return function (_954) {
            if (_953 instanceof Element) {
                return new Element(_953.value0, _953.value1, Prelude["<>"](Data_Array.semigroupArray)(_953.value2)(_954.value0), _953.value3);
            };
            throw new Error("Failed pattern match");
        };
    });
    var attributableMarkupMF = new Attributable(function (k) {
        return function (xs) {
            return function (m) {
                return $bang(attributableMarkupM)(k(m))(xs);
            };
        };
    });
    var monadMarkupM = new Prelude.Monad(function () {
        return applicativeMarkupM;
    }, function () {
        return bindMarkupM;
    });
    var bindMarkupM = new Prelude.Bind(function (_949) {
        return function (_950) {
            if (_949 instanceof Element) {
                return new Element(_949.value0, _949.value1, _949.value2, Prelude[">>="](bindMarkupM)(_949.value3)(_950));
            };
            if (_949 instanceof Content) {
                return new Content(_949.value0, Prelude[">>="](bindMarkupM)(_949.value1)(_950));
            };
            if (_949 instanceof Return) {
                return _950(_949.value0);
            };
            throw new Error("Failed pattern match");
        };
    }, function () {
        return applyMarkupM;
    });
    var applyMarkupM = new Prelude.Apply(Prelude.ap(monadMarkupM), function () {
        return functorMarkupM;
    });
    var applicativeMarkupM = new Prelude.Applicative(function () {
        return applyMarkupM;
    }, Return.create);
    var semigroupMarkupM = new Prelude.Semigroup(function (x) {
        return function (y) {
            return Control_Apply["*>"](applyMarkupM)(x)(y);
        };
    });
    var monoidMarkup = new Data_Monoid.Monoid(function () {
        return semigroupMarkupM;
    }, new Return(Prelude.unit));
    return {
        Attr: Attr, 
        Element: Element, 
        Content: Content, 
        Return: Return, 
        Attributable: Attributable, 
        "!?": $bang$qmark, 
        "!": $bang, 
        attribute: attribute, 
        text: text, 
        leaf: leaf, 
        parent: parent, 
        semigroupMarkupM: semigroupMarkupM, 
        monoidMarkup: monoidMarkup, 
        functorMarkupM: functorMarkupM, 
        applyMarkupM: applyMarkupM, 
        applicativeMarkupM: applicativeMarkupM, 
        bindMarkupM: bindMarkupM, 
        monadMarkupM: monadMarkupM, 
        semigroupAttribute: semigroupAttribute, 
        monoidAttribute: monoidAttribute, 
        attributableMarkupM: attributableMarkupM, 
        attributableMarkupMF: attributableMarkupMF
    };
})();
var PS = PS || {};
PS.Text_Smolder_HTML = (function () {
    "use strict";
    var Text_Smolder_Markup = PS.Text_Smolder_Markup;
    var Prelude = PS.Prelude;
    var wbr = Text_Smolder_Markup.leaf("wbr");
    var video = Text_Smolder_Markup.parent("video");
    var $$var = Text_Smolder_Markup.parent("var");
    var ul = Text_Smolder_Markup.parent("ul");
    var track = Text_Smolder_Markup.leaf("track");
    var tr = Text_Smolder_Markup.parent("tr");
    var title = Text_Smolder_Markup.parent("title");
    var time = Text_Smolder_Markup.parent("time");
    var thead = Text_Smolder_Markup.parent("thead");
    var th = Text_Smolder_Markup.parent("th");
    var tfoot = Text_Smolder_Markup.parent("tfoot");
    var textarea = Text_Smolder_Markup.parent("textarea");
    var td = Text_Smolder_Markup.parent("td");
    var tbody = Text_Smolder_Markup.parent("tbody");
    var table = Text_Smolder_Markup.parent("table");
    var sup = Text_Smolder_Markup.parent("sup");
    var summary = Text_Smolder_Markup.parent("summary");
    var sub = Text_Smolder_Markup.parent("sub");
    var style = Text_Smolder_Markup.parent("style");
    var strong = Text_Smolder_Markup.parent("strong");
    var span = Text_Smolder_Markup.parent("span");
    var source = Text_Smolder_Markup.leaf("source");
    var small = Text_Smolder_Markup.parent("small");
    var select = Text_Smolder_Markup.parent("select");
    var section = Text_Smolder_Markup.parent("section");
    var script = Text_Smolder_Markup.parent("script");
    var samp = Text_Smolder_Markup.parent("samp");
    var ruby = Text_Smolder_Markup.parent("ruby");
    var rt = Text_Smolder_Markup.parent("rt");
    var rp = Text_Smolder_Markup.parent("rp");
    var q = Text_Smolder_Markup.parent("q");
    var progress = Text_Smolder_Markup.parent("progress");
    var pre = Text_Smolder_Markup.parent("pre");
    var param = Text_Smolder_Markup.leaf("param");
    var p = Text_Smolder_Markup.parent("p");
    var output = Text_Smolder_Markup.parent("output");
    var option = Text_Smolder_Markup.parent("option");
    var optgroup = Text_Smolder_Markup.parent("optgroup");
    var ol = Text_Smolder_Markup.parent("ol");
    var object = Text_Smolder_Markup.parent("object");
    var noscript = Text_Smolder_Markup.parent("noscript");
    var nav = Text_Smolder_Markup.parent("nav");
    var meter = Text_Smolder_Markup.parent("meter");
    var meta = Text_Smolder_Markup.leaf("meta");
    var menuitem = Text_Smolder_Markup.leaf("menuitem");
    var menu = Text_Smolder_Markup.parent("menu");
    var mark = Text_Smolder_Markup.parent("mark");
    var map = Text_Smolder_Markup.parent("map");
    var link = Text_Smolder_Markup.leaf("link");
    var li = Text_Smolder_Markup.parent("li");
    var legend = Text_Smolder_Markup.parent("legend");
    var label = Text_Smolder_Markup.parent("label");
    var keygen = Text_Smolder_Markup.leaf("keygen");
    var kbd = Text_Smolder_Markup.parent("kbd");
    var ins = Text_Smolder_Markup.parent("ins");
    var input = Text_Smolder_Markup.leaf("input");
    var img = Text_Smolder_Markup.leaf("img");
    var iframe = Text_Smolder_Markup.parent("iframe");
    var i = Text_Smolder_Markup.parent("i");
    var html = Text_Smolder_Markup.parent("html");
    var hr = Text_Smolder_Markup.leaf("hr");
    var hgroup = Text_Smolder_Markup.parent("hgroup");
    var header = Text_Smolder_Markup.parent("header");
    var head = Text_Smolder_Markup.parent("head");
    var h6 = Text_Smolder_Markup.parent("h6");
    var h5 = Text_Smolder_Markup.parent("h5");
    var h4 = Text_Smolder_Markup.parent("h4");
    var h3 = Text_Smolder_Markup.parent("h3");
    var h2 = Text_Smolder_Markup.parent("h2");
    var h1 = Text_Smolder_Markup.parent("h1");
    var form = Text_Smolder_Markup.parent("form");
    var footer = Text_Smolder_Markup.parent("footer");
    var figure = Text_Smolder_Markup.parent("figure");
    var figcaption = Text_Smolder_Markup.parent("figcaption");
    var fieldset = Text_Smolder_Markup.parent("fieldset");
    var embed = Text_Smolder_Markup.leaf("embed");
    var em = Text_Smolder_Markup.parent("em");
    var dt = Text_Smolder_Markup.parent("dt");
    var dl = Text_Smolder_Markup.parent("dl");
    var div = Text_Smolder_Markup.parent("div");
    var dfn = Text_Smolder_Markup.parent("dfn");
    var details = Text_Smolder_Markup.parent("details");
    var del = Text_Smolder_Markup.parent("del");
    var dd = Text_Smolder_Markup.parent("dd");
    var datalist = Text_Smolder_Markup.parent("datalist");
    var command = Text_Smolder_Markup.parent("command");
    var colgroup = Text_Smolder_Markup.parent("colgroup");
    var col = Text_Smolder_Markup.leaf("col");
    var code = Text_Smolder_Markup.parent("code");
    var cite = Text_Smolder_Markup.parent("cite");
    var caption = Text_Smolder_Markup.parent("caption");
    var canvas = Text_Smolder_Markup.parent("canvas");
    var button = Text_Smolder_Markup.parent("button");
    var br = Text_Smolder_Markup.leaf("br");
    var body = Text_Smolder_Markup.parent("body");
    var blockquote = Text_Smolder_Markup.parent("blockquote");
    var bdo = Text_Smolder_Markup.parent("bdo");
    var base = Text_Smolder_Markup.leaf("base");
    var b = Text_Smolder_Markup.parent("b");
    var audio = Text_Smolder_Markup.parent("audio");
    var aside = Text_Smolder_Markup.parent("aside");
    var article = Text_Smolder_Markup.parent("article");
    var area = Text_Smolder_Markup.leaf("area");
    var address = Text_Smolder_Markup.parent("address");
    var abbr = Text_Smolder_Markup.parent("abbr");
    var a = Text_Smolder_Markup.parent("a");
    return {
        wbr: wbr, 
        track: track, 
        source: source, 
        param: param, 
        meta: meta, 
        menuitem: menuitem, 
        link: link, 
        keygen: keygen, 
        input: input, 
        img: img, 
        hr: hr, 
        embed: embed, 
        col: col, 
        br: br, 
        base: base, 
        area: area, 
        video: video, 
        "var": $$var, 
        ul: ul, 
        tr: tr, 
        title: title, 
        time: time, 
        thead: thead, 
        th: th, 
        tfoot: tfoot, 
        textarea: textarea, 
        td: td, 
        tbody: tbody, 
        table: table, 
        sup: sup, 
        summary: summary, 
        sub: sub, 
        style: style, 
        strong: strong, 
        span: span, 
        small: small, 
        select: select, 
        section: section, 
        script: script, 
        samp: samp, 
        ruby: ruby, 
        rt: rt, 
        rp: rp, 
        q: q, 
        progress: progress, 
        pre: pre, 
        p: p, 
        output: output, 
        option: option, 
        optgroup: optgroup, 
        ol: ol, 
        object: object, 
        noscript: noscript, 
        nav: nav, 
        meter: meter, 
        menu: menu, 
        mark: mark, 
        map: map, 
        li: li, 
        legend: legend, 
        label: label, 
        kbd: kbd, 
        ins: ins, 
        iframe: iframe, 
        i: i, 
        html: html, 
        hgroup: hgroup, 
        header: header, 
        head: head, 
        h6: h6, 
        h5: h5, 
        h4: h4, 
        h3: h3, 
        h2: h2, 
        h1: h1, 
        form: form, 
        footer: footer, 
        figure: figure, 
        figcaption: figcaption, 
        fieldset: fieldset, 
        em: em, 
        dt: dt, 
        dl: dl, 
        div: div, 
        dfn: dfn, 
        details: details, 
        del: del, 
        dd: dd, 
        datalist: datalist, 
        command: command, 
        colgroup: colgroup, 
        code: code, 
        cite: cite, 
        caption: caption, 
        canvas: canvas, 
        button: button, 
        body: body, 
        blockquote: blockquote, 
        bdo: bdo, 
        b: b, 
        audio: audio, 
        aside: aside, 
        article: article, 
        address: address, 
        abbr: abbr, 
        a: a
    };
})();
var PS = PS || {};
PS.Data_Json_JTable_Internal = (function () {
    "use strict";
    var Data_String = PS.Data_String;
    var Prelude = PS.Prelude;
    var Data_Argonaut_Core = PS.Data_Argonaut_Core;
    var Data_Argonaut_JCursor = PS.Data_Argonaut_JCursor;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Array = PS.Data_Array;
    var Data_Foldable = PS.Data_Foldable;
    var Math = PS.Math;
    var Control_MonadPlus = PS.Control_MonadPlus;
    var Data_StrMap = PS.Data_StrMap;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Traversable = PS.Data_Traversable;
    var Data_Array_Unsafe = PS.Data_Array_Unsafe;
    var Text_Smolder_Markup = PS.Text_Smolder_Markup;
    var Text_Smolder_HTML = PS.Text_Smolder_HTML;
    var Data_Either = PS.Data_Either;
    var Control_Alt = PS.Control_Alt;
    var Control_Apply = PS.Control_Apply;
    var Control_Bind = PS.Control_Bind;
    var Control_Monad = PS.Control_Monad;
    var Data_Argonaut_Parser = PS.Data_Argonaut_Parser;
    
    /**
     *  header data
     */
    var T = (function () {
        function T(value0, value1, value2, value3) {
            this.value0 = value0;
            this.value1 = value1;
            this.value2 = value2;
            this.value3 = value3;
        };
        T.create = function (value0) {
            return function (value1) {
                return function (value2) {
                    return function (value3) {
                        return new T(value0, value1, value2, value3);
                    };
                };
            };
        };
        return T;
    })();
    
    /**
     *  cell data
     */
    var C = (function () {
        function C(value0, value1, value2, value3) {
            this.value0 = value0;
            this.value1 = value1;
            this.value2 = value2;
            this.value3 = value3;
        };
        C.create = function (value0) {
            return function (value1) {
                return function (value2) {
                    return function (value3) {
                        return new C(value0, value1, value2, value3);
                    };
                };
            };
        };
        return C;
    })();
    var zipWithIndex = function (xs) {
        return Data_Tuple.zip(xs)(Data_Array[".."](0)(Data_Array.length(xs) - 1));
    };
    
    /**
     *  maybe return the width of a tuple composed of primitive values
     */
    var widthOfPrimTuple = function (hS) {
        return function (path) {
            return function (ja) {
                return Control_Apply["*>"](Data_Maybe.applyMaybe)(Control_Apply["*>"](Data_Maybe.applyMaybe)(Data_Array["!!"](path)(0))(Data_Array["!!"](ja)(1)))((function () {
                    var types = Prelude["<#>"](Data_Array.functorArray)(ja)(Data_Argonaut_Core.foldJson(function (_) {
                        return 0;
                    })(function (_) {
                        return 1;
                    })(function (_) {
                        return 2;
                    })(function (_) {
                        return 3;
                    })(function (_) {
                        return 4;
                    })(function (_) {
                        return 4;
                    }));
                    var not_same = Data_Array.length(Data_Array.nub(Prelude.eqNumber)(types)) !== 1;
                    var homoTup = Data_Array.length(ja) <= Math.max(1)(hS);
                    var all_prim = Data_Foldable.all(Data_Foldable.foldableArray)(Prelude["/="](Prelude.eqNumber)(4))(types);
                    return Prelude["<#>"](Data_Maybe.functorMaybe)(Control_MonadPlus.guard(Data_Maybe.monadPlusMaybe)(all_prim && (not_same || homoTup)))(function (_) {
                        return Data_Array.length(ja);
                    });
                })());
            };
        };
    };
    var tWidth = function (_959) {
        return _959.value1;
    };
    var tPath = function (_958) {
        return _958.value0;
    };
    
    /**
     *  add child to tree, unify if exists
     */
    var tMergeArray = function (_966) {
        return function (_967) {
            var i = Data_Array.findIndex(function (n) {
                return Prelude["=="](Data_Maybe.eqMaybe(Prelude.eqString))(Data_Array.last(_967.value0))(Data_Array.last(tPath(n)));
            })(_966.value3);
            var _3516 = Data_Array["!!"](_966.value3)(i);
            if (_3516 instanceof Data_Maybe.Just) {
                var _3517 = Data_Foldable.foldl(Data_Foldable.foldableArray)(tMergeArray)(_3516.value0)(_967.value3);
                var h$prime = Math.max(_966.value2)(_3517.value2 + 1);
                var cw$prime$prime = Math.max(_3517.value1)(_967.value1);
                var k$prime = Data_Array.updateAt(i)(new T(_3516.value0.value0, cw$prime$prime, _3517.value2, _3517.value3))(_966.value3);
                var w$prime = (_966.value1 - _3516.value0.value1) + cw$prime$prime;
                return new T(_966.value0, w$prime, h$prime, k$prime);
            };
            if (_3516 instanceof Data_Maybe.Nothing) {
                var w$prime = (function () {
                    var _3527 = Data_Array["null"](_966.value3);
                    if (_3527) {
                        return _967.value1;
                    };
                    if (!_3527) {
                        return _966.value1 + _967.value1;
                    };
                    throw new Error("Failed pattern match");
                })();
                var k$prime = Data_Array.snoc(_966.value3)(_967);
                var h$prime = Math.max(_966.value2)(_967.value2 + 1);
                return new T(_966.value0, w$prime, h$prime, k$prime);
            };
            throw new Error("Failed pattern match");
        };
    };
    var tKids = function (_961) {
        return _961.value3;
    };
    
    /**
     *  produce header rows from header tree
     */
    var tsToRows = function (ts) {
        var _3541 = Data_Array["null"](ts);
        if (_3541) {
            return [  ];
        };
        if (!_3541) {
            return Prelude[":"](ts)(tsToRows(Prelude[">>="](Data_Array.bindArray)(ts)(tKids)));
        };
        throw new Error("Failed pattern match");
    };
    var tHeight = function (_960) {
        return _960.value2;
    };
    var strcmp = function (s1) {
        return function (s2) {
            return Prelude.compare(Prelude.ordNumber)(Data_String.localeCompare(s1)(s2))(0);
        };
    };
    
    /**
     *  sort header tree by ColumnOrdering
     */
    var sortTree = function (_978) {
        return function (_979) {
            return T.create(_979.value0)(_979.value1)(_979.value2)(Data_Array.sortBy(function (t1) {
                return function (t2) {
                    return _978(tPath(t1))(tPath(t2));
                };
            })(Prelude["<#>"](Data_Array.functorArray)(_979.value3)(sortTree(_978))));
        };
    };
    var showTree = new Prelude.Show(function (_982) {
        return Data_String.joinWith(" ")([ "(T", Prelude.show(Prelude.showArray(Prelude.showString))(_982.value0), Prelude.show(Prelude.showNumber)(_982.value1), Prelude.show(Prelude.showNumber)(_982.value2), Prelude.show(Prelude.showArray(showTree))(_982.value3), ")" ]);
    });
    var showCell = new Prelude.Show(function (_983) {
        return Data_String.joinWith(" ")([ "(C", Prelude.show(Prelude.showNumber)(_983.value1), Prelude.show(Prelude.showNumber)(_983.value2), Prelude.show(Data_Argonaut_JCursor.showJCursor)(_983.value0), Prelude.show(Data_Argonaut_JCursor.showJsonPrim)(_983.value3), ")" ]);
    });
    
    /**
     *  render a grid from an array of arrays
     */
    var renderRows = function (tr$prime) {
        return function (cellf) {
            return function (rows) {
                return Data_Foldable.mconcat(Data_Foldable.foldableArray)(Text_Smolder_Markup.monoidMarkup)(Prelude[">>="](Data_Array.bindArray)(zipWithIndex(rows))(function (_43) {
                    return Prelude["return"](Data_Array.monadArray)(tr$prime(Data_Foldable.mconcat(Data_Foldable.foldableArray)(Text_Smolder_Markup.monoidMarkup)(Prelude[">>="](Data_Array.bindArray)(zipWithIndex(_43.value0))(function (_42) {
                        return Prelude["return"](Data_Array.monadArray)(cellf(_43.value1)(_42.value1)(_42.value0));
                    }))));
                }));
            };
        };
    };
    var orelse = function (f) {
        return function (g) {
            return function (x) {
                var _3569 = f(x);
                if (_3569 instanceof Data_Maybe.Just) {
                    return _3569.value0;
                };
                return g(x);
            };
        };
    };
    
    /**
     *  pad tall header cells from above
     */
    var insertHeaderCells = function (_980) {
        return function (_981) {
            var _3573 = Data_Array["null"](_981.value3);
            if (_3573) {
                var _3574 = _980 > 0;
                if (_3574) {
                    return new T([  ], _981.value1, 1, [ insertHeaderCells(_980 - 1)(_981) ]);
                };
                if (!_3574) {
                    return new T(_981.value0, _981.value1, 1, _981.value3);
                };
                throw new Error("Failed pattern match");
            };
            if (!_3573) {
                return new T(_981.value0, _981.value1, _981.value2, Prelude["<#>"](Data_Array.functorArray)(_981.value3)(insertHeaderCells(_980 - 1)));
            };
            throw new Error("Failed pattern match");
        };
    };
    var foldJsonP = function (f) {
        return Data_Argonaut_Core.foldJson(function (_) {
            return f(Data_Argonaut_JCursor.primNull);
        })(Prelude["<<<"](Prelude.semigroupoidArr)(f)(Data_Argonaut_JCursor.primBool))(Prelude["<<<"](Prelude.semigroupoidArr)(f)(Data_Argonaut_JCursor.primNum))(Prelude["<<<"](Prelude.semigroupoidArr)(f)(Data_Argonaut_JCursor.primStr));
    };
    
    /**
     *  produce a tree of header data from json
     */
    var tFromJson = function (hS) {
        return function (path) {
            var tuple = function (ja) {
                return Prelude["<#>"](Data_Maybe.functorMaybe)(widthOfPrimTuple(hS)(path)(ja))(function (n) {
                    return new T(path, n, 0, [  ]);
                });
            };
            var prim = function (jp) {
                return new T(path, 1, 0, [  ]);
            };
            var obj = function (jo) {
                var _3579 = Data_StrMap.isEmpty(jo);
                if (_3579) {
                    return new T(path, 1, 0, [  ]);
                };
                if (!_3579) {
                    var k = Prelude["<#>"](Data_Array.functorArray)(Data_StrMap.toList(jo))(Data_Tuple.uncurry(function (l) {
                        return function (j) {
                            return tFromJson(hS)(Data_Array.snoc(path)(l))(j);
                        };
                    }));
                    var w = Data_Foldable.foldl(Data_Foldable.foldableArray)(Prelude["+"](Prelude.numNumber))(0)(Prelude["<#>"](Data_Array.functorArray)(k)(tWidth));
                    var h = 1 + Data_Foldable.foldl(Data_Foldable.foldableArray)(Math.max)(0)(Prelude["<#>"](Data_Array.functorArray)(k)(tHeight));
                    return new T(path, w, h, k);
                };
                throw new Error("Failed pattern match");
            };
            var array = function (ja) {
                var ts = Prelude["<#>"](Data_Array.functorArray)(ja)(tFromJson(hS)(path));
                var tsw = (function () {
                    var _3580 = Data_Array.nub(Prelude.eqNumber)(Prelude["<#>"](Data_Array.functorArray)(ts)(tWidth));
                    if (_3580.length >= 1) {
                        var _3582 = _3580.slice(1);
                        if (_3582.length === 0) {
                            return _3580[0];
                        };
                    };
                    return 1;
                })();
                var ks = Prelude[">>="](Data_Array.bindArray)(ts)(tKids);
                var t = Data_Foldable.foldl(Data_Foldable.foldableArray)(tMergeArray)(new T(path, 0, 0, [  ]))(ks);
                var w = Math.max(tsw)(tWidth(t));
                return new T(path, w, tHeight(t), tKids(t));
            };
            return foldJsonP(prim)(orelse(tuple)(array))(obj);
        };
    };
    var toPrim = foldJsonP(Data_Maybe.Just.create)(Prelude["const"](Data_Maybe.Nothing.value))(Prelude["const"](Data_Maybe.Nothing.value));
    var cWidth = function (_963) {
        return _963.value1;
    };
    
    /**
     *  merge table segments for each key of an object into one
     */
    var cMergeObj = function (rss) {
        var maxh = Data_Foldable.foldl(Data_Foldable.foldableArray)(Math.max)(0)(Prelude["<#>"](Data_Array.functorArray)(Prelude["<#>"](Data_Array.functorArray)(rss)(Data_Tuple.snd))(Data_Array.length));
        return Prelude["<#>"](Data_Array.functorArray)(Data_Array[".."](0)(maxh - 1))(function (n) {
            return Prelude[">>="](Data_Array.bindArray)(rss)(Data_Tuple.uncurry(function (w) {
                return function (rs) {
                    var rnOr = Prelude.flip(Data_Maybe.fromMaybe)(Data_Array["!!"](rs)(n));
                    if (rs.length >= 1) {
                        var _3596 = rs.slice(1);
                        if (_3596.length === 0) {
                            var _3589 = n === 0;
                            if (_3589) {
                                return Prelude["<#>"](Data_Array.functorArray)(rs[0])(function (_955) {
                                    return new C(_955.value0, _955.value1, maxh, _955.value3);
                                });
                            };
                            if (!_3589) {
                                return rnOr([  ]);
                            };
                            throw new Error("Failed pattern match");
                        };
                    };
                    return rnOr([ new C(Data_Argonaut_JCursor.JCursorTop.value, w, 1, Data_Argonaut_JCursor.primNull) ]);
                };
            }));
        });
    };
    var cJsonPrim = function (_965) {
        return _965.value3;
    };
    var cHeight = function (_964) {
        return _964.value2;
    };
    var mergeObjTuple = function (_968) {
        return function (_969) {
            return function (_970) {
                return function (_971) {
                    return Control_Apply["*>"](Data_Maybe.applyMaybe)(Data_Array.head(_971))(Prelude[">>="](Data_Maybe.bindMaybe)(Data_Traversable["for"](Data_Maybe.applicativeMaybe)(Data_Traversable.traversableArray)(_971)(Data_Argonaut_Core.toObject))(function (_41) {
                        var keyss = Prelude["<#>"](Data_Array.functorArray)(_41)(Data_StrMap.keys);
                        var all_keys = Data_Array.concat(keyss);
                        return Prelude["<#>"](Data_Maybe.functorMaybe)(Control_MonadPlus.guard(Data_Maybe.monadPlusMaybe)(Data_Array.length(all_keys) === Data_Array.length(Data_Array.nub(Prelude.eqString)(all_keys))))(function (_) {
                            return cMergeObj(Prelude["<#>"](Data_Array.functorArray)(_969.value3)(function (_956) {
                                var label = Data_Array_Unsafe.last(_956.value0);
                                var i = Data_Array.findIndex(Data_Foldable.elem(Prelude.eqString)(Data_Foldable.foldableArray)(label))(keyss);
                                var j = Data_Maybe.fromMaybe(Data_Argonaut_JCursor.primToJson(Data_Argonaut_JCursor.primNull))(Prelude[">>="](Data_Maybe.bindMaybe)(Data_Array["!!"](_41)(i))(Data_StrMap.lookup(label)));
                                return new Data_Tuple.Tuple(_956.value1, cFromJson(_968)(_956)(Data_Argonaut_JCursor.downField(label)(Data_Argonaut_JCursor.downIndex(i)(_970)))(j));
                            }));
                        });
                    }));
                };
            };
        };
    };
    var cFromJson = function (_972) {
        return function (_973) {
            return function (_974) {
                var width = (function () {
                    var _3624 = _973.value2 <= 0 && _973.value1 > 1;
                    if (_3624) {
                        return widthOfPrimTuple(_972)(_973.value0);
                    };
                    if (!_3624) {
                        return Prelude["const"](Data_Maybe.Nothing.value);
                    };
                    throw new Error("Failed pattern match");
                })();
                var primtup = function (ja) {
                    return Prelude["<#>"](Data_Maybe.functorMaybe)(width(ja))(function (_) {
                        return Data_Array.singleton(Prelude["<#>"](Data_Array.functorArray)(Data_Array[".."](0)(_973.value1 - 1))(function (i) {
                            return C.create(Data_Argonaut_JCursor.downIndex(i)(_974))(1)(1)(Data_Maybe.fromMaybe(Data_Argonaut_JCursor.primNull)(Prelude[">>="](Data_Maybe.bindMaybe)(Data_Array["!!"](ja)(i))(toPrim)));
                        }));
                    });
                };
                var prim = function (jp) {
                    return [ [ new C(_974, _973.value1, 1, jp) ] ];
                };
                var objtup = mergeObjTuple(_972)(_973)(_974);
                var tuple = function (ja) {
                    var _3625 = primtup(ja);
                    if (_3625 instanceof Data_Maybe.Nothing) {
                        return objtup(ja);
                    };
                    return _3625;
                };
                var obj = function (jo) {
                    var _3626 = Data_StrMap.isEmpty(jo);
                    if (_3626) {
                        return [ [ new C(_974, _973.value1, 1, Data_Argonaut_JCursor.primNull) ] ];
                    };
                    if (!_3626) {
                        return cMergeObj(Prelude["<#>"](Data_Array.functorArray)(_973.value3)(function (_957) {
                            var label = Data_Array_Unsafe.last(_957.value0);
                            var j = Data_Maybe.fromMaybe(Data_Argonaut_JCursor.primToJson(Data_Argonaut_JCursor.primNull))(Data_StrMap.lookup(label)(jo));
                            return new Data_Tuple.Tuple(_957.value1, cFromJson(_972)(_957)(Data_Argonaut_JCursor.downField(label)(_974))(j));
                        }));
                    };
                    throw new Error("Failed pattern match");
                };
                var array = function (ja) {
                    return Prelude[">>="](Data_Array.bindArray)(zipWithIndex(ja))(Data_Tuple.uncurry(function (j) {
                        return function (i) {
                            return cFromJson(_972)(_973)(Data_Argonaut_JCursor.downIndex(i)(_974))(j);
                        };
                    }));
                };
                return foldJsonP(prim)(orelse(tuple)(array))(obj);
            };
        };
    };
    var cCursor = function (_962) {
        return _962.value0;
    };
    var _nattr = function (attr) {
        return function (n) {
            return function (m) {
                var _3641 = n > 1;
                if (_3641) {
                    return Text_Smolder_Markup["!"](Text_Smolder_Markup.attributableMarkupM)(m)(Text_Smolder_Markup.attribute(attr)(Prelude.show(Prelude.showNumber)(n)));
                };
                if (!_3641) {
                    return m;
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var _rspan = _nattr("rowspan");
    var _cspan = _nattr("colspan");
    var renderTbody = function (tr$prime) {
        return function (tdf) {
            return function (t) {
                return function (table) {
                    var tdf$prime = function (_987) {
                        return function (_988) {
                            return function (_989) {
                                return Prelude[">>>"](Prelude.semigroupoidArr)(_cspan(_989.value1))(_rspan(_989.value2))(tdf(_989));
                            };
                        };
                    };
                    return renderRows(tr$prime)(tdf$prime)(table);
                };
            };
        };
    };
    var renderThead = function (_975) {
        return function (_976) {
            return function (_977) {
                var rs = function (i) {
                    return function (k_1) {
                        var _3652 = Data_Array["null"](k_1);
                        if (_3652) {
                            return _977.value2 - i;
                        };
                        if (!_3652) {
                            return 1;
                        };
                        throw new Error("Failed pattern match");
                    };
                };
                var tdf$prime = function (_984) {
                    return function (_985) {
                        return function (_986) {
                            return Prelude[">>>"](Prelude.semigroupoidArr)(_cspan(_986.value1))(_rspan(rs(_984)(_986.value3)))(_976(_986));
                        };
                    };
                };
                return renderRows(_975)(tdf$prime)(tsToRows(_977.value3));
            };
        };
    };
    
    /**
     *  renderJTableRaw :: {...} -> Json
     */
    var renderJTableRaw = function (o) {
        return function (json) {
            return o.style.table((function () {
                var t = sortTree(o.columnOrdering)(tFromJson(o.maxHomoTupSize)([  ])(json));
                var t$prime = (function () {
                    if (o.insertHeaderCells) {
                        return insertHeaderCells(tHeight(t))(t);
                    };
                    if (!o.insertHeaderCells) {
                        return t;
                    };
                    throw new Error("Failed pattern match");
                })();
                var table = cFromJson(o.maxHomoTupSize)(t)(Data_Argonaut_JCursor.JCursorTop.value)(json);
                return Prelude[">>="](Text_Smolder_Markup.bindMarkupM)(Text_Smolder_HTML.thead(renderThead(o.style.tr)(o.style.th)(t$prime)))(function () {
                    return Text_Smolder_HTML.tbody(renderTbody(o.style.tr)(o.style.td)(t)(table));
                });
            })());
        };
    };
    return {
        C: C, 
        T: T, 
        _rspan: _rspan, 
        _cspan: _cspan, 
        _nattr: _nattr, 
        strcmp: strcmp, 
        orelse: orelse, 
        zipWithIndex: zipWithIndex, 
        toPrim: toPrim, 
        foldJsonP: foldJsonP, 
        mergeObjTuple: mergeObjTuple, 
        cMergeObj: cMergeObj, 
        cFromJson: cFromJson, 
        insertHeaderCells: insertHeaderCells, 
        widthOfPrimTuple: widthOfPrimTuple, 
        tMergeArray: tMergeArray, 
        tFromJson: tFromJson, 
        cJsonPrim: cJsonPrim, 
        cHeight: cHeight, 
        cWidth: cWidth, 
        cCursor: cCursor, 
        tKids: tKids, 
        tHeight: tHeight, 
        tWidth: tWidth, 
        tPath: tPath, 
        sortTree: sortTree, 
        tsToRows: tsToRows, 
        renderTbody: renderTbody, 
        renderThead: renderThead, 
        renderRows: renderRows, 
        renderJTableRaw: renderJTableRaw, 
        showTree: showTree, 
        showCell: showCell
    };
})();
var PS = PS || {};
PS.Text_Smolder_HTML_Attributes = (function () {
    "use strict";
    var Text_Smolder_Markup = PS.Text_Smolder_Markup;
    var Prelude = PS.Prelude;
    var xmlns = Text_Smolder_Markup.attribute("xmlns");
    var wrap = Text_Smolder_Markup.attribute("wrap");
    var width = Text_Smolder_Markup.attribute("width");
    var value = Text_Smolder_Markup.attribute("value");
    var usemap = Text_Smolder_Markup.attribute("usemap");
    var type$prime = Text_Smolder_Markup.attribute("type");
    var title = Text_Smolder_Markup.attribute("title");
    var target = Text_Smolder_Markup.attribute("target");
    var tabindex = Text_Smolder_Markup.attribute("tabindex");
    var summary = Text_Smolder_Markup.attribute("summary");
    var subject = Text_Smolder_Markup.attribute("subject");
    var style = Text_Smolder_Markup.attribute("style");
    var step = Text_Smolder_Markup.attribute("step");
    var start = Text_Smolder_Markup.attribute("start");
    var srcdoc = Text_Smolder_Markup.attribute("srcdoc");
    var src = Text_Smolder_Markup.attribute("src");
    var spellcheck = Text_Smolder_Markup.attribute("spellcheck");
    var span = Text_Smolder_Markup.attribute("span");
    var sizes = Text_Smolder_Markup.attribute("sizes");
    var size = Text_Smolder_Markup.attribute("size");
    var shape = Text_Smolder_Markup.attribute("shape");
    var selected = Text_Smolder_Markup.attribute("selected");
    var seamless = Text_Smolder_Markup.attribute("seamless");
    var scoped = Text_Smolder_Markup.attribute("scoped");
    var scope = Text_Smolder_Markup.attribute("scope");
    var sandbox = Text_Smolder_Markup.attribute("sandbox");
    var rowspan = Text_Smolder_Markup.attribute("rowspan");
    var rows = Text_Smolder_Markup.attribute("rows");
    var reversed = Text_Smolder_Markup.attribute("reversed");
    var required = Text_Smolder_Markup.attribute("required");
    var rel = Text_Smolder_Markup.attribute("rel");
    var readonly = Text_Smolder_Markup.attribute("readonly");
    var radiogroup = Text_Smolder_Markup.attribute("radiogroup");
    var pubdate = Text_Smolder_Markup.attribute("pubdate");
    var preload = Text_Smolder_Markup.attribute("preload");
    var placeholder = Text_Smolder_Markup.attribute("placeholder");
    var ping = Text_Smolder_Markup.attribute("ping");
    var pattern = Text_Smolder_Markup.attribute("pattern");
    var optimum = Text_Smolder_Markup.attribute("optimum");
    var open = Text_Smolder_Markup.attribute("open");
    var onwaiting = Text_Smolder_Markup.attribute("onwaiting");
    var onvolumechange = Text_Smolder_Markup.attribute("onvolumechange");
    var onunload = Text_Smolder_Markup.attribute("onunload");
    var onundo = Text_Smolder_Markup.attribute("onundo");
    var ontimeupdate = Text_Smolder_Markup.attribute("ontimeupdate");
    var onsuspend = Text_Smolder_Markup.attribute("onsuspend");
    var onsubmit = Text_Smolder_Markup.attribute("onsubmit");
    var onstorage = Text_Smolder_Markup.attribute("onstorage");
    var onstalled = Text_Smolder_Markup.attribute("onstalled");
    var onselect = Text_Smolder_Markup.attribute("onselect");
    var onseeking = Text_Smolder_Markup.attribute("onseeking");
    var onseeked = Text_Smolder_Markup.attribute("onseeked");
    var onscroll = Text_Smolder_Markup.attribute("onscroll");
    var onresize = Text_Smolder_Markup.attribute("onresize");
    var onredo = Text_Smolder_Markup.attribute("onredo");
    var onreadystatechange = Text_Smolder_Markup.attribute("onreadystatechange");
    var onratechange = Text_Smolder_Markup.attribute("onratechange");
    var onpropstate = Text_Smolder_Markup.attribute("onpropstate");
    var onprogress = Text_Smolder_Markup.attribute("onprogress");
    var onplaying = Text_Smolder_Markup.attribute("onplaying");
    var onplay = Text_Smolder_Markup.attribute("onplay");
    var onpause = Text_Smolder_Markup.attribute("onpause");
    var onpageshow = Text_Smolder_Markup.attribute("onpageshow");
    var onpagehide = Text_Smolder_Markup.attribute("onpagehide");
    var ononline = Text_Smolder_Markup.attribute("ononline");
    var onmousewheel = Text_Smolder_Markup.attribute("onmousewheel");
    var onmouseup = Text_Smolder_Markup.attribute("onmouseup");
    var onmouseover = Text_Smolder_Markup.attribute("onmouseover");
    var onmouseout = Text_Smolder_Markup.attribute("onmouseout");
    var onmousemove = Text_Smolder_Markup.attribute("onmousemove");
    var onmousedown = Text_Smolder_Markup.attribute("onmousedown");
    var onmessage = Text_Smolder_Markup.attribute("onmessage");
    var onloadstart = Text_Smolder_Markup.attribute("onloadstart");
    var onloadedmetadata = Text_Smolder_Markup.attribute("onloadedmetadata");
    var onloadeddata = Text_Smolder_Markup.attribute("onloadeddata");
    var onload = Text_Smolder_Markup.attribute("onload");
    var onkeyup = Text_Smolder_Markup.attribute("onkeyup");
    var onkeydown = Text_Smolder_Markup.attribute("onkeydown");
    var oninvalid = Text_Smolder_Markup.attribute("oninvalid");
    var oninput = Text_Smolder_Markup.attribute("oninput");
    var onhaschange = Text_Smolder_Markup.attribute("onhaschange");
    var onforminput = Text_Smolder_Markup.attribute("onforminput");
    var onformchange = Text_Smolder_Markup.attribute("onformchange");
    var onfocus = Text_Smolder_Markup.attribute("onfocus");
    var onerror = Text_Smolder_Markup.attribute("onerror");
    var onended = Text_Smolder_Markup.attribute("onended");
    var onemptied = Text_Smolder_Markup.attribute("onemptied");
    var ondurationchange = Text_Smolder_Markup.attribute("ondurationchange");
    var ondrop = Text_Smolder_Markup.attribute("ondrop");
    var ondragstart = Text_Smolder_Markup.attribute("ondragstart");
    var ondragover = Text_Smolder_Markup.attribute("ondragover");
    var ondragleave = Text_Smolder_Markup.attribute("ondragleave");
    var ondragenter = Text_Smolder_Markup.attribute("ondragenter");
    var ondragend = Text_Smolder_Markup.attribute("ondragend");
    var ondrag = Text_Smolder_Markup.attribute("ondrag");
    var ondblclick = Text_Smolder_Markup.attribute("ondblclick");
    var oncontextmenu = Text_Smolder_Markup.attribute("oncontextmenu");
    var onclick = Text_Smolder_Markup.attribute("onclick");
    var onchange = Text_Smolder_Markup.attribute("onchange");
    var oncanplaythrough = Text_Smolder_Markup.attribute("oncanplaythrough");
    var oncanplay = Text_Smolder_Markup.attribute("oncanplay");
    var onblur = Text_Smolder_Markup.attribute("onblur");
    var onbeforeprint = Text_Smolder_Markup.attribute("onbeforeprint");
    var onbeforeonload = Text_Smolder_Markup.attribute("onbeforeonload");
    var novalidate = Text_Smolder_Markup.attribute("novalidate");
    var name = Text_Smolder_Markup.attribute("name");
    var multiple = Text_Smolder_Markup.attribute("multiple");
    var min = Text_Smolder_Markup.attribute("min");
    var method = Text_Smolder_Markup.attribute("method");
    var media = Text_Smolder_Markup.attribute("media");
    var maxlength = Text_Smolder_Markup.attribute("maxlength");
    var max = Text_Smolder_Markup.attribute("max");
    var manifest = Text_Smolder_Markup.attribute("manifest");
    var low = Text_Smolder_Markup.attribute("low");
    var loop = Text_Smolder_Markup.attribute("loop");
    var list = Text_Smolder_Markup.attribute("list");
    var lang = Text_Smolder_Markup.attribute("lang");
    var label = Text_Smolder_Markup.attribute("label");
    var keytype = Text_Smolder_Markup.attribute("keytype");
    var itemprop = Text_Smolder_Markup.attribute("itemprop");
    var item = Text_Smolder_Markup.attribute("item");
    var ismap = Text_Smolder_Markup.attribute("ismap");
    var id = Text_Smolder_Markup.attribute("id");
    var icon = Text_Smolder_Markup.attribute("icon");
    var httpEquiv = Text_Smolder_Markup.attribute("http-equiv");
    var hreflang = Text_Smolder_Markup.attribute("hreflang");
    var href = Text_Smolder_Markup.attribute("href");
    var high = Text_Smolder_Markup.attribute("high");
    var hidden = Text_Smolder_Markup.attribute("hidden");
    var height = Text_Smolder_Markup.attribute("height");
    var headers = Text_Smolder_Markup.attribute("headers");
    var formtarget = Text_Smolder_Markup.attribute("formtarget");
    var formnovalidate = Text_Smolder_Markup.attribute("formnovalidate");
    var formmethod = Text_Smolder_Markup.attribute("formmethod");
    var formenctype = Text_Smolder_Markup.attribute("formenctype");
    var formaction = Text_Smolder_Markup.attribute("formaction");
    var form = Text_Smolder_Markup.attribute("form");
    var $$for = Text_Smolder_Markup.attribute("for");
    var enctype = Text_Smolder_Markup.attribute("enctype");
    var draggable = Text_Smolder_Markup.attribute("draggable");
    var disabled = Text_Smolder_Markup.attribute("disabled");
    var dir = Text_Smolder_Markup.attribute("dir");
    var defer = Text_Smolder_Markup.attribute("defer");
    var datetime = Text_Smolder_Markup.attribute("datetime");
    var data$prime = Text_Smolder_Markup.attribute("data");
    var coords = Text_Smolder_Markup.attribute("coords");
    var controls = Text_Smolder_Markup.attribute("controls");
    var contextmenu = Text_Smolder_Markup.attribute("contextmenu");
    var contenteditable = Text_Smolder_Markup.attribute("contenteditable");
    var content = Text_Smolder_Markup.attribute("content");
    var colspan = Text_Smolder_Markup.attribute("colspan");
    var cols = Text_Smolder_Markup.attribute("cols");
    var className = Text_Smolder_Markup.attribute("class");
    var cite = Text_Smolder_Markup.attribute("cite");
    var checked = Text_Smolder_Markup.attribute("checked");
    var charset = Text_Smolder_Markup.attribute("charset");
    var challenge = Text_Smolder_Markup.attribute("challenge");
    var autoplay = Text_Smolder_Markup.attribute("autoplay");
    var autofocus = Text_Smolder_Markup.attribute("autofocus");
    var autocomplete = Text_Smolder_Markup.attribute("autocomplete");
    var async = Text_Smolder_Markup.attribute("async");
    var alt = Text_Smolder_Markup.attribute("alt");
    var action = Text_Smolder_Markup.attribute("action");
    var accesskey = Text_Smolder_Markup.attribute("accesskey");
    var acceptCharset = Text_Smolder_Markup.attribute("accept-charset");
    var accept = Text_Smolder_Markup.attribute("accept");
    return {
        xmlns: xmlns, 
        wrap: wrap, 
        width: width, 
        value: value, 
        usemap: usemap, 
        "type'": type$prime, 
        title: title, 
        target: target, 
        tabindex: tabindex, 
        summary: summary, 
        subject: subject, 
        style: style, 
        step: step, 
        start: start, 
        srcdoc: srcdoc, 
        src: src, 
        spellcheck: spellcheck, 
        span: span, 
        sizes: sizes, 
        size: size, 
        shape: shape, 
        selected: selected, 
        seamless: seamless, 
        scoped: scoped, 
        scope: scope, 
        sandbox: sandbox, 
        rowspan: rowspan, 
        rows: rows, 
        reversed: reversed, 
        required: required, 
        rel: rel, 
        readonly: readonly, 
        radiogroup: radiogroup, 
        pubdate: pubdate, 
        preload: preload, 
        placeholder: placeholder, 
        ping: ping, 
        pattern: pattern, 
        optimum: optimum, 
        open: open, 
        onwaiting: onwaiting, 
        onvolumechange: onvolumechange, 
        onunload: onunload, 
        onundo: onundo, 
        ontimeupdate: ontimeupdate, 
        onsuspend: onsuspend, 
        onsubmit: onsubmit, 
        onstorage: onstorage, 
        onstalled: onstalled, 
        onselect: onselect, 
        onseeking: onseeking, 
        onseeked: onseeked, 
        onscroll: onscroll, 
        onresize: onresize, 
        onredo: onredo, 
        onreadystatechange: onreadystatechange, 
        onratechange: onratechange, 
        onpropstate: onpropstate, 
        onprogress: onprogress, 
        onplaying: onplaying, 
        onplay: onplay, 
        onpause: onpause, 
        onpageshow: onpageshow, 
        onpagehide: onpagehide, 
        ononline: ononline, 
        onmousewheel: onmousewheel, 
        onmouseup: onmouseup, 
        onmouseover: onmouseover, 
        onmouseout: onmouseout, 
        onmousemove: onmousemove, 
        onmousedown: onmousedown, 
        onmessage: onmessage, 
        onloadstart: onloadstart, 
        onloadedmetadata: onloadedmetadata, 
        onloadeddata: onloadeddata, 
        onload: onload, 
        onkeyup: onkeyup, 
        onkeydown: onkeydown, 
        oninvalid: oninvalid, 
        oninput: oninput, 
        onhaschange: onhaschange, 
        onforminput: onforminput, 
        onformchange: onformchange, 
        onfocus: onfocus, 
        onerror: onerror, 
        onended: onended, 
        onemptied: onemptied, 
        ondurationchange: ondurationchange, 
        ondrop: ondrop, 
        ondragstart: ondragstart, 
        ondragover: ondragover, 
        ondragleave: ondragleave, 
        ondragenter: ondragenter, 
        ondragend: ondragend, 
        ondrag: ondrag, 
        ondblclick: ondblclick, 
        onclick: onclick, 
        oncontextmenu: oncontextmenu, 
        onchange: onchange, 
        oncanplaythrough: oncanplaythrough, 
        oncanplay: oncanplay, 
        onblur: onblur, 
        onbeforeprint: onbeforeprint, 
        onbeforeonload: onbeforeonload, 
        novalidate: novalidate, 
        name: name, 
        multiple: multiple, 
        min: min, 
        method: method, 
        media: media, 
        maxlength: maxlength, 
        max: max, 
        manifest: manifest, 
        low: low, 
        loop: loop, 
        list: list, 
        lang: lang, 
        label: label, 
        keytype: keytype, 
        itemprop: itemprop, 
        item: item, 
        ismap: ismap, 
        id: id, 
        icon: icon, 
        httpEquiv: httpEquiv, 
        hreflang: hreflang, 
        href: href, 
        high: high, 
        hidden: hidden, 
        height: height, 
        headers: headers, 
        formtarget: formtarget, 
        formnovalidate: formnovalidate, 
        formmethod: formmethod, 
        formenctype: formenctype, 
        formaction: formaction, 
        form: form, 
        "for": $$for, 
        enctype: enctype, 
        draggable: draggable, 
        disabled: disabled, 
        dir: dir, 
        defer: defer, 
        datetime: datetime, 
        "data'": data$prime, 
        coords: coords, 
        controls: controls, 
        contextmenu: contextmenu, 
        contenteditable: contenteditable, 
        content: content, 
        colspan: colspan, 
        cols: cols, 
        className: className, 
        cite: cite, 
        checked: checked, 
        charset: charset, 
        challenge: challenge, 
        autoplay: autoplay, 
        autofocus: autofocus, 
        autocomplete: autocomplete, 
        async: async, 
        alt: alt, 
        action: action, 
        accesskey: accesskey, 
        acceptCharset: acceptCharset, 
        accept: accept
    };
})();
var PS = PS || {};
PS.Data_Json_JTable = (function () {
    "use strict";
    var Data_Argonaut_JCursor = PS.Data_Argonaut_JCursor;
    var Prelude = PS.Prelude;
    var Text_Smolder_HTML = PS.Text_Smolder_HTML;
    var Text_Smolder_Markup = PS.Text_Smolder_Markup;
    var Data_Array_Unsafe = PS.Data_Array_Unsafe;
    var Data_String = PS.Data_String;
    var Data_Foldable = PS.Data_Foldable;
    var Text_Smolder_HTML_Attributes = PS.Text_Smolder_HTML_Attributes;
    var Data_Json_JTable_Internal = PS.Data_Json_JTable_Internal;
    var Data_Argonaut_Core = PS.Data_Argonaut_Core;
    var renderJsonSimple = function (j) {
        return Data_Argonaut_JCursor.runJsonPrim(j)(Prelude["const"]("&nbsp;"))(Prelude.show(Prelude.showBoolean))(Prelude.show(Prelude.showNumber))(Prelude.id(Prelude.categoryArr));
    };
    var renderJTable = function (o) {
        return Data_Json_JTable_Internal.renderJTableRaw((function () {
            var _3667 = {};
            for (var _3668 in o) {
                if (o.hasOwnProperty(_3668)) {
                    _3667[_3668] = o[_3668];
                };
            };
            _3667.style = (function () {
                var _3665 = {};
                for (var _3666 in o.style) {
                    if (o.style.hasOwnProperty(_3666)) {
                        _3665[_3666] = o.style[_3666];
                    };
                };
                _3665.th = function (t) {
                    return o.style.th(Data_Json_JTable_Internal.tPath(t));
                };
                _3665.td = function (c) {
                    return o.style.td(Data_Json_JTable_Internal.cCursor(c))(Data_Json_JTable_Internal.cJsonPrim(c));
                };
                return _3665;
            })();
            return _3667;
        })());
    };
    var noStyle = {
        table: Text_Smolder_HTML.table, 
        tr: Text_Smolder_HTML.tr, 
        th: function (p) {
            return Text_Smolder_HTML.th(Text_Smolder_Markup.text(Data_Array_Unsafe.last(p)));
        }, 
        td: function (c) {
            return function (j) {
                return Text_Smolder_HTML.td(Text_Smolder_Markup.text(renderJsonSimple(j)));
            };
        }
    };
    var inOrdering = function (p1) {
        return function (p2) {
            return Prelude.EQ.value;
        };
    };
    var jTableOptsDefault = {
        style: noStyle, 
        columnOrdering: inOrdering, 
        insertHeaderCells: false, 
        maxHomoTupSize: 3
    };
    var renderJTableDef = renderJTable(jTableOptsDefault);
    var debugStyle = (function () {
        var _3669 = {};
        for (var _3670 in noStyle) {
            if (noStyle.hasOwnProperty(_3670)) {
                _3669[_3670] = noStyle[_3670];
            };
        };
        _3669.th = function (p) {
            return Text_Smolder_HTML.th(Text_Smolder_Markup.text(Data_String.joinWith(".")(p)));
        };
        _3669.td = function (c) {
            return function (j) {
                return Text_Smolder_HTML.td(Data_Foldable.mconcat(Data_Foldable.foldableArray)(Text_Smolder_Markup.monoidMarkup)([ Text_Smolder_Markup["!"](Text_Smolder_Markup.attributableMarkupMF)(Text_Smolder_HTML.small)(Text_Smolder_HTML_Attributes.className("grey"))(Text_Smolder_Markup.text(Prelude.show(Data_Argonaut_JCursor.showJCursor)(c))), Text_Smolder_HTML.br, Text_Smolder_Markup.text(Prelude.show(Data_Argonaut_JCursor.showJsonPrim)(j)) ]));
            };
        };
        return _3669;
    })();
    var bootstrapStyle = (function () {
        var _3671 = {};
        for (var _3672 in noStyle) {
            if (noStyle.hasOwnProperty(_3672)) {
                _3671[_3672] = noStyle[_3672];
            };
        };
        _3671.table = function (m) {
            return Text_Smolder_Markup["!"](Text_Smolder_Markup.attributableMarkupMF)(Text_Smolder_HTML.table)(Text_Smolder_Markup.attribute("class")("table"))(m);
        };
        return _3671;
    })();
    var alphaOrdering = function (p1) {
        return function (p2) {
            return Data_Json_JTable_Internal.strcmp(Data_Array_Unsafe.last(p1))(Data_Array_Unsafe.last(p2));
        };
    };
    return {
        debugStyle: debugStyle, 
        bootstrapStyle: bootstrapStyle, 
        noStyle: noStyle, 
        alphaOrdering: alphaOrdering, 
        inOrdering: inOrdering, 
        jTableOptsDefault: jTableOptsDefault, 
        renderJTableDef: renderJTableDef, 
        renderJTable: renderJTable
    };
})();
var PS = PS || {};
PS.Text_Smolder_Renderer_Util = (function () {
    "use strict";
    var Data_Map = PS.Data_Map;
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Tuple = PS.Data_Tuple;
    var Text_Smolder_Markup = PS.Text_Smolder_Markup;
    var Data_Array = PS.Data_Array;
    var Element = (function () {
        function Element(value0, value1, value2) {
            this.value0 = value0;
            this.value1 = value1;
            this.value2 = value2;
        };
        Element.create = function (value0) {
            return function (value1) {
                return function (value2) {
                    return new Element(value0, value1, value2);
                };
            };
        };
        return Element;
    })();
    var Text = (function () {
        function Text(value0) {
            this.value0 = value0;
        };
        Text.create = function (value0) {
            return new Text(value0);
        };
        return Text;
    })();
    var renderAttrs = function (xs) {
        var toTuple = function (_991) {
            return new Data_Tuple.Tuple(_991.value0, _991.value1);
        };
        return Data_Map.fromList(Prelude.ordString)(Prelude["<$>"](Data_Array.functorArray)(toTuple)(xs));
    };
    var renderMarkup = function (_990) {
        if (_990 instanceof Text_Smolder_Markup.Element && _990.value1 instanceof Data_Maybe.Just) {
            return Prelude[":"](new Element(_990.value0, renderAttrs(_990.value2), renderMarkup(_990.value1.value0)))(renderMarkup(_990.value3));
        };
        if (_990 instanceof Text_Smolder_Markup.Element && _990.value1 instanceof Data_Maybe.Nothing) {
            return Prelude[":"](new Element(_990.value0, renderAttrs(_990.value2), [  ]))(renderMarkup(_990.value3));
        };
        if (_990 instanceof Text_Smolder_Markup.Content) {
            return Prelude[":"](new Text(_990.value0))(renderMarkup(_990.value1));
        };
        if (_990 instanceof Text_Smolder_Markup.Return) {
            return [  ];
        };
        throw new Error("Failed pattern match");
    };
    return {
        Element: Element, 
        Text: Text, 
        renderMarkup: renderMarkup
    };
})();
var PS = PS || {};
PS.Text_Smolder_Renderer_String = (function () {
    "use strict";
    var Data_String = PS.Data_String;
    var Prelude = PS.Prelude;
    var Data_Map = PS.Data_Map;
    var Text_Smolder_Renderer_Util = PS.Text_Smolder_Renderer_Util;
    var Text_Smolder_Markup = PS.Text_Smolder_Markup;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Array = PS.Data_Array;
    var renderNode = function (_992) {
        if (_992 instanceof Text_Smolder_Renderer_Util.Element) {
            var showTail = function (_993) {
                if (_993.length === 0) {
                    return "/>";
                };
                return ">" + (Data_String.joinWith("")(Prelude["<$>"](Data_Array.functorArray)(Prelude.show(showNode))(_993)) + ("</" + (_992.value0 + ">")));
            };
            var showAttrs = function (a_1) {
                var pair = function (k) {
                    return " " + (k + (function () {
                        var _3691 = Data_Map.lookup(Prelude.ordString)(k)(a_1);
                        if (_3691 instanceof Data_Maybe.Just) {
                            return "=\"" + (_3691.value0 + "\"");
                        };
                        if (_3691 instanceof Data_Maybe.Nothing) {
                            return "";
                        };
                        throw new Error("Failed pattern match");
                    })());
                };
                return Data_String.joinWith("")(Prelude["<$>"](Data_Array.functorArray)(pair)(Data_Map.keys(a_1)));
            };
            return "<" + (_992.value0 + (showAttrs(_992.value1) + showTail(_992.value2)));
        };
        if (_992 instanceof Text_Smolder_Renderer_Util.Text) {
            return _992.value0;
        };
        throw new Error("Failed pattern match");
    };
    var showNode = new Prelude.Show(renderNode);
    var render = function (m) {
        return Data_String.joinWith("")(Prelude["<$>"](Data_Array.functorArray)(renderNode)(Text_Smolder_Renderer_Util.renderMarkup(m)));
    };
    var showMarkup = new Prelude.Show(render);
    return {
        renderNode: renderNode, 
        render: render, 
        showNode: showNode, 
        showMarkup: showMarkup
    };
})();
var PS = PS || {};
PS.Data_Json_JTable_Examples = (function () {
    "use strict";
    var Data_Json_JTable = PS.Data_Json_JTable;
    var Data_Json_JSemantic = PS.Data_Json_JSemantic;
    var Text_Smolder_HTML = PS.Text_Smolder_HTML;
    var Text_Smolder_HTML_Attributes = PS.Text_Smolder_HTML_Attributes;
    var Text_Smolder_Markup = PS.Text_Smolder_Markup;
    var Prelude = PS.Prelude;
    var Data_String = PS.Data_String;
    var Data_Array_Unsafe = PS.Data_Array_Unsafe;
    var Data_Array = PS.Data_Array;
    var Text_Smolder_Renderer_String = PS.Text_Smolder_Renderer_String;
    var Math = PS.Math;
    var Data_Argonaut_Core = PS.Data_Argonaut_Core;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Debug_Trace = PS.Debug_Trace;
    var Data_Date = PS.Data_Date;
    
function _main (render_markup) { return function (examples) {
  window.addEventListener("load", function () {
    var S = function (id) { return document.getElementById(id) }
    
    var render = function () { try { 
      var inp = JSON.parse(S("in").value)
      var renderer = examples[S("select_renderer").value]
      var out = render_markup(renderer(inp))
      S("out").innerHTML = out
    } catch (err) { S("out").innerText = err; throw err}}
    
    var benchmark = function () { try {
      var inp = JSON.parse(S("in").value)
      var renderer = examples[S("select_renderer").value]
      var markup;
      var t1 = performance.now()
      for (var i=0; i<100; i++) {
        markup = renderer(inp) }
      var t2 = performance.now()
      var out = render_markup(markup)
      S("out").innerHTML = out
      S("benchmark").innerText = (Math.floor(t2 - t1) / 100) + " ms"
    } catch (err) { S("out").innerText = err; throw err}}

    var select_example = function () {
      S("in").value = S("example-" + S("select").value).innerHTML 
      render() }
    
    S("select").addEventListener("change", select_example) 
    S("select_renderer").addEventListener("change", render) 
    S("but_render").addEventListener("click", render)
    S("but_benchmark").addEventListener("click", benchmark)
    S("in").addEventListener("keydown", function(e) {
      if ((e.keyCode == 10 || e.keyCode == 13) && e.ctrlKey) { render() } } )
    
    select_example() 
  })
}};
    
    /**
     *  we use style instead of class to keep it self-contained
     */
    var exSemantic = Data_Json_JTable.renderJTable((function () {
        var _3714 = {};
        for (var _3715 in Data_Json_JTable.jTableOptsDefault) {
            if (Data_Json_JTable.jTableOptsDefault.hasOwnProperty(_3715)) {
                _3714[_3715] = Data_Json_JTable.jTableOptsDefault[_3715];
            };
        };
        _3714.style = (function () {
            var _3712 = {};
            for (var _3713 in Data_Json_JTable.noStyle) {
                if (Data_Json_JTable.noStyle.hasOwnProperty(_3713)) {
                    _3712[_3713] = Data_Json_JTable.noStyle[_3713];
                };
            };
            _3712.td = function (c) {
                return function (j) {
                    var _3697 = Data_Json_JSemantic.toSemanticDef(j);
                    if (_3697 instanceof Data_Json_JSemantic.Integral) {
                        return Text_Smolder_Markup["!"](Text_Smolder_Markup.attributableMarkupMF)(Text_Smolder_HTML.td)(Text_Smolder_HTML_Attributes.style("text-align:right"))(Text_Smolder_Markup.text(Prelude.show(Prelude.showNumber)(_3697.value0)));
                    };
                    if (_3697 instanceof Data_Json_JSemantic.Fractional) {
                        return Text_Smolder_Markup["!"](Text_Smolder_Markup.attributableMarkupMF)(Text_Smolder_HTML.td)(Text_Smolder_HTML_Attributes.style("text-align:right"))((function () {
                            var s = Data_String.split(".")(Prelude.show(Prelude.showNumber)(_3697.value0));
                            return Prelude[">>="](Text_Smolder_Markup.bindMarkupM)(Text_Smolder_Markup.text(Data_Array_Unsafe.head(s)))(function () {
                                var _3699 = Data_Array.length(s) > 1;
                                if (_3699) {
                                    return Text_Smolder_Markup["!"](Text_Smolder_Markup.attributableMarkupMF)(Text_Smolder_HTML.small)(Text_Smolder_HTML_Attributes.style("color:#aaa"))(Text_Smolder_Markup.text("." + Data_Array_Unsafe.head(Data_Array_Unsafe.tail(s))));
                                };
                                if (!_3699) {
                                    return Text_Smolder_Markup.text("");
                                };
                                throw new Error("Failed pattern match");
                            });
                        })());
                    };
                    if (_3697 instanceof Data_Json_JSemantic.Date) {
                        return Text_Smolder_HTML.td(Text_Smolder_Markup.text(Prelude.show(Data_Date.showDate)(_3697.value0)));
                    };
                    if (_3697 instanceof Data_Json_JSemantic.DateTime) {
                        return Text_Smolder_HTML.td(Text_Smolder_Markup.text(Prelude.show(Data_Date.showDate)(_3697.value0)));
                    };
                    if (_3697 instanceof Data_Json_JSemantic.Time) {
                        return Text_Smolder_HTML.td(Text_Smolder_Markup.text(Prelude.show(Data_Date.showDate)(_3697.value0)));
                    };
                    if (_3697 instanceof Data_Json_JSemantic.Interval) {
                        return Text_Smolder_HTML.td(Text_Smolder_Markup.text(Prelude.show(Data_Date.showDate)(_3697.value0) + (" - " + Prelude.show(Data_Date.showDate)(_3697.value1))));
                    };
                    if (_3697 instanceof Data_Json_JSemantic.Text) {
                        return Text_Smolder_HTML.td(Text_Smolder_Markup.text("&laquo;" + (_3697.value0 + "&raquo;")));
                    };
                    if (_3697 instanceof Data_Json_JSemantic.Bool) {
                        if (_3697.value0) {
                            return Text_Smolder_Markup["!"](Text_Smolder_Markup.attributableMarkupMF)(Text_Smolder_HTML.td)(Text_Smolder_HTML_Attributes.style("background:#cfc; text-align:center"))(Text_Smolder_Markup.text("\u2714"));
                        };
                        if (!_3697.value0) {
                            return Text_Smolder_Markup["!"](Text_Smolder_Markup.attributableMarkupMF)(Text_Smolder_HTML.td)(Text_Smolder_HTML_Attributes.style("background:#fcc; text-align:center"))(Text_Smolder_Markup.text("\u274c"));
                        };
                        throw new Error("Failed pattern match");
                    };
                    if (_3697 instanceof Data_Json_JSemantic.Percent) {
                        return Text_Smolder_Markup["!"](Text_Smolder_Markup.attributableMarkupMF)(Text_Smolder_HTML.td)(Text_Smolder_HTML_Attributes.style("text-align: right"))((function () {
                            var _3709 = Prelude.compare(Prelude.ordNumber)(_3697.value0)(0);
                            if (_3709 instanceof Prelude.LT) {
                                return Text_Smolder_Markup["!"](Text_Smolder_Markup.attributableMarkupMF)(Text_Smolder_HTML.span)(Text_Smolder_HTML_Attributes.style("color:#a00"))(Text_Smolder_Markup.text(Prelude.show(Prelude.showNumber)(0 - _3697.value0) + "% \u25be"));
                            };
                            if (_3709 instanceof Prelude.EQ) {
                                return Text_Smolder_Markup["!"](Text_Smolder_Markup.attributableMarkupMF)(Text_Smolder_HTML.span)(Text_Smolder_HTML_Attributes.style("color:#000"))(Text_Smolder_Markup.text(Prelude.show(Prelude.showNumber)(_3697.value0) + "% \u25c2"));
                            };
                            if (_3709 instanceof Prelude.GT) {
                                return Text_Smolder_Markup["!"](Text_Smolder_Markup.attributableMarkupMF)(Text_Smolder_HTML.span)(Text_Smolder_HTML_Attributes.style("color:#0a0"))(Text_Smolder_Markup.text(Prelude.show(Prelude.showNumber)(_3697.value0) + "% \u25b4"));
                            };
                            throw new Error("Failed pattern match");
                        })());
                    };
                    if (_3697 instanceof Data_Json_JSemantic.Currency) {
                        return Text_Smolder_HTML.td(Text_Smolder_Markup.text(Prelude.show(Prelude.showNumber)(_3697.value0)));
                    };
                    if (_3697 instanceof Data_Json_JSemantic.NA) {
                        return Text_Smolder_Markup["!"](Text_Smolder_Markup.attributableMarkupMF)(Text_Smolder_HTML.td)(Text_Smolder_HTML_Attributes.style("background:#ddd"))(Text_Smolder_Markup.text("&nbsp;"));
                    };
                    throw new Error("Failed pattern match");
                };
            };
            return _3712;
        })();
        return _3714;
    })());
    var exHomoTupSize = Data_Json_JTable.renderJTable((function () {
        var _3716 = {};
        for (var _3717 in Data_Json_JTable.jTableOptsDefault) {
            if (Data_Json_JTable.jTableOptsDefault.hasOwnProperty(_3717)) {
                _3716[_3717] = Data_Json_JTable.jTableOptsDefault[_3717];
            };
        };
        _3716.maxHomoTupSize = 5;
        return _3716;
    })());
    var exDefault = Data_Json_JTable.renderJTableDef;
    var exDebug = Data_Json_JTable.renderJTable((function () {
        var _3718 = {};
        for (var _3719 in Data_Json_JTable.jTableOptsDefault) {
            if (Data_Json_JTable.jTableOptsDefault.hasOwnProperty(_3719)) {
                _3718[_3719] = Data_Json_JTable.jTableOptsDefault[_3719];
            };
        };
        _3718.style = Data_Json_JTable.debugStyle;
        return _3718;
    })());
    var exAltHeader = Data_Json_JTable.renderJTable((function () {
        var _3720 = {};
        for (var _3721 in Data_Json_JTable.jTableOptsDefault) {
            if (Data_Json_JTable.jTableOptsDefault.hasOwnProperty(_3721)) {
                _3720[_3721] = Data_Json_JTable.jTableOptsDefault[_3721];
            };
        };
        _3720.insertHeaderCells = true;
        return _3720;
    })());
    var exAlphaColumnOrd = Data_Json_JTable.renderJTable((function () {
        var _3722 = {};
        for (var _3723 in Data_Json_JTable.jTableOptsDefault) {
            if (Data_Json_JTable.jTableOptsDefault.hasOwnProperty(_3723)) {
                _3722[_3723] = Data_Json_JTable.jTableOptsDefault[_3723];
            };
        };
        _3722.columnOrdering = Data_Json_JTable.alphaOrdering;
        return _3722;
    })());
    var main = _main(Text_Smolder_Renderer_String.render)([ exDefault, exDebug, exSemantic, exAlphaColumnOrd, exAltHeader, exHomoTupSize ]);
    return {
        main: main, 
        _main: _main, 
        exHomoTupSize: exHomoTupSize, 
        exAltHeader: exAltHeader, 
        exAlphaColumnOrd: exAlphaColumnOrd, 
        exSemantic: exSemantic, 
        exDebug: exDebug, 
        exDefault: exDefault
    };
})();
var PS = PS || {};
PS.Test_StrongCheck_Gen = (function () {
    "use strict";
    var Control_Arrow = PS.Control_Arrow;
    var Prelude = PS.Prelude;
    var Data_Machine_Mealy = PS.Data_Machine_Mealy;
    var Data_Maybe_Unsafe = PS.Data_Maybe_Unsafe;
    var Control_Monad_Trampoline = PS.Control_Monad_Trampoline;
    var Data_Profunctor = PS.Data_Profunctor;
    var Data_Char = PS.Data_Char;
    var Math = PS.Math;
    var Data_Array = PS.Data_Array;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Monoid_Sum = PS.Data_Monoid_Sum;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Monoid = PS.Data_Monoid;
    var Debug_Trace = PS.Debug_Trace;
    var Control_Monad_ListT = PS.Control_Monad_ListT;
    var Data_Lazy = PS.Data_Lazy;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Control_Monad_Eff_Random = PS.Control_Monad_Eff_Random;
    var Data_Traversable = PS.Data_Traversable;
    var Control_Monad_Free = PS.Control_Monad_Free;
    var Control_Monad = PS.Control_Monad;
    var Control_Bind = PS.Control_Bind;
    var Control_Plus = PS.Control_Plus;
    var Control_Alt = PS.Control_Alt;
    var Control_Alternative = PS.Control_Alternative;
    var Control_MonadPlus = PS.Control_MonadPlus;
    function float32ToInt32(n) {  var arr = new ArrayBuffer(4);  var fv = new Float32Array(arr);  var iv = new Int32Array(arr);  fv[0] = n;  return iv[0];};
    var GenState = (function () {
        function GenState(value0) {
            this.value0 = value0;
        };
        GenState.create = function (value0) {
            return new GenState(value0);
        };
        return GenState;
    })();
    var GenOut = (function () {
        function GenOut(value0) {
            this.value0 = value0;
        };
        GenOut.create = function (value0) {
            return new GenOut(value0);
        };
        return GenOut;
    })();
    var GenT = (function () {
        function GenT(value0) {
            this.value0 = value0;
        };
        GenT.create = function (value0) {
            return new GenT(value0);
        };
        return GenT;
    })();
    
    /**
     *  | Wraps an effect in a generator that ignores the input state.
     */
    var wrapEffect = function (__dict_Monad_949) {
        return function (fa) {
            var g = function (_1032) {
                return new GenOut({
                    state: _1032.value0, 
                    value: _1032.value1
                });
            };
            return GenT.create(Prelude["<$>"](Data_Machine_Mealy.functorMealy(__dict_Monad_949))(g)(Control_Arrow["&&&"](Data_Machine_Mealy.arrowMealy(__dict_Monad_949))(Prelude.id(Data_Machine_Mealy.categoryMealy(__dict_Monad_949)))(Data_Machine_Mealy.wrapEffect(__dict_Monad_949)(fa))));
        };
    };
    var unGenState = function (_994) {
        return _994.value0;
    };
    var unGenOut = function (_995) {
        return _995.value0;
    };
    var unGen = function (_996) {
        return _996.value0;
    };
    
    /**
     *  | Transforms one gen into another, passing along user-supplied state.
     *  | Either the generator being transformed or the transforming function may
     *  | halt the transformation.
     */
    var transGen = function (__dict_Monad_950) {
        return function (_1011) {
            return function (_1012) {
                return function (_1013) {
                    var loop = function (m_1) {
                        return function (b_1) {
                            var g = function (_1028) {
                                if (_1028 instanceof Data_Machine_Mealy.Halt) {
                                    return Prelude.pure(__dict_Monad_950["__superclass_Prelude.Applicative_0"]())(Data_Machine_Mealy.Halt.value);
                                };
                                if (_1028 instanceof Data_Machine_Mealy.Emit) {
                                    var _3737 = _1011(b_1)(_1028.value0.value0.value);
                                    if (_3737.value1 instanceof Data_Maybe.Nothing) {
                                        return Data_Machine_Mealy.stepMealy(__dict_Monad_950)(_1028.value0.value0.state)(loop(_1028.value1)(_3737.value0));
                                    };
                                    if (_3737.value1 instanceof Data_Maybe.Just) {
                                        var c$prime = new GenOut({
                                            value: _3737.value1.value0, 
                                            state: _1028.value0.value0.state
                                        });
                                        return Prelude.pure(__dict_Monad_950["__superclass_Prelude.Applicative_0"]())(new Data_Machine_Mealy.Emit(c$prime, loop(_1028.value1)(_3737.value0)));
                                    };
                                    throw new Error("Failed pattern match");
                                };
                                throw new Error("Failed pattern match");
                            };
                            return Data_Machine_Mealy.mealy(__dict_Monad_950["__superclass_Prelude.Applicative_0"]())(function (st) {
                                return Prelude[">>="](__dict_Monad_950["__superclass_Prelude.Bind_1"]())(Data_Machine_Mealy.stepMealy(__dict_Monad_950)(st)(m_1))(g);
                            });
                        };
                    };
                    return GenT.create(loop(_1013.value0)(_1012));
                };
            };
        };
    };
    
    /**
     *  | Converts the generator into a function that, given the initial state, 
     *  | returns a lazy list.
     */
    var toLazyList = function (_1019) {
        return function (_1020) {
            var loop = function (m_1) {
                return function (s_1) {
                    var _3751 = Control_Monad_Trampoline.runTrampoline(Data_Machine_Mealy.stepMealy(Control_Monad_Free.monadFree(Data_Lazy.functorLazy))(s_1)(m_1));
                    if (_3751 instanceof Data_Machine_Mealy.Halt) {
                        return Control_Monad_ListT.nil(Data_Lazy.applicativeLazy);
                    };
                    if (_3751 instanceof Data_Machine_Mealy.Emit) {
                        return Control_Monad_ListT["prepend'"](Data_Lazy.applicativeLazy)(_3751.value0.value0.value)(Data_Lazy.defer(function (_) {
                            return loop(_3751.value1)(_3751.value0.value0.state);
                        }));
                    };
                    throw new Error("Failed pattern match");
                };
            };
            return Control_Monad_ListT.wrapLazy(Data_Lazy.monadLazy)(Data_Lazy.defer(function (_) {
                return loop(_1019.value0)(_1020);
            }));
        };
    };
    
    /**
     *  | Creates a generator that depends on access to the generator state.
     */
    var stateful = function (__dict_Monad_952) {
        return function (f) {
            return GenT.create(Prelude[">>="](Data_Machine_Mealy.bindMealy(__dict_Monad_952))(Data_Machine_Mealy.take(__dict_Monad_952)(1)(Prelude.id(Data_Machine_Mealy.categoryMealy(__dict_Monad_952))))(function (_44) {
                return unGen(f(_44));
            }));
        };
    };
    var stateM = function (f) {
        return Prelude["<<<"](Prelude.semigroupoidArr)(GenState.create)(Prelude["<<<"](Prelude.semigroupoidArr)(f)(unGenState));
    };
    
    /**
     *  | Fixes a generator on a certain variant, given by the specified seed.
     */
    var variant = function (__dict_Monad_953) {
        return function (n) {
            return function (g) {
                return GenT.create(Data_Profunctor.lmap(Data_Machine_Mealy.profunctorMealy(__dict_Monad_953))(stateM(function (s) {
                    var _3759 = {};
                    for (var _3760 in s) {
                        if (s.hasOwnProperty(_3760)) {
                            _3759[_3760] = s[_3760];
                        };
                    };
                    _3759.seed = n;
                    return _3759;
                }))(unGen(g)));
            };
        };
    };
    
    /**
     *  | Creates a generator that depends on the size parameter.
     */
    var sized = function (__dict_Monad_954) {
        return function (f) {
            return stateful(__dict_Monad_954)(function (s) {
                return f((unGenState(s)).size);
            });
        };
    };
    var semigroupGenT = function (__dict_Monad_955) {
        return new Prelude.Semigroup(function (_1045) {
            return function (_1046) {
                return new GenT(Prelude["<>"](Data_Machine_Mealy.semigroupMealy(__dict_Monad_955))(_1045.value0)(_1046.value0));
            };
        });
    };
    
    /**
     *  | Resizes the generator so the size parameter passed into the generator 
     *  | will be equal to the specified size.
     */
    var resize = function (__dict_Monad_957) {
        return function (sz) {
            return function (g) {
                return GenT.create(Data_Profunctor.lmap(Data_Machine_Mealy.profunctorMealy(__dict_Monad_957))(stateM(function (s) {
                    var _3765 = {};
                    for (var _3766 in s) {
                        if (s.hasOwnProperty(_3766)) {
                            _3765[_3766] = s[_3766];
                        };
                    };
                    _3765.size = sz;
                    return _3765;
                }))(unGen(g)));
            };
        };
    };
    var pureGen = function (__dict_Monad_958) {
        return function (f) {
            return GenT.create(Control_Arrow.arr(Data_Machine_Mealy.arrowMealy(__dict_Monad_958))(f));
        };
    };
    var monoidGenT = function (__dict_Monad_961) {
        return new Data_Monoid.Monoid(function () {
            return semigroupGenT(__dict_Monad_961);
        }, new GenT(Data_Monoid.mempty(Data_Machine_Mealy.monoidMealy(__dict_Monad_961))));
    };
    var liftMealy = function (__dict_Monad_965) {
        return function (f) {
            return function (g) {
                return GenT.create(f(unGen(g)));
            };
        };
    };
    
    /**
     *  | Takes the first number of values from the generator. Will turn an infinite
     *  | generator into a finite generator.
     */
    var takeGen = function (__dict_Monad_966) {
        return function (n) {
            return liftMealy(__dict_Monad_966)(Data_Machine_Mealy.take(__dict_Monad_966)(n));
        };
    };
    var lcgN = 1 << 30;
    var lcgM = 1103515245;
    var lcgC = 12345;
    var lcgNext = function (n) {
        return (lcgM * n + lcgC) % lcgN;
    };
    var perturbNum = function (n) {
        return Prelude["+"](Prelude.numNumber)(lcgNext(float32ToInt32(n)));
    };
    var perturbGen = function (__dict_Monad_967) {
        return function (_999) {
            return function (_1000) {
                return GenT.create(Data_Profunctor.lmap(Data_Machine_Mealy.profunctorMealy(__dict_Monad_967))(stateM(function (s) {
                    var _3769 = {};
                    for (var _3770 in s) {
                        if (s.hasOwnProperty(_3770)) {
                            _3769[_3770] = s[_3770];
                        };
                    };
                    _3769.seed = perturbNum(_999)(s.seed);
                    return _3769;
                }))(_1000.value0));
            };
        };
    };
    var semigroupGenState = new Prelude.Semigroup(function (_1035) {
        return function (_1036) {
            return new GenState({
                seed: perturbNum(_1035.value0.seed)(_1036.value0.seed), 
                size: _1036.value0.size
            });
        };
    });
    var monoidGenState = new Data_Monoid.Monoid(function () {
        return semigroupGenState;
    }, new GenState({
        seed: 0, 
        size: 10
    }));
    var semigroupGenOut = function (__dict_Semigroup_956) {
        return new Prelude.Semigroup(function (_1037) {
            return function (_1038) {
                return new GenOut({
                    state: Prelude["<>"](semigroupGenState)(_1037.value0.state)(_1038.value0.state), 
                    value: Prelude["<>"](__dict_Semigroup_956)(_1037.value0.value)(_1038.value0.value)
                });
            };
        });
    };
    var monoidGenOut = function (__dict_Monoid_962) {
        return new Data_Monoid.Monoid(function () {
            return semigroupGenOut(__dict_Monoid_962["__superclass_Prelude.Semigroup_0"]());
        }, new GenOut({
            state: Data_Monoid.mempty(monoidGenState), 
            value: Data_Monoid.mempty(__dict_Monoid_962)
        }));
    };
    var updateSeedState = function (_1001) {
        return new GenState({
            seed: lcgNext(_1001.value0.seed), 
            size: _1001.value0.size
        });
    };
    var lcgStep = function (__dict_Monad_968) {
        return GenT.create(Control_Arrow.arr(Data_Machine_Mealy.arrowMealy(__dict_Monad_968))(function (s) {
            return new GenOut({
                state: updateSeedState(s), 
                value: (unGenState(s)).seed
            });
        }));
    };
    var updateSeedGen = function (__dict_Monad_970) {
        return function (_1002) {
            return GenT.create(Data_Profunctor.lmap(Data_Machine_Mealy.profunctorMealy(__dict_Monad_970))(updateSeedState)(_1002.value0));
        };
    };
    
    /**
     *  | Fairly interleaves two generators.
     */
    var interleave = function (__dict_Monad_971) {
        return function (_1005) {
            return function (_1006) {
                return GenT.create(Data_Machine_Mealy.interleave(__dict_Monad_971)(_1005.value0)(_1006.value0));
            };
        };
    };
    
    /**
     *  | Ensures that a given generator can produce an infinite number of values,
     *  | assuming it can produce at least one.
     */
    var infinite = function (__dict_Monad_972) {
        return liftMealy(__dict_Monad_972)(Data_Machine_Mealy.loop(__dict_Monad_972));
    };
    
    /**
     *  FIXME: workaround type inference unification bug
     */
    var ifThenElse = function (p) {
        return function (a) {
            return function (b) {
                if (p) {
                    return a;
                };
                if (!p) {
                    return b;
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    
    /**
     *  | Filters a generator to produce only values satisfying the specified 
     *  | predicate.
     */
    var suchThat = function (__dict_Monad_973) {
        return function (g) {
            return function (p) {
                var f = function (_1029) {
                    return function (_1030) {
                        return Data_Tuple.Tuple.create(Prelude.unit)(ifThenElse(p(_1030))(new Data_Maybe.Just(_1030))(Data_Maybe.Nothing.value));
                    };
                };
                return transGen(__dict_Monad_973)(f)(Prelude.unit)(g);
            };
        };
    };
    
    /**
     *  | Filters a generator to produce only values satisfying the specified 
     *  | predicate, but gives up and produces Nothing after the specified number
     *  | of attempts.
     */
    var suchThatMaybe = function (__dict_Monad_974) {
        return function (n) {
            return function (g) {
                return function (p) {
                    var f = function (i) {
                        return function (a) {
                            return ifThenElse(p(a))(new Data_Tuple.Tuple(0, Data_Maybe.Just.create(new Data_Maybe.Just(a))))(ifThenElse(i >= n)(new Data_Tuple.Tuple(0, Data_Maybe.Just.create(Data_Maybe.Nothing.value)))(new Data_Tuple.Tuple(i + 1, Data_Maybe.Nothing.value)));
                        };
                    };
                    return transGen(__dict_Monad_974)(f)(0)(g);
                };
            };
        };
    };
    var functorGenOut = new Prelude.Functor(function (_1039) {
        return function (_1040) {
            return new GenOut({
                state: _1040.value0.state, 
                value: _1039(_1040.value0.value)
            });
        };
    });
    
    /**
     *  GenT instances
     */
    var functorGenT = function (__dict_Monad_975) {
        return new Prelude.Functor(function (_1043) {
            return function (_1044) {
                return GenT.create(Prelude["<$>"](Data_Machine_Mealy.functorMealy(__dict_Monad_975))(Prelude["<$>"](functorGenOut)(_1043))(_1044.value0));
            };
        });
    };
    var uniform = function (__dict_Monad_969) {
        return Prelude["<$>"](functorGenT(__dict_Monad_969))(function (n) {
            return n / (1 << 30);
        })(lcgStep(__dict_Monad_969));
    };
    var stepGen = function (__dict_Monad_951) {
        return function (_997) {
            return function (_998) {
                var h = function (_1021) {
                    if (_1021 instanceof Data_Machine_Mealy.Halt) {
                        return Data_Maybe.Nothing.value;
                    };
                    if (_1021 instanceof Data_Machine_Mealy.Emit) {
                        return Data_Maybe.Just.create(Prelude["<$>"](functorGenOut)(Prelude.flip(Data_Tuple.Tuple.create)(new GenT(_1021.value1)))(_1021.value0));
                    };
                    throw new Error("Failed pattern match");
                };
                return Prelude["<$>"](((__dict_Monad_951["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(h)(Data_Machine_Mealy.stepMealy(__dict_Monad_951)(_997)(_998.value0));
            };
        };
    };
    
    /**
     *  | Folds over a generator to produce a value. Either the generator or the 
     *  | user-defined function may halt the fold. Returns not just the value
     *  | created through folding, but also the successor generator.
     */
    var foldGen$prime = function (__dict_Monad_976) {
        return function (_1007) {
            return function (_1008) {
                return function (_1009) {
                    return function (_1010) {
                        var loop = function (st) {
                            return function (m_1) {
                                return function (b_1) {
                                    var g = function (_1027) {
                                        if (_1027 instanceof Data_Machine_Mealy.Halt) {
                                            return Prelude.pure(__dict_Monad_976["__superclass_Prelude.Applicative_0"]())(new Data_Tuple.Tuple(b_1, new GenT(Data_Machine_Mealy.halt(__dict_Monad_976["__superclass_Prelude.Applicative_0"]()))));
                                        };
                                        if (_1027 instanceof Data_Machine_Mealy.Emit) {
                                            var b$prime = _1007(b_1)(_1027.value0.value0.value);
                                            return Data_Maybe.maybe(Prelude.pure(__dict_Monad_976["__superclass_Prelude.Applicative_0"]())(new Data_Tuple.Tuple(b_1, new GenT(_1027.value1))))(loop(_1027.value0.value0.state)(_1027.value1))(b$prime);
                                        };
                                        throw new Error("Failed pattern match");
                                    };
                                    return Prelude[">>="](__dict_Monad_976["__superclass_Prelude.Bind_1"]())(Data_Machine_Mealy.stepMealy(__dict_Monad_976)(st)(m_1))(g);
                                };
                            };
                        };
                        return loop(_1009)(_1010.value0)(_1008);
                    };
                };
            };
        };
    };
    
    /**
     *  | Folds over a generator to produce a value. Either the generator or the 
     *  | user-defined function may halt the fold.
     */
    var foldGen = function (__dict_Monad_977) {
        return function (f) {
            return function (b) {
                return function (s) {
                    return function (g) {
                        return Prelude["<$>"](((__dict_Monad_977["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Tuple.fst)(foldGen$prime(__dict_Monad_977)(f)(b)(s)(g));
                    };
                };
            };
        };
    };
    
    /**
     *  | Extends a generator to produce *at least* the specified number of values.
     *  | Will not turn a finite generator into an infinite one.
     */
    var extend = function (__dict_Monad_978) {
        return function (_1003) {
            return function (_1004) {
                var loop = function (i) {
                    return function (m_1) {
                        return Data_Machine_Mealy.mealy(__dict_Monad_978["__superclass_Prelude.Applicative_0"]())(function (st) {
                            var f = function (_1026) {
                                if (_1026 instanceof Data_Machine_Mealy.Halt) {
                                    var _3817 = i >= _1003;
                                    if (_3817) {
                                        return Prelude.pure(__dict_Monad_978["__superclass_Prelude.Applicative_0"]())(Data_Machine_Mealy.Halt.value);
                                    };
                                    if (!_3817) {
                                        return Data_Machine_Mealy.stepMealy(__dict_Monad_978)(st)(loop(i)(_1004.value0));
                                    };
                                    throw new Error("Failed pattern match");
                                };
                                if (_1026 instanceof Data_Machine_Mealy.Emit) {
                                    return Prelude.pure(__dict_Monad_978["__superclass_Prelude.Applicative_0"]())(new Data_Machine_Mealy.Emit(_1026.value0, loop(i + 1)(_1026.value1)));
                                };
                                throw new Error("Failed pattern match");
                            };
                            return Prelude[">>="](__dict_Monad_978["__superclass_Prelude.Bind_1"]())(Data_Machine_Mealy.stepMealy(__dict_Monad_978)(st)(m_1))(f);
                        });
                    };
                };
                return Prelude["<>"](semigroupGenT(__dict_Monad_978))(GenT.create(loop(0)(_1004.value0)))(new GenT(_1004.value0));
            };
        };
    };
    
    /**
     *  | Runs a generator to produce a specified number of values, returning both
     *  | an array containing the values and the successor Gen that can be used to
     *  | continue the generation process at a later time.
     */
    var runGen = function (__dict_Monad_979) {
        return function (n) {
            return function (st) {
                return function (g) {
                    var f = function (v) {
                        return function (a) {
                            return ifThenElse(Data_Array.length(v) < n)(Data_Maybe.Just.create(Prelude["<>"](Data_Array.semigroupArray)(v)([ a ])))(Data_Maybe.Nothing.value);
                        };
                    };
                    return foldGen$prime(__dict_Monad_979)(f)([  ])(st)(extend(__dict_Monad_979)(n)(g));
                };
            };
        };
    };
    
    /**
     *  | Samples a generator, producing the specified number of values.
     */
    var sample$prime = function (__dict_Monad_980) {
        return function (n) {
            return function (st) {
                return function (g) {
                    return Prelude["<$>"](((__dict_Monad_980["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Tuple.fst)(runGen(__dict_Monad_980)(n)(st)(g));
                };
            };
        };
    };
    
    /**
     *  | Samples a generator, producing the specified number of values. Uses 
     *  | default settings for the initial generator state.
     */
    var sample = function (__dict_Monad_981) {
        return function (n) {
            return sample$prime(__dict_Monad_981)(n)(new GenState({
                size: 10, 
                seed: 4545645874
            }));
        };
    };
    
    /**
     *  | Shows a sample of values generated from the specified generator.
     */
    var showSample$prime = function (__dict_Show_982) {
        return function (n) {
            return function (g) {
                return Debug_Trace.print(Prelude.showArray(__dict_Show_982))(Control_Monad_Trampoline.runTrampoline(sample(Control_Monad_Free.monadFree(Data_Lazy.functorLazy))(n)(g)));
            };
        };
    };
    
    /**
     *  | Shows a sample of values generated from the specified generator.
     */
    var showSample = function (__dict_Show_983) {
        return showSample$prime(__dict_Show_983)(10);
    };
    
    /**
     *  | Creates a generator that generates arrays of some specified size.
     */
    var vectorOf = function (__dict_Monad_984) {
        return function (n) {
            return function (g) {
                var f = function (b) {
                    return function (a) {
                        var b$prime = Prelude["<>"](Data_Array.semigroupArray)(b)([ a ]);
                        var _3821 = Data_Array.length(b$prime) >= n;
                        if (_3821) {
                            return new Data_Tuple.Tuple([  ], new Data_Maybe.Just(b$prime));
                        };
                        if (!_3821) {
                            return new Data_Tuple.Tuple(b$prime, Data_Maybe.Nothing.value);
                        };
                        throw new Error("Failed pattern match");
                    };
                };
                return transGen(__dict_Monad_984)(f)([  ])(extend(__dict_Monad_984)(n)(g));
            };
        };
    };
    var evalGen = function (__dict_Monad_985) {
        return function (g) {
            return function (st) {
                var h = function (_1022) {
                    if (_1022 instanceof Data_Maybe.Nothing) {
                        return Data_Maybe.Nothing.value;
                    };
                    if (_1022 instanceof Data_Maybe.Just) {
                        return new Data_Maybe.Just(_1022.value0.value0.value.value0);
                    };
                    throw new Error("Failed pattern match");
                };
                return Prelude["<$>"](((__dict_Monad_985["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(h)(stepGen(__dict_Monad_985)(st)(g));
            };
        };
    };
    var repeatable$prime = function (__dict_Monad_986) {
        return function (f) {
            return GenT.create(Data_Machine_Mealy.pureMealy(__dict_Monad_986["__superclass_Prelude.Applicative_0"]())(function (s) {
                return new Data_Machine_Mealy.Emit(new GenOut({
                    state: s, 
                    value: function (a) {
                        return Prelude["<$>"](((__dict_Monad_986["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Maybe_Unsafe.fromJust)(evalGen(__dict_Monad_986)(f(a))(s));
                    }
                }), Data_Machine_Mealy.halt(__dict_Monad_986["__superclass_Prelude.Applicative_0"]()));
            }));
        };
    };
    
    /**
     *  | Creates a function generator that will always generate the same output 
     *  | for the same input.
     */
    var repeatable = function (f) {
        var g = function (f$prime) {
            return function (a) {
                return Control_Monad_Trampoline.runTrampoline(f$prime(a));
            };
        };
        return Prelude["<$>"](functorGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(g)(repeatable$prime(Control_Monad_Free.monadFree(Data_Lazy.functorLazy))(f));
    };
    
    /**
     *  | Drops a certain number of values from the generator. May produce
     *  | an empty generator if called on a finite generator.
     */
    var dropGen = function (__dict_Monad_987) {
        return function (n) {
            return liftMealy(__dict_Monad_987)(Data_Machine_Mealy.drop(__dict_Monad_987)(n));
        };
    };
    
    /**
     *  | Drains a finite generator of all values. Or blows up if you called it on 
     *  | an infinite generator.
     */
    var collectAll = function (__dict_Monad_988) {
        var f = function (v) {
            return function (a) {
                return Data_Maybe.Just.create(Prelude["<>"](Data_Array.semigroupArray)(v)([ a ]));
            };
        };
        return foldGen(__dict_Monad_988)(f)([  ]);
    };
    
    /**
     *  | Creates a generator that produces chunks of values in the specified size.
     *  | Will extend the generator if necessary to produce a chunk of the specified
     *  | size, but will not turn a finite generator into an infinite generator.
     */
    var chunked = function (__dict_Monad_989) {
        return function (n) {
            return function (g) {
                var f = function (xs) {
                    return function (a) {
                        var xs$prime = Prelude[":"](a)(xs);
                        var _3828 = Data_Array.length(xs$prime) >= n;
                        if (_3828) {
                            return new Data_Tuple.Tuple([  ], new Data_Maybe.Just(xs$prime));
                        };
                        if (!_3828) {
                            return new Data_Tuple.Tuple(xs$prime, Data_Maybe.Nothing.value);
                        };
                        throw new Error("Failed pattern match");
                    };
                };
                return transGen(__dict_Monad_989)(f)([  ])(extend(__dict_Monad_989)(n)(g));
            };
        };
    };
    
    /**
     *  | Creates a generator that generates integers between the specified 
     *  | inclusive range.
     */
    var chooseInt = function (__dict_Monad_990) {
        return function (a) {
            return function (b) {
                var min = Math.ceil(Math.min(a)(b));
                var max = Math.floor(Math.max(a)(b));
                return Prelude["<$>"](functorGenT(__dict_Monad_990))(Prelude["<<<"](Prelude.semigroupoidArr)(Math.round)(Prelude["<<<"](Prelude.semigroupoidArr)(Prelude["+"](Prelude.numNumber)(min - 0.5))(Prelude["*"](Prelude.numNumber)((max - min) + 1))))(uniform(__dict_Monad_990));
            };
        };
    };
    
    /**
     *  | Creates a generator that generates real numbers between the specified
     *  | inclusive range.
     */
    var choose = function (__dict_Monad_995) {
        return function (a) {
            return function (b) {
                var min = Math.min(a)(b);
                var max = Math.max(a)(b);
                return Prelude["<$>"](functorGenT(__dict_Monad_995))(Prelude[">>>"](Prelude.semigroupoidArr)(Prelude["*"](Prelude.numNumber)(max - min))(Prelude["+"](Prelude.numNumber)(min)))(uniform(__dict_Monad_995));
            };
        };
    };
    
    /**
     *  | A generator for characters.
     */
    var charGen = function (__dict_Monad_996) {
        return Prelude["<$>"](functorGenT(__dict_Monad_996))(Data_Char.fromCharCode)(chooseInt(__dict_Monad_996)(0)(65535));
    };
    var applyGenOut = new Prelude.Apply(function (_1041) {
        return function (_1042) {
            return new GenOut({
                state: _1042.value0.state, 
                value: _1041.value0.value(_1042.value0.value)
            });
        };
    }, function () {
        return functorGenOut;
    });
    var applyGenT = function (__dict_Monad_1000) {
        return new Prelude.Apply(function (f) {
            return function (x) {
                return GenT.create(Prelude[">>="](Data_Machine_Mealy.bindMealy(__dict_Monad_1000))(unGen(f))(function (_57) {
                    return Prelude[">>="](Data_Machine_Mealy.bindMealy(__dict_Monad_1000))(unGen(updateSeedGen(__dict_Monad_1000)(x)))(function (_56) {
                        return Prelude["return"](Data_Machine_Mealy.monadMealy(__dict_Monad_1000))(Prelude["<*>"](applyGenOut)(_57)(_56));
                    });
                }));
            };
        }, function () {
            return functorGenT(__dict_Monad_1000);
        });
    };
    var bindGenT = function (__dict_Monad_997) {
        return new Prelude.Bind(function (_1047) {
            return function (_1048) {
                return GenT.create(Prelude[">>="](Data_Machine_Mealy.bindMealy(__dict_Monad_997))(_1047.value0)(function (_58) {
                    return unGen(updateSeedGen(__dict_Monad_997)(_1048((unGenOut(_58)).value)));
                }));
            };
        }, function () {
            return applyGenT(__dict_Monad_997);
        });
    };
    
    /**
     *  | Creates a generator of elements ranging from 0 to the maximum size.
     */
    var arrayOf = function (__dict_Monad_999) {
        return function (g) {
            return sized(__dict_Monad_999)(function (n) {
                return Prelude[">>="](bindGenT(__dict_Monad_999))(chooseInt(__dict_Monad_999)(0)(n))(function (_47) {
                    return vectorOf(__dict_Monad_999)(_47)(g);
                });
            });
        };
    };
    
    /**
     *  | Generates elements by the specified frequencies (which will be normalized).
     */
    var frequency = function (__dict_Monad_992) {
        return function (x) {
            return function (xs) {
                var xxs = Prelude[":"](x)(xs);
                var total = Data_Monoid_Sum.runSum(Data_Foldable.fold(Data_Foldable.foldableArray)(Data_Monoid_Sum.monoidSum)(Prelude["<$>"](Data_Array.functorArray)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Monoid_Sum.Sum)(Data_Tuple.fst))(xxs)));
                var pick = function (__copy__1023) {
                    return function (__copy__1024) {
                        return function (__copy__1025) {
                            var _1023 = __copy__1023;
                            var _1024 = __copy__1024;
                            var _1025 = __copy__1025;
                            tco: while (true) {
                                if (_1025.length === 0) {
                                    return _1024;
                                };
                                if (_1025.length >= 1) {
                                    var _3847 = _1025.slice(1);
                                    var _3843 = _1023 <= (_1025[0]).value0;
                                    if (_3843) {
                                        return (_1025[0]).value1;
                                    };
                                    if (!_3843) {
                                        var __tco__1023 = _1023 - (_1025[0]).value0;
                                        var __tco__1024 = _1024;
                                        _1023 = __tco__1023;
                                        _1024 = __tco__1024;
                                        _1025 = _3847;
                                        continue tco;
                                    };
                                    throw new Error("Failed pattern match");
                                };
                                throw new Error("Failed pattern match");
                            };
                        };
                    };
                };
                return Prelude[">>="](bindGenT(__dict_Monad_992))(chooseInt(__dict_Monad_992)(1)(total))(function (_46) {
                    return pick(_46)(Data_Tuple.snd(x))(xxs);
                });
            };
        };
    };
    
    /**
     *  | Creates a generator that chooses another generator from the specified list
     *  | at random, and then generates a value with that generator.
     */
    var oneOf = function (__dict_Monad_993) {
        return function (x) {
            return function (xs) {
                return Prelude[">>="](bindGenT(__dict_Monad_993))(chooseInt(__dict_Monad_993)(0)(Data_Array.length(xs)))(function (_45) {
                    var _3850 = _45 === 0;
                    if (_3850) {
                        return x;
                    };
                    if (!_3850) {
                        return Data_Maybe.fromMaybe(x)(Data_Array["!!"](xs)(_45 - 1));
                    };
                    throw new Error("Failed pattern match");
                });
            };
        };
    };
    
    /**
     *  | Applies a state to a generator to possibly produce the next state,
     *  | a value, and the next generator.
     */
    var applyGen = function (__dict_Monad_1001) {
        return function (_1017) {
            return function (_1018) {
                var f = function (_1031) {
                    if (_1031 instanceof Data_Machine_Mealy.Halt) {
                        return Data_Maybe.Nothing.value;
                    };
                    if (_1031 instanceof Data_Machine_Mealy.Emit) {
                        return Data_Maybe.Just.create(new GenOut({
                            state: _1031.value0.value0.state, 
                            value: new Data_Tuple.Tuple(_1031.value0.value0.value, new GenT(_1031.value1))
                        }));
                    };
                    throw new Error("Failed pattern match");
                };
                return Prelude["<$>"](((__dict_Monad_1001["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(f)(Data_Machine_Mealy.stepMealy(__dict_Monad_1001)(_1017)(_1018.value0));
            };
        };
    };
    var applicativeGenT = function (__dict_Monad_1002) {
        return new Prelude.Applicative(function () {
            return applyGenT(__dict_Monad_1002);
        }, function (t) {
            return GenT.create(Control_Arrow.arr(Data_Machine_Mealy.arrowMealy(__dict_Monad_1002))(function (s) {
                return new GenOut({
                    state: updateSeedState(s), 
                    value: t
                });
            }));
        });
    };
    
    /**
     *  | Creates a generator that chooses an element from among a set of elements.
     */
    var elements = function (__dict_Monad_991) {
        return function (x) {
            return function (xs) {
                return Prelude[">>="](bindGenT(__dict_Monad_991))(chooseInt(__dict_Monad_991)(0)(Data_Array.length(xs)))(function (_51) {
                    return Prelude.pure(applicativeGenT(__dict_Monad_991))((function () {
                        var _3861 = _51 === 0;
                        if (_3861) {
                            return x;
                        };
                        if (!_3861) {
                            return Data_Maybe.fromMaybe(x)(Data_Array["!!"](xs)(_51 - 1));
                        };
                        throw new Error("Failed pattern match");
                    })());
                });
            };
        };
    };
    var monadGenT = function (__dict_Monad_964) {
        return new Prelude.Monad(function () {
            return applicativeGenT(__dict_Monad_964);
        }, function () {
            return bindGenT(__dict_Monad_964);
        });
    };
    
    /**
     *  | Creates a generator of elements ranging from 1 to the maximum size.
     */
    var arrayOf1 = function (__dict_Monad_998) {
        return function (g) {
            return sized(__dict_Monad_998)(function (n) {
                return Prelude[">>="](bindGenT(__dict_Monad_998))(chooseInt(__dict_Monad_998)(0)(n))(function (_50) {
                    return Prelude[">>="](bindGenT(__dict_Monad_998))(g)(function (_49) {
                        return Prelude[">>="](bindGenT(__dict_Monad_998))(vectorOf(__dict_Monad_998)(_50 - 1)(g))(function (_48) {
                            return Prelude["return"](monadGenT(__dict_Monad_998))(new Data_Tuple.Tuple(_49, _48));
                        });
                    });
                });
            });
        };
    };
    
    /**
     *  | A deterministic generator that produces all possible combinations of
     *  | choosing exactly k elements from the specified array.
     */
    var nChooseK = function (__dict_Monad_960) {
        return function (_1015) {
            return function (_1016) {
                if (_1015 === 0) {
                    return Prelude.pure(applicativeGenT(__dict_Monad_960))([  ]);
                };
                if (_1016.length === 0) {
                    return Data_Monoid.mempty(monoidGenT(__dict_Monad_960));
                };
                if (_1016.length >= 1) {
                    var _3868 = _1016.slice(1);
                    return Prelude["<>"](semigroupGenT(__dict_Monad_960))(Prelude["<$>"](functorGenT(__dict_Monad_960))(Prelude[":"](_1016[0]))(nChooseK(__dict_Monad_960)(_1015 - 1)(_3868)))(nChooseK(__dict_Monad_960)(_1015)(_3868));
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    
    /**
     *  | Creates a generator that produces shuffled versions of the provided array.
     */
    var shuffleArray = function (__dict_Monad_994) {
        var shuffle0 = function (_1033) {
            return function (_1034) {
                if (_1034.length === 0) {
                    return Prelude.pure(applicativeGenT(__dict_Monad_994))(_1033);
                };
                return Prelude[">>="](bindGenT(__dict_Monad_994))(chooseInt(__dict_Monad_994)(0)(Data_Array.length(_1034) - 1))(function (_55) {
                    var acc$prime = Prelude["<>"](Data_Array.semigroupArray)(_1033)(Data_Maybe.maybe([  ])(Prelude.flip(Prelude[":"])([  ]))(Data_Array["!!"](_1034)(_55)));
                    return shuffle0(acc$prime)(Data_Array.deleteAt(_55)(1)(_1034));
                });
            };
        };
        return shuffle0([  ]);
    };
    var altGenT = function (__dict_Monad_1004) {
        return new Control_Alt.Alt(function (_1049) {
            return function (_1050) {
                return GenT.create(Control_Alt["<|>"](Data_Machine_Mealy.altMealy(__dict_Monad_1004))(_1049.value0)(_1050.value0));
            };
        }, function () {
            return functorGenT(__dict_Monad_1004);
        });
    };
    var plusGenT = function (__dict_Monad_959) {
        return new Control_Plus.Plus(function () {
            return altGenT(__dict_Monad_959);
        }, Data_Monoid.mempty(monoidGenT(__dict_Monad_959)));
    };
    var alternativeGenT = function (__dict_Monad_1003) {
        return new Control_Alternative.Alternative(function () {
            return plusGenT(__dict_Monad_1003);
        }, function () {
            return applicativeGenT(__dict_Monad_1003);
        });
    };
    var monadPlusGenT = function (__dict_Monad_963) {
        return new Control_MonadPlus.MonadPlus(function () {
            return alternativeGenT(__dict_Monad_963);
        }, function () {
            return monadGenT(__dict_Monad_963);
        });
    };
    
    /**
     *  | A deterministic generator that produces integers from the specified 
     *  | inclusive range, in sequence.
     */
    var allInRange = function (__dict_Monad_1005) {
        return function (min) {
            return function (max) {
                var go = function (cur) {
                    return Data_Machine_Mealy.pureMealy(__dict_Monad_1005["__superclass_Prelude.Applicative_0"]())(function (s) {
                        return ifThenElse(cur > max)(Data_Machine_Mealy.Halt.value)(new Data_Machine_Mealy.Emit(new GenOut({
                            state: s, 
                            value: cur
                        }), go(cur + 1)));
                    });
                };
                return GenT.create(go(min));
            };
        };
    };
    
    /**
     *  | A deterministic generator that produces values from the specified array,
     *  | in sequence.
     */
    var allInArray = function (__dict_Monad_1006) {
        return function (a) {
            var go = function (i) {
                return Data_Machine_Mealy.pureMealy(__dict_Monad_1006["__superclass_Prelude.Applicative_0"]())(function (s) {
                    return Data_Maybe.maybe(Data_Machine_Mealy.Halt.value)(function (a_1) {
                        return new Data_Machine_Mealy.Emit(new GenOut({
                            state: s, 
                            value: a_1
                        }), go(i + 1));
                    })(Data_Array["!!"](a)(i));
                });
            };
            return GenT.create(go(0));
        };
    };
    
    /**
     *  | A deterministic generator that produces all possible permutations of 
     *  | the specified array.
     */
    var perms = function (__dict_Monad_1007) {
        return function (_1014) {
            if (_1014.length === 0) {
                return Prelude.pure(applicativeGenT(__dict_Monad_1007))([  ]);
            };
            if (_1014.length >= 1) {
                var _3879 = _1014.slice(1);
                return Prelude[">>="](bindGenT(__dict_Monad_1007))(perms(__dict_Monad_1007)(_3879))(function (_52) {
                    var f = function (n) {
                        var suffix = Data_Array.drop(n)(_52);
                        var prefix = Data_Array.take(n)(_52);
                        return Prelude["<>"](Data_Array.semigroupArray)(prefix)(Prelude["<>"](Data_Array.semigroupArray)([ _1014[0] ])(suffix));
                    };
                    return allInArray(__dict_Monad_1007)(Prelude["<$>"](Data_Array.functorArray)(f)(Data_Array.range(0)(Data_Array.length(_52))));
                });
            };
            throw new Error("Failed pattern match");
        };
    };
    
    /**
     *  | Creates a generator that mixes up the order of the specified generator.
     *  | This is achieved by chunking the generator with the specified size 
     *  | and then shuffling each chunk before continuing to the next.
     */
    var shuffle$prime = function (__dict_Monad_1008) {
        return function (n) {
            return function (g) {
                return Prelude[">>="](bindGenT(__dict_Monad_1008))(chunked(__dict_Monad_1008)(n)(g))(function (_54) {
                    return Prelude[">>="](bindGenT(__dict_Monad_1008))(shuffleArray(__dict_Monad_1008)(_54))(function (_53) {
                        return allInArray(__dict_Monad_1008)(_53);
                    });
                });
            };
        };
    };
    
    /**
     *  | Same as shuffle' but with default for the chunk size.
     */
    var shuffle = function (__dict_Monad_1009) {
        return shuffle$prime(__dict_Monad_1009)(100);
    };
    return {
        GenOut: GenOut, 
        GenState: GenState, 
        GenT: GenT, 
        wrapEffect: wrapEffect, 
        vectorOf: vectorOf, 
        variant: variant, 
        updateSeedState: updateSeedState, 
        unGenState: unGenState, 
        unGenOut: unGenOut, 
        unGen: unGen, 
        uniform: uniform, 
        transGen: transGen, 
        toLazyList: toLazyList, 
        takeGen: takeGen, 
        suchThatMaybe: suchThatMaybe, 
        suchThat: suchThat, 
        stateful: stateful, 
        sized: sized, 
        shuffleArray: shuffleArray, 
        "shuffle'": shuffle$prime, 
        shuffle: shuffle, 
        "showSample'": showSample$prime, 
        showSample: showSample, 
        "sample'": sample$prime, 
        sample: sample, 
        runGen: runGen, 
        resize: resize, 
        repeatable: repeatable, 
        perturbGen: perturbGen, 
        perms: perms, 
        oneOf: oneOf, 
        nChooseK: nChooseK, 
        interleave: interleave, 
        infinite: infinite, 
        frequency: frequency, 
        "foldGen'": foldGen$prime, 
        foldGen: foldGen, 
        extend: extend, 
        elements: elements, 
        dropGen: dropGen, 
        collectAll: collectAll, 
        chunked: chunked, 
        chooseInt: chooseInt, 
        choose: choose, 
        charGen: charGen, 
        arrayOf1: arrayOf1, 
        arrayOf: arrayOf, 
        applyGen: applyGen, 
        allInRange: allInRange, 
        allInArray: allInArray, 
        semigroupGenState: semigroupGenState, 
        monoidGenState: monoidGenState, 
        semigroupGenOut: semigroupGenOut, 
        monoidGenOut: monoidGenOut, 
        functorGenOut: functorGenOut, 
        applyGenOut: applyGenOut, 
        functorGenT: functorGenT, 
        applyGenT: applyGenT, 
        applicativeGenT: applicativeGenT, 
        semigroupGenT: semigroupGenT, 
        monoidGenT: monoidGenT, 
        bindGenT: bindGenT, 
        monadGenT: monadGenT, 
        altGenT: altGenT, 
        plusGenT: plusGenT, 
        alternativeGenT: alternativeGenT, 
        monadPlusGenT: monadPlusGenT
    };
})();
var PS = PS || {};
PS.Test_StrongCheck = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Trampoline = PS.Control_Monad_Trampoline;
    var Test_StrongCheck_Gen = PS.Test_StrongCheck_Gen;
    var Data_Array = PS.Data_Array;
    var Math = PS.Math;
    var Data_Maybe = PS.Data_Maybe;
    var Control_Monad_Eff_Random = PS.Control_Monad_Eff_Random;
    var Debug_Trace = PS.Debug_Trace;
    var Control_Monad_Eff_Exception = PS.Control_Monad_Eff_Exception;
    var Data_Maybe_Unsafe = PS.Data_Maybe_Unsafe;
    var Data_Enum = PS.Data_Enum;
    var Data_Char = PS.Data_Char;
    var Data_String = PS.Data_String;
    var Data_Traversable = PS.Data_Traversable;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Control_Bind = PS.Control_Bind;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Either = PS.Data_Either;
    var Data_Monoid = PS.Data_Monoid;
    var Control_Monad_Free = PS.Control_Monad_Free;
    var Data_Lazy = PS.Data_Lazy;
    var Signum = function (x) {
        return x;
    };
    var Success = (function () {
        function Success() {

        };
        Success.value = new Success();
        return Success;
    })();
    var Failed = (function () {
        function Failed(value0) {
            this.value0 = value0;
        };
        Failed.create = function (value0) {
            return new Failed(value0);
        };
        return Failed;
    })();
    var Positive = function (x) {
        return x;
    };
    var NonZero = function (x) {
        return x;
    };
    var Negative = function (x) {
        return x;
    };
    var ArbEnum = function (x) {
        return x;
    };
    var AlphaNumString = function (x) {
        return x;
    };
    var Arbitrary = function (arbitrary) {
        this.arbitrary = arbitrary;
    };
    var CoArbitrary = function (coarbitrary) {
        this.coarbitrary = coarbitrary;
    };
    var Testable = function (test) {
        this.test = test;
    };
    var $less$qmark$greater = function (_1051) {
        if (_1051) {
            return Prelude["const"](Success.value);
        };
        if (!_1051) {
            return Failed.create;
        };
        throw new Error("Failed pattern match");
    };
    var $eq$eq$eq = function (__dict_Eq_1010) {
        return function (__dict_Show_1011) {
            return function (a) {
                return function (b) {
                    var msg = Prelude.show(__dict_Show_1011)(a) + (" /= " + Prelude.show(__dict_Show_1011)(b));
                    return $less$qmark$greater(Prelude["=="](__dict_Eq_1010)(a)(b))(msg);
                };
            };
        };
    };
    var $div$eq$eq = function (__dict_Eq_1012) {
        return function (__dict_Show_1013) {
            return function (a) {
                return function (b) {
                    var msg = Prelude.show(__dict_Show_1013)(a) + (" == " + Prelude.show(__dict_Show_1013)(b));
                    return $less$qmark$greater(Prelude["/="](__dict_Eq_1012)(a)(b))(msg);
                };
            };
        };
    };
    var throwOnFirstFailure = function (__copy__1052) {
        return function (__copy__1053) {
            var _1052 = __copy__1052;
            var _1053 = __copy__1053;
            tco: while (true) {
                if (_1053.length === 0) {
                    return Prelude["return"](Control_Monad_Eff.monadEff)(Prelude.unit);
                };
                if (_1053.length >= 1) {
                    var _3887 = _1053.slice(1);
                    if (_1053[0] instanceof Failed) {
                        return Control_Monad_Eff_Exception.throwException(Control_Monad_Eff_Exception.error("Test " + (Prelude.show(Prelude.showNumber)(_1052) + (" failed: \n" + (_1053[0]).value0))));
                    };
                };
                if (_1053.length >= 1) {
                    var _3889 = _1053.slice(1);
                    var __tco__1052 = _1052 + 1;
                    _1052 = __tco__1052;
                    _1053 = _3889;
                    continue tco;
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var testableResult = new Testable(Prelude["return"](Test_StrongCheck_Gen.monadGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy))));
    var testableBoolean = new Testable(function (_1089) {
        if (_1089) {
            return Prelude["return"](Test_StrongCheck_Gen.monadGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Success.value);
        };
        if (!_1089) {
            return Prelude["return"](Test_StrongCheck_Gen.monadGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(new Failed("Test returned false"));
        };
        throw new Error("Failed pattern match");
    });
    var test = function (dict) {
        return dict.test;
    };
    var showResult = new Prelude.Show(function (_1065) {
        if (_1065 instanceof Success) {
            return "Success";
        };
        if (_1065 instanceof Failed) {
            return "Failed: " + _1065.value0;
        };
        throw new Error("Failed pattern match");
    });
    var showArbEnum = function (__dict_Show_1014) {
        return new Prelude.Show(function (_1078) {
            return "ArbEnum " + Prelude.show(__dict_Show_1014)(_1078);
        });
    };
    var semigroupResult = new Prelude.Semigroup(function (_1066) {
        return function (_1067) {
            if (_1066 instanceof Success && _1067 instanceof Success) {
                return Success.value;
            };
            if (_1066 instanceof Failed && _1067 instanceof Success) {
                return new Failed(_1066.value0);
            };
            if (_1066 instanceof Success && _1067 instanceof Failed) {
                return new Failed(_1067.value0);
            };
            if (_1066 instanceof Failed && _1067 instanceof Failed) {
                return new Failed(_1066.value0 + ("\n" + _1067.value0));
            };
            throw new Error("Failed pattern match");
        };
    });
    var runSignum = function (_1055) {
        return _1055;
    };
    var runPositive = function (_1056) {
        return _1056;
    };
    var runNonZero = function (_1058) {
        return _1058;
    };
    var runNegative = function (_1057) {
        return _1057;
    };
    var runArbEnum = function (_1059) {
        return _1059;
    };
    var runAlphaNumString = function (_1054) {
        return _1054;
    };
    var monoidResult = new Data_Monoid.Monoid(function () {
        return semigroupResult;
    }, Success.value);
    var maxNumber = 9007199254740992;
    var eqResult = new Prelude.Eq(function (a) {
        return function (b) {
            return !Prelude["=="](eqResult)(a)(b);
        };
    }, function (_1063) {
        return function (_1064) {
            if (_1063 instanceof Success && _1064 instanceof Success) {
                return true;
            };
            if (_1063 instanceof Failed && _1064 instanceof Failed) {
                return _1063.value0 === _1064.value0;
            };
            return false;
        };
    });
    var eqArbEnum = function (__dict_Eq_1016) {
        return new Prelude.Eq(function (a) {
            return function (b) {
                return !Prelude["=="](eqArbEnum(__dict_Eq_1016))(a)(b);
            };
        }, function (_1074) {
            return function (_1075) {
                return Prelude["=="](__dict_Eq_1016)(_1074)(_1075);
            };
        });
    };
    var ordArbEnum = function (__dict_Ord_1015) {
        return new Prelude.Ord(function () {
            return eqArbEnum(__dict_Ord_1015["__superclass_Prelude.Eq_0"]());
        }, function (_1076) {
            return function (_1077) {
                return Prelude.compare(__dict_Ord_1015)(_1076)(_1077);
            };
        });
    };
    var defState = function (s) {
        return new Test_StrongCheck_Gen.GenState({
            seed: s, 
            size: 10
        });
    };
    var quickCheckPure = function (__dict_Testable_1017) {
        return function (n) {
            return function (s) {
                return function (prop) {
                    return Control_Monad_Trampoline.runTrampoline(Test_StrongCheck_Gen["sample'"](Control_Monad_Free.monadFree(Data_Lazy.functorLazy))(n)(defState(s))(test(__dict_Testable_1017)(prop)));
                };
            };
        };
    };
    var smallCheckPure = function (__dict_Testable_1018) {
        return function (s) {
            return function (prop) {
                return Control_Monad_Trampoline.runTrampoline(Test_StrongCheck_Gen.collectAll(Control_Monad_Free.monadFree(Data_Lazy.functorLazy))(defState(s))(test(__dict_Testable_1018)(prop)));
            };
        };
    };
    var countSuccesses = (function () {
        var countSuccesses$prime = function (__copy__1061) {
            return function (__copy__1062) {
                var _1061 = __copy__1061;
                var _1062 = __copy__1062;
                tco: while (true) {
                    if (_1062.length === 0) {
                        return _1061;
                    };
                    if (_1062.length >= 1) {
                        var _3917 = _1062.slice(1);
                        if (_1062[0] instanceof Success) {
                            var __tco__1061 = _1061 + 1;
                            _1061 = __tco__1061;
                            _1062 = _3917;
                            continue tco;
                        };
                    };
                    if (_1062.length >= 1) {
                        var _3919 = _1062.slice(1);
                        var __tco__1061 = _1061;
                        _1061 = __tco__1061;
                        _1062 = _3919;
                        continue tco;
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
        return countSuccesses$prime(0);
    })();
    var statCheckPure = function (__dict_Testable_1019) {
        return function (s) {
            return function (freq) {
                return function (prop) {
                    var $$try = function (__copy_x) {
                        var x = __copy_x;
                        tco: while (true) {
                            var measure = function (n) {
                                var results = quickCheckPure(__dict_Testable_1019)(n)(s)(prop);
                                return countSuccesses(results) / Data_Array.length(results);
                            };
                            var measure$prime = function (_1060) {
                                if (_1060 === 0) {
                                    return [  ];
                                };
                                return Prelude["<>"](Data_Array.semigroupArray)(measure$prime(_1060 - 1))([ measure(_1060 * x) ]);
                            };
                            var freqs = measure$prime(4);
                            var dists = Prelude["<$>"](Data_Array.functorArray)(Prelude["<<<"](Prelude.semigroupoidArr)(Math.abs)(Prelude["-"](Prelude.numNumber)(freq)))(freqs);
                            var dirs = Data_Array.zipWith(function (a) {
                                return function (b) {
                                    return a - b;
                                };
                            })(Prelude[":"](1)(dists))(dists);
                            var fails = Data_Array.length(Data_Array.filter(Prelude[">"](Prelude.ordNumber)(0))(dirs));
                            var succs = Data_Array.filter(Prelude["<="](Prelude.ordNumber)(0))(dirs);
                            var _3921 = fails > 1;
                            if (_3921) {
                                var _3922 = x < 1000000;
                                if (_3922) {
                                    var __tco_x = x * 10;
                                    x = __tco_x;
                                    continue tco;
                                };
                                if (!_3922) {
                                    return Failed.create("Divergence of statistical test: freqs = " + (Prelude.show(Prelude.showArray(Prelude.showNumber))(freqs) + (", dists = " + (Prelude.show(Prelude.showArray(Prelude.showNumber))(dists) + (", dirs = " + (Prelude.show(Prelude.showArray(Prelude.showNumber))(dirs) + (", fails: " + Prelude.show(Prelude.showNumber)(fails))))))));
                                };
                                throw new Error("Failed pattern match");
                            };
                            if (!_3921) {
                                return Data_Maybe.maybe(new Failed("Error!"))(function (l) {
                                    var _3923 = l > 0.5;
                                    if (_3923) {
                                        return Failed.create("Final convergence distance too low: " + Prelude.show(Prelude.showNumber)(l));
                                    };
                                    if (!_3923) {
                                        return Success.value;
                                    };
                                    throw new Error("Failed pattern match");
                                })(Data_Array.last(succs));
                            };
                            throw new Error("Failed pattern match");
                        };
                    };
                    return $$try(100);
                };
            };
        };
    };
    
    /**
     *  | Checks that the proposition has a certain probability of being true for 
     *  | arbitrary values.
     */
    var statCheck = function (__dict_Testable_1020) {
        return function (freq) {
            return function (prop) {
                return function __do() {
                    var _59 = Control_Monad_Eff_Random.random();
                    return Prelude["<<<"](Prelude.semigroupoidArr)(Debug_Trace.trace)(Prelude.show(showResult))(statCheckPure(__dict_Testable_1020)(_59)(freq)(prop))();
                };
            };
        };
    };
    var coarbitrary = function (dict) {
        return dict.coarbitrary;
    };
    var coarbTuple = function (__dict_CoArbitrary_1021) {
        return function (__dict_CoArbitrary_1022) {
            return new CoArbitrary(function (_1085) {
                return Prelude[">>>"](Prelude.semigroupoidArr)(coarbitrary(__dict_CoArbitrary_1021)(_1085.value0))(coarbitrary(__dict_CoArbitrary_1022)(_1085.value1));
            });
        };
    };
    var coarbNumber = new CoArbitrary(Test_StrongCheck_Gen.perturbGen(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)));
    var coarbPositive = new CoArbitrary(function (_1068) {
        return coarbitrary(coarbNumber)(_1068);
    });
    var coarbSignum = new CoArbitrary(function (_1071) {
        return coarbitrary(coarbNumber)(_1071);
    });
    var coarbNonZero = new CoArbitrary(function (_1070) {
        return coarbitrary(coarbNumber)(_1070);
    });
    var coarbNegative = new CoArbitrary(function (_1069) {
        return coarbitrary(coarbNumber)(_1069);
    });
    var coarbMaybe = function (__dict_CoArbitrary_1023) {
        return new CoArbitrary(function (_1087) {
            if (_1087 instanceof Data_Maybe.Nothing) {
                return Test_StrongCheck_Gen.perturbGen(Control_Monad_Free.monadFree(Data_Lazy.functorLazy))(1);
            };
            if (_1087 instanceof Data_Maybe.Just) {
                return coarbitrary(__dict_CoArbitrary_1023)(_1087.value0);
            };
            throw new Error("Failed pattern match");
        });
    };
    var coarbEither = function (__dict_CoArbitrary_1024) {
        return function (__dict_CoArbitrary_1025) {
            return new CoArbitrary(function (_1086) {
                if (_1086 instanceof Data_Either.Left) {
                    return coarbitrary(__dict_CoArbitrary_1024)(_1086.value0);
                };
                if (_1086 instanceof Data_Either.Right) {
                    return coarbitrary(__dict_CoArbitrary_1025)(_1086.value0);
                };
                throw new Error("Failed pattern match");
            });
        };
    };
    var coarbChar = new CoArbitrary(function (c) {
        return coarbitrary(coarbNumber)(Data_Char.toCharCode(c));
    });
    var coarbBoolean = new CoArbitrary(function (_1083) {
        if (_1083) {
            return Test_StrongCheck_Gen.perturbGen(Control_Monad_Free.monadFree(Data_Lazy.functorLazy))(1);
        };
        if (!_1083) {
            return Test_StrongCheck_Gen.perturbGen(Control_Monad_Free.monadFree(Data_Lazy.functorLazy))(2);
        };
        throw new Error("Failed pattern match");
    });
    var coarbArray = function (__dict_CoArbitrary_1026) {
        return new CoArbitrary(function (_1088) {
            if (_1088.length === 0) {
                return Prelude.id(Prelude.categoryArr);
            };
            if (_1088.length >= 1) {
                var _3940 = _1088.slice(1);
                return Prelude["<<<"](Prelude.semigroupoidArr)(coarbitrary(coarbArray(__dict_CoArbitrary_1026))(_3940))(coarbitrary(__dict_CoArbitrary_1026)(_1088[0]));
            };
            throw new Error("Failed pattern match");
        });
    };
    var coarbString = new CoArbitrary(function (s) {
        return coarbitrary(coarbArray(coarbMaybe(coarbNumber)))(Prelude["<$>"](Data_Array.functorArray)(Data_String.charCodeAt(0))(Data_String.split("")(s)));
    });
    var coarbArbEnum = function (__dict_Enum_1027) {
        return new CoArbitrary(function (_1073) {
            return coarbitrary(coarbNumber)(Data_Enum.fromEnum(__dict_Enum_1027)(_1073));
        });
    };
    var coarbAlphaNumString = new CoArbitrary(function (_1084) {
        return coarbitrary(coarbString)(_1084);
    });
    var check = function (__dict_Testable_1028) {
        return function (f) {
            return function (prop) {
                return function __do() {
                    var _60 = Control_Monad_Eff_Random.random();
                    return (function () {
                        var results = f(_60)(prop);
                        var successes = countSuccesses(results);
                        return function __do() {
                            Debug_Trace.trace(Prelude.show(Prelude.showNumber)(successes) + ("/" + (Prelude.show(Prelude.showNumber)(Data_Array.length(results)) + " test(s) passed.")))();
                            return throwOnFirstFailure(1)(results)();
                        };
                    })()();
                };
            };
        };
    };
    var quickCheck$prime = function (__dict_Testable_1029) {
        return function (n) {
            return function (prop) {
                return check(__dict_Testable_1029)(quickCheckPure(__dict_Testable_1029)(n))(prop);
            };
        };
    };
    
    /**
     *  | Checks the proposition for 100 random values.
     */
    var quickCheck = function (__dict_Testable_1030) {
        return function (prop) {
            return quickCheck$prime(__dict_Testable_1030)(100)(prop);
        };
    };
    
    /**
     *  | Exhaustively checks the proposition for all possible values. Assumes the
     *  | generator is a finite generator.
     */
    var smallCheck = function (__dict_Testable_1031) {
        return function (prop) {
            return check(__dict_Testable_1031)(smallCheckPure(__dict_Testable_1031))(prop);
        };
    };
    
    /**
     *  ScopedTypeVariables
     */
    var cardPerturb1 = function (__dict_Enum_1032) {
        return function (f) {
            return f(Data_Enum.cardinality(__dict_Enum_1032));
        };
    };
    
    /**
     *  | Checks that the specified proposition holds. Useful for unit tests.
     */
    var assert = function (__dict_Testable_1033) {
        return quickCheck$prime(__dict_Testable_1033)(1);
    };
    var arbitrary = function (dict) {
        return dict.arbitrary;
    };
    var testableFunction = function (__dict_Arbitrary_1036) {
        return function (__dict_Testable_1037) {
            return new Testable(function (f) {
                return Prelude[">>="](Test_StrongCheck_Gen.bindGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(arbitrary(__dict_Arbitrary_1036))(function (_72) {
                    return test(__dict_Testable_1037)(f(_72));
                });
            });
        };
    };
    var arbTuple = function (__dict_Arbitrary_1038) {
        return function (__dict_Arbitrary_1039) {
            return new Arbitrary(Prelude["<*>"](Test_StrongCheck_Gen.applyGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Prelude["<$>"](Test_StrongCheck_Gen.functorGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Data_Tuple.Tuple.create)(arbitrary(__dict_Arbitrary_1038)))(arbitrary(__dict_Arbitrary_1039)));
        };
    };
    var arbPositive = new Arbitrary(Prelude["<$>"](Test_StrongCheck_Gen.functorGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Prelude["<$>"](Prelude.functorArr)(Positive)(Prelude["*"](Prelude.numNumber)(maxNumber)))(Test_StrongCheck_Gen.uniform(Control_Monad_Free.monadFree(Data_Lazy.functorLazy))));
    var arbNumber = new Arbitrary(Test_StrongCheck_Gen.uniform(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)));
    var arbNegative = new Arbitrary(Prelude["<$>"](Test_StrongCheck_Gen.functorGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Prelude["<$>"](Prelude.functorArr)(Negative)(Prelude["*"](Prelude.numNumber)(-maxNumber)))(Test_StrongCheck_Gen.uniform(Control_Monad_Free.monadFree(Data_Lazy.functorLazy))));
    var arbFunction = function (__dict_CoArbitrary_1041) {
        return function (__dict_Arbitrary_1042) {
            return new Arbitrary(Test_StrongCheck_Gen.repeatable(function (a) {
                return coarbitrary(__dict_CoArbitrary_1041)(a)(arbitrary(__dict_Arbitrary_1042));
            }));
        };
    };
    
    /**
     *  ScopedTypeVariables
     */
    var arbEnumCardinality = function (__dict_Enum_1043) {
        return function (f) {
            return f(Data_Enum.cardinality(__dict_Enum_1043));
        };
    };
    var enumArbEnum = function (__dict_Enum_1044) {
        return new Data_Enum.Enum(function () {
            return ordArbEnum(__dict_Enum_1044["__superclass_Prelude.Ord_0"]());
        }, (function () {
            var f = function (_1082) {
                return _1082;
            };
            return arbEnumCardinality(__dict_Enum_1044)(f);
        })(), Data_Enum.firstEnum(__dict_Enum_1044), function (_1081) {
            return Data_Enum.fromEnum(__dict_Enum_1044)(_1081);
        }, Data_Enum.lastEnum(__dict_Enum_1044), function (_1079) {
            return Prelude["<$>"](Data_Maybe.functorMaybe)(ArbEnum)(Data_Enum.pred(__dict_Enum_1044)(_1079));
        }, function (_1080) {
            return Prelude["<$>"](Data_Maybe.functorMaybe)(ArbEnum)(Data_Enum.succ(__dict_Enum_1044)(_1080));
        }, function (v) {
            return Prelude["<$>"](Data_Maybe.functorMaybe)(ArbEnum)(Data_Enum.toEnum(__dict_Enum_1044)(v));
        });
    };
    var arbChar = new Arbitrary(Test_StrongCheck_Gen.charGen(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)));
    var arbBoolean = new Arbitrary(Prelude[">>="](Test_StrongCheck_Gen.bindGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Test_StrongCheck_Gen.uniform(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(function (_64) {
        return Prelude["return"](Test_StrongCheck_Gen.monadGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))((_64 * 2) < 1);
    }));
    var arbEither = function (__dict_Arbitrary_1045) {
        return function (__dict_Arbitrary_1046) {
            return new Arbitrary(Prelude[">>="](Test_StrongCheck_Gen.bindGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(arbitrary(arbBoolean))(function (_66) {
                if (_66) {
                    return Prelude["<$>"](Test_StrongCheck_Gen.functorGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Data_Either.Left.create)(arbitrary(__dict_Arbitrary_1045));
                };
                if (!_66) {
                    return Prelude["<$>"](Test_StrongCheck_Gen.functorGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Data_Either.Right.create)(arbitrary(__dict_Arbitrary_1046));
                };
                throw new Error("Failed pattern match");
            }));
        };
    };
    var arbMaybe = function (__dict_Arbitrary_1040) {
        return new Arbitrary(Prelude[">>="](Test_StrongCheck_Gen.bindGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(arbitrary(arbBoolean))(function (_67) {
            if (_67) {
                return Prelude.pure(Test_StrongCheck_Gen.applicativeGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Data_Maybe.Nothing.value);
            };
            if (!_67) {
                return Prelude["<$>"](Test_StrongCheck_Gen.functorGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Data_Maybe.Just.create)(arbitrary(__dict_Arbitrary_1040));
            };
            throw new Error("Failed pattern match");
        }));
    };
    var arbNonZero = new Arbitrary(Prelude[">>="](Test_StrongCheck_Gen.bindGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(arbitrary(arbNumber))(function (_62) {
        return Prelude[">>="](Test_StrongCheck_Gen.bindGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(arbitrary(arbBoolean))(function (_61) {
            var sign = (function () {
                if (_61) {
                    return 1.0;
                };
                if (!_61) {
                    return -1.0;
                };
                throw new Error("Failed pattern match");
            })();
            return Prelude["return"](Test_StrongCheck_Gen.monadGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(_62 * maxNumber * sign);
        });
    }));
    var arbSignum = new Arbitrary(Prelude[">>="](Test_StrongCheck_Gen.bindGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(arbitrary(arbBoolean))(function (_63) {
        return Prelude["return"](Test_StrongCheck_Gen.monadGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))((function () {
            if (_63) {
                return 1;
            };
            if (!_63) {
                return -1;
            };
            throw new Error("Failed pattern match");
        })());
    }));
    var arbArray = function (__dict_Arbitrary_1047) {
        return new Arbitrary(Prelude[">>="](Test_StrongCheck_Gen.bindGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(arbitrary(arbBoolean))(function (_71) {
            if (_71) {
                return Prelude["return"](Test_StrongCheck_Gen.monadGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))([  ]);
            };
            if (!_71) {
                return Prelude[">>="](Test_StrongCheck_Gen.bindGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(arbitrary(__dict_Arbitrary_1047))(function (_70) {
                    return Prelude[">>="](Test_StrongCheck_Gen.bindGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(arbitrary(arbArray(__dict_Arbitrary_1047)))(function (_69) {
                        return Prelude["return"](Test_StrongCheck_Gen.monadGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Prelude[":"](_70)(_69));
                    });
                });
            };
            throw new Error("Failed pattern match");
        }));
    };
    var arbString = new Arbitrary(Prelude["<$>"](Test_StrongCheck_Gen.functorGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Data_String.fromCharArray)(arbitrary(arbArray(arbChar))));
    var coarbFunction = function (__dict_Arbitrary_1034) {
        return function (__dict_CoArbitrary_1035) {
            return new CoArbitrary(function (f) {
                return function (gen) {
                    return Prelude[">>="](Test_StrongCheck_Gen.bindGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(arbitrary(arbArray(__dict_Arbitrary_1034)))(function (_68) {
                        return coarbitrary(coarbArray(__dict_CoArbitrary_1035))(Data_Array.map(f)(_68))(gen);
                    });
                };
            });
        };
    };
    var arbArbEnum = function (__dict_Enum_1048) {
        return new Arbitrary((function () {
            var f = function (_1072) {
                return Prelude["<$>"](Test_StrongCheck_Gen.functorGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Maybe_Unsafe.fromJust)(Data_Enum.toEnum(__dict_Enum_1048)))(Test_StrongCheck_Gen.chooseInt(Control_Monad_Free.monadFree(Data_Lazy.functorLazy))(0)(_1072 - 1));
            };
            return Prelude["<$>"](Test_StrongCheck_Gen.functorGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(ArbEnum)(cardPerturb1(__dict_Enum_1048)(f));
        })());
    };
    var arbAlphaNumString = new Arbitrary((function () {
        var lookup = function (x) {
            var index = Math.min(Data_String.length("abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789") - 1)(Math.floor(x * Data_String.length("abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789")));
            return Data_String.charAt(index)("abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789");
        };
        return Prelude[">>="](Test_StrongCheck_Gen.bindGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(arbitrary(arbArray(arbNumber)))(function (_65) {
            return Prelude["return"](Test_StrongCheck_Gen.monadGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Data_Maybe_Unsafe.fromJust(Prelude["<$>"](Data_Maybe.functorMaybe)(Prelude["<<<"](Prelude.semigroupoidArr)(AlphaNumString)(Data_String.fromCharArray))(Data_Traversable.sequence(Data_Traversable.traversableArray)(Data_Maybe.applicativeMaybe)(Prelude["<$>"](Data_Array.functorArray)(lookup)(_65)))));
        });
    })());
    return {
        Signum: Signum, 
        Success: Success, 
        Failed: Failed, 
        Positive: Positive, 
        NonZero: NonZero, 
        Negative: Negative, 
        ArbEnum: ArbEnum, 
        AlphaNumString: AlphaNumString, 
        Testable: Testable, 
        CoArbitrary: CoArbitrary, 
        Arbitrary: Arbitrary, 
        test: test, 
        statCheckPure: statCheckPure, 
        statCheck: statCheck, 
        smallCheckPure: smallCheckPure, 
        smallCheck: smallCheck, 
        runSignum: runSignum, 
        runPositive: runPositive, 
        runNonZero: runNonZero, 
        runNegative: runNegative, 
        runArbEnum: runArbEnum, 
        runAlphaNumString: runAlphaNumString, 
        quickCheckPure: quickCheckPure, 
        "quickCheck'": quickCheck$prime, 
        quickCheck: quickCheck, 
        coarbitrary: coarbitrary, 
        assert: assert, 
        arbitrary: arbitrary, 
        "/==": $div$eq$eq, 
        "===": $eq$eq$eq, 
        "<?>": $less$qmark$greater, 
        eqResult: eqResult, 
        showResult: showResult, 
        semigroupResult: semigroupResult, 
        monoidResult: monoidResult, 
        arbNumber: arbNumber, 
        coarbNumber: coarbNumber, 
        arbPositive: arbPositive, 
        coarbPositive: coarbPositive, 
        arbNegative: arbNegative, 
        coarbNegative: coarbNegative, 
        arbNonZero: arbNonZero, 
        coarbNonZero: coarbNonZero, 
        arbSignum: arbSignum, 
        coarbSignum: coarbSignum, 
        arbArbEnum: arbArbEnum, 
        coarbArbEnum: coarbArbEnum, 
        eqArbEnum: eqArbEnum, 
        ordArbEnum: ordArbEnum, 
        showArbEnum: showArbEnum, 
        enumArbEnum: enumArbEnum, 
        arbBoolean: arbBoolean, 
        coarbBoolean: coarbBoolean, 
        arbChar: arbChar, 
        coarbChar: coarbChar, 
        arbString: arbString, 
        coarbString: coarbString, 
        arbAlphaNumString: arbAlphaNumString, 
        coarbAlphaNumString: coarbAlphaNumString, 
        arbTuple: arbTuple, 
        coarbTuple: coarbTuple, 
        arbEither: arbEither, 
        coarbEither: coarbEither, 
        arbMaybe: arbMaybe, 
        coarbMaybe: coarbMaybe, 
        arbFunction: arbFunction, 
        coarbFunction: coarbFunction, 
        arbArray: arbArray, 
        coarbArray: coarbArray, 
        testableResult: testableResult, 
        testableBoolean: testableBoolean, 
        testableFunction: testableFunction
    };
})();
var PS = PS || {};
PS.Test_StrongCheck_Perturb = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var Data_Foldable = PS.Data_Foldable;
    var Test_StrongCheck_Gen = PS.Test_StrongCheck_Gen;
    var Data_Maybe = PS.Data_Maybe;
    var Math = PS.Math;
    var Test_StrongCheck = PS.Test_StrongCheck;
    var Data_Array = PS.Data_Array;
    var Data_Traversable = PS.Data_Traversable;
    var Data_String = PS.Data_String;
    var Data_Enum = PS.Data_Enum;
    var Data_Char = PS.Data_Char;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Either = PS.Data_Either;
    var Data_Maybe_Unsafe = PS.Data_Maybe_Unsafe;
    var Data_Monoid_Sum = PS.Data_Monoid_Sum;
    var Data_Function = PS.Data_Function;
    var Control_Monad_Free = PS.Control_Monad_Free;
    var Data_Lazy = PS.Data_Lazy;
    var Perturber = function (x) {
        return x;
    };
    var Attempts = function (x) {
        return x;
    };
    
    /**
     *  | The class for things which can be perturbed.
     *  |
     *  | Laws:  
     *  |   forall a, 0 >= n <= 1:  
     *  |   ((>=) n) <<< dist a <$> (perturb n a) must be an infinite generator of `true` values.
     */
    var Perturb = function (perturber) {
        this.perturber = perturber;
    };
    
    /**
     *  | Combines two perturbers to produce a perturber of the sum
     */
    var $less$bslash$div$greater = function (_1100) {
        return function (_1101) {
            
            /**
             *  FIXME: underconstrained
             */
            var perturb$prime = function (_1110) {
                return function (_1111) {
                    if (_1111 instanceof Data_Either.Left) {
                        return Prelude["<$>"](Test_StrongCheck_Gen.functorGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Data_Either.Left.create)(_1100.perturb(_1110)(_1111.value0));
                    };
                    if (_1111 instanceof Data_Either.Right) {
                        return Prelude["<$>"](Test_StrongCheck_Gen.functorGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Data_Either.Right.create)(_1101.perturb(_1110)(_1111.value0));
                    };
                    throw new Error("Failed pattern match");
                };
            };
            var dist$prime = function (_1112) {
                return function (_1113) {
                    if (_1112 instanceof Data_Either.Left && _1113 instanceof Data_Either.Left) {
                        return _1100.dist(_1112.value0)(_1113.value0);
                    };
                    if (_1112 instanceof Data_Either.Right && _1113 instanceof Data_Either.Right) {
                        return _1101.dist(_1112.value0)(_1113.value0);
                    };
                    return 1;
                };
            };
            var dims$prime = function (_1114) {
                if (_1114 instanceof Data_Either.Left) {
                    return _1100.dims(_1114.value0);
                };
                if (_1114 instanceof Data_Either.Right) {
                    return _1101.dims(_1114.value0);
                };
                throw new Error("Failed pattern match");
            };
            return {
                perturb: perturb$prime, 
                dist: dist$prime, 
                dims: dims$prime
            };
        };
    };
    
    /**
     *  TODO: Move to Data.Functor.Invariant
     */
    var xmap = function (_1091) {
        return function (_1092) {
            return function (_1093) {
                return {
                    perturb: function (n) {
                        return function (b) {
                            return Prelude["<$>"](Test_StrongCheck_Gen.functorGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(_1091)(_1093.perturb(n)(_1092(b)));
                        };
                    }, 
                    dist: function (b1) {
                        return function (b2) {
                            return _1093.dist(_1092(b1))(_1092(b2));
                        };
                    }, 
                    dims: function (b) {
                        return _1093.dims(_1092(b));
                    }
                };
            };
        };
    };
    var unPerturber = function (_1090) {
        return _1090;
    };
    var square = Prelude.flip(Math.pow)(2);
    var toDist = function (xs) {
        return Math.sqrt(Data_Foldable.sum(Data_Foldable.foldableArray)(Prelude["<$>"](Data_Array.functorArray)(square)(xs)));
    };
    
    /**
     *  | The class for things which can be perturbed.
     *  |
     *  | Laws:  
     *  |   forall a, 0 >= n <= 1:  
     *  |   ((>=) n) <<< dist a <$> (perturb n a) must be an infinite generator of `true` values.
     */
    var perturber = function (dict) {
        return dict.perturber;
    };
    var perturbChar = new Perturb((function () {
        var perturb$prime = function (n) {
            return function (e) {
                var _3985 = n < (1 / (2 * 65536));
                if (_3985) {
                    return Prelude.pure(Test_StrongCheck_Gen.applicativeGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(e);
                };
                if (!_3985) {
                    return Test_StrongCheck.arbitrary(Test_StrongCheck.arbChar);
                };
                throw new Error("Failed pattern match");
            };
        };
        var dist$prime = function (a) {
            return function (b) {
                var _3986 = Prelude["=="](Data_Char.eqChar)(a)(b);
                if (_3986) {
                    return 0;
                };
                if (!_3986) {
                    return 1 / (2 * 65536);
                };
                throw new Error("Failed pattern match");
            };
        };
        var dims$prime = Prelude["const"](1);
        return {
            perturb: perturb$prime, 
            dist: dist$prime, 
            dims: dims$prime
        };
    })());
    var perturb = function (__dict_Perturb_1049) {
        return (unPerturber(perturber(__dict_Perturb_1049))).perturb;
    };
    
    /**
     *  | Creates a perturber that perturbs nothing.
     */
    var nonPerturber = {
        perturb: Prelude["const"](Prelude.pure(Test_StrongCheck_Gen.applicativeGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))), 
        dist: Prelude["const"](Prelude["const"](0)), 
        dims: Prelude["const"](0)
    };
    
    /**
     *  magical constants
     */
    var maxNumber = 9007199254740992;
    
    /**
     *  math
     */
    var k0 = Math.log(maxNumber + 1);
    var perturbNumber = new Perturb((function () {
        var perturb$prime = function (_1120) {
            return function (_1121) {
                if (_1120 === 0) {
                    return Prelude.pure(Test_StrongCheck_Gen.applicativeGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(_1121);
                };
                return Prelude[">>="](Test_StrongCheck_Gen.bindGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Test_StrongCheck_Gen.uniform(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(function (_77) {
                    return Prelude[">>="](Test_StrongCheck_Gen.bindGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Prelude["<$>"](Test_StrongCheck_Gen.functorGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Test_StrongCheck.runSignum)(Test_StrongCheck.arbitrary(Test_StrongCheck.arbSignum)))(function (_76) {
                        return Prelude["return"](Test_StrongCheck_Gen.monadGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(_76 * (Math.exp(k0 * (_77 * _1120)) - 1) + _1121);
                    });
                });
            };
        };
        var dist$prime = function (a) {
            return function (b) {
                var from = function (y) {
                    return Math.log(y + 1) / k0;
                };
                return Prelude["<<<"](Prelude.semigroupoidArr)(Math.min(1))(Prelude["<<<"](Prelude.semigroupoidArr)(Math.abs)(from))(Math.abs(a - b));
            };
        };
        var dims$prime = Prelude["const"](1);
        return {
            perturb: perturb$prime, 
            dist: dist$prime, 
            dims: dims$prime
        };
    })());
    
    /**
     *  FIXME: this workaround is still required as of psc 0.5.6.3
     */
    var ifThenElse = function (p) {
        return function (a) {
            return function (b) {
                if (p) {
                    return a;
                };
                if (!p) {
                    return b;
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    
    /**
     *  | Given one example, searches for other examples that satisfy a provided
     *  | boolean predicate.
     *  | 
     *  | The search operates out-to-in, in an attempt to find examples that are 
     *  | as far removed from the provided example as possible. The sampling size
     *  | parameter determines how many samples to take at every level of 
     *  | searching, while the attempts parameter determines how many levels.
     */
    var searchIn$prime = function (__dict_Perturb_1050) {
        return function (_1094) {
            return function (_1095) {
                return function (_1096) {
                    return function (_1097) {
                        var search0 = function (k_1) {
                            return function (d) {
                                return ifThenElse(k_1 <= 0)(Data_Monoid.mempty(Test_StrongCheck_Gen.monoidGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy))))(Prelude[">>="](Test_StrongCheck_Gen.bindGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Prelude["<$>"](Test_StrongCheck_Gen.functorGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Data_Foldable.find(Data_Foldable.foldableArray)(_1096))(Test_StrongCheck_Gen.takeGen(Control_Monad_Free.monadFree(Data_Lazy.functorLazy))(1)(Test_StrongCheck_Gen.chunked(Control_Monad_Free.monadFree(Data_Lazy.functorLazy))(_1095)(perturb(__dict_Perturb_1050)(d)(_1097)))))(function (_73) {
                                    return Prelude["<>"](Test_StrongCheck_Gen.semigroupGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Data_Maybe.fromMaybe(Data_Monoid.mempty(Test_StrongCheck_Gen.monoidGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy))))(Prelude["<$>"](Data_Maybe.functorMaybe)(Prelude.pure(Test_StrongCheck_Gen.applicativeGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy))))(_73)))(search0(k_1 - 1)(d / 2));
                                }));
                            };
                        };
                        return search0(_1094)(1);
                    };
                };
            };
        };
    };
    
    /**
     *  | The same as search', but uses defaults for attempt count and sample size.
     *  | Will search a total of 10,000 examples before giving up.
     */
    var searchIn = function (__dict_Perturb_1051) {
        return searchIn$prime(__dict_Perturb_1051)(1000)(10);
    };
    var enumerated = function (__dict_Eq_1052) {
        return function (x) {
            return function (xs) {
                var len = 1 + Data_Array.length(xs);
                var dims$prime = function (a) {
                    var _3997 = len > 0;
                    if (_3997) {
                        return 1;
                    };
                    if (!_3997) {
                        return 0;
                    };
                    throw new Error("Failed pattern match");
                };
                var cutoff = 1 / (2 * len);
                var dist$prime = function (a1) {
                    return function (a2) {
                        var _3998 = Prelude["=="](__dict_Eq_1052)(a2)(a2);
                        if (_3998) {
                            return 0;
                        };
                        if (!_3998) {
                            return cutoff;
                        };
                        throw new Error("Failed pattern match");
                    };
                };
                var perturb$prime = function (n) {
                    return function (a) {
                        var _3999 = n < cutoff;
                        if (_3999) {
                            return Prelude.pure(Test_StrongCheck_Gen.applicativeGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(a);
                        };
                        if (!_3999) {
                            return Test_StrongCheck_Gen.elements(Control_Monad_Free.monadFree(Data_Lazy.functorLazy))(x)(xs);
                        };
                        throw new Error("Failed pattern match");
                    };
                };
                return {
                    perturb: perturb$prime, 
                    dist: dist$prime, 
                    dims: dims$prime
                };
            };
        };
    };
    
    /**
     *  ScopedTypeVariables
     */
    var enumDims = function (__dict_Enum_1053) {
        return function (f) {
            return f(Data_Enum.cardinality(__dict_Enum_1053));
        };
    };
    var dist = function (__dict_Perturb_1054) {
        return (unPerturber(perturber(__dict_Perturb_1054))).dist;
    };
    var dims = function (__dict_Perturb_1055) {
        return (unPerturber(perturber(__dict_Perturb_1055))).dims;
    };
    var delta = function (n) {
        return function (d) {
            return Math.sqrt((d * d) / n);
        };
    };
    var perturbArray = function (__dict_Perturb_1056) {
        return new Perturb((function () {
            var perturb$prime = function (_1122) {
                return function (_1123) {
                    if (_1123.length === 0) {
                        return Prelude.pure(Test_StrongCheck_Gen.applicativeGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))([  ]);
                    };
                    if (_1122 === 0) {
                        return Data_Traversable.sequence(Data_Traversable.traversableArray)(Test_StrongCheck_Gen.applicativeGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Prelude["<$>"](Data_Array.functorArray)(perturb(__dict_Perturb_1056)(0))(_1123));
                    };
                    var dx = delta(Data_Array.length(_1123))(_1122);
                    return Data_Traversable.sequence(Data_Traversable.traversableArray)(Test_StrongCheck_Gen.applicativeGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Prelude["<$>"](Data_Array.functorArray)(perturb(__dict_Perturb_1056)(dx))(_1123));
                };
            };
            var dist$prime = function (a) {
                return function (b) {
                    return toDist(Data_Array.zipWith(dist(__dict_Perturb_1056))(a)(b));
                };
            };
            return {
                perturb: perturb$prime, 
                dist: dist$prime, 
                dims: Data_Array.length
            };
        })());
    };
    var perturbString = new Perturb((function () {
        var perturb$prime = function (d) {
            return function (s) {
                return Prelude["<$>"](Test_StrongCheck_Gen.functorGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Data_String.fromCharArray)(perturb(perturbArray(perturbChar))(d)(Data_String.toCharArray(s)));
            };
        };
        var dist$prime = function (s1) {
            return function (s2) {
                return dist(perturbArray(perturbChar))(Data_String.toCharArray(s1))(Data_String.toCharArray(s2));
            };
        };
        var dims$prime = Prelude["<<<"](Prelude.semigroupoidArr)(dims(perturbArray(perturbChar)))(Data_String.toCharArray);
        return {
            perturb: perturb$prime, 
            dist: dist$prime, 
            dims: dims$prime
        };
    })());
    
    /**
     *  | Combines two perturbers to produce a perturber of the product
     */
    var $less$div$bslash$greater = function (_1098) {
        return function (_1099) {
            var perturb$prime = function (_1105) {
                return function (_1106) {
                    var dx = delta(_1098.dims(_1106.value0) + _1099.dims(_1106.value1))(_1105);
                    var dx2 = dx * dx;
                    var ld = Math.sqrt(dx2 * _1098.dims(_1106.value0));
                    var rd = Math.sqrt(dx2 * _1099.dims(_1106.value1));
                    return Prelude["<*>"](Test_StrongCheck_Gen.applyGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Prelude["<$>"](Test_StrongCheck_Gen.functorGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Data_Tuple.Tuple.create)(_1098.perturb(ld)(_1106.value0)))(_1099.perturb(rd)(_1106.value1));
                };
            };
            var dist$prime = function (_1107) {
                return function (_1108) {
                    return toDist([ _1098.dist(_1107.value0)(_1108.value0), _1099.dist(_1107.value1)(_1108.value1) ]);
                };
            };
            var dims$prime = function (_1109) {
                return _1098.dims(_1109.value0) + _1099.dims(_1109.value1);
            };
            return {
                perturb: perturb$prime, 
                dist: dist$prime, 
                dims: dims$prime
            };
        };
    };
    
    /**
     *  workaround to avoid:
     *  Attempted to unify a constrained type (Test.StrongCheck.Arbitrary u15286) => 
     *  Test.StrongCheck.Gen.Gen<u15286> with another type.
     */
    var cardPerturb1F = function (__dict_Enum_1057) {
        return function (_1102) {
            return function (_1103) {
                return function (_1104) {
                    var _4020 = _1103 < (1 / (2 * _1104));
                    if (_4020) {
                        return Prelude.pure(Test_StrongCheck_Gen.applicativeGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(_1102);
                    };
                    if (!_4020) {
                        return Prelude["<$>"](Test_StrongCheck_Gen.functorGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Test_StrongCheck.runArbEnum)(Test_StrongCheck.arbitrary(Test_StrongCheck.arbArbEnum(__dict_Enum_1057)));
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
    };
    
    /**
     *  ScopedTypeVariables
     */
    var cardPerturb1 = function (__dict_Enum_1058) {
        return function (f) {
            return f(Data_Enum.cardinality(__dict_Enum_1058));
        };
    };
    
    /**
     *  ScopedTypeVariables
     */
    var cardDist1 = function (__dict_Enum_1059) {
        return function (f) {
            return f(Data_Enum.cardinality(__dict_Enum_1059));
        };
    };
    var perturbArbEnum = function (__dict_Enum_1060) {
        return new Perturb((function () {
            var perturb$prime = function (n) {
                return function (e) {
                    return cardPerturb1(Test_StrongCheck.enumArbEnum(__dict_Enum_1060))(cardPerturb1F(Test_StrongCheck.enumArbEnum(__dict_Enum_1060))(e)(n));
                };
            };
            var dist$prime = function (a) {
                return function (b) {
                    var f = function (_1115) {
                        return function (_1116) {
                            return function (_1117) {
                                var _4024 = Prelude["=="]((__dict_Enum_1060["__superclass_Prelude.Ord_0"]())["__superclass_Prelude.Eq_0"]())(Test_StrongCheck.runArbEnum(_1116))(Test_StrongCheck.runArbEnum(_1117));
                                if (_4024) {
                                    return 0;
                                };
                                if (!_4024) {
                                    return 1 / (2 * _1115);
                                };
                                throw new Error("Failed pattern match");
                            };
                        };
                    };
                    return cardDist1(Test_StrongCheck.enumArbEnum(__dict_Enum_1060))(f)(a)(b);
                };
            };
            var dims$prime = function (e) {
                var f = function (_1118) {
                    return function (_1119) {
                        var _4027 = _1118 <= 0;
                        if (_4027) {
                            return 0;
                        };
                        if (!_4027) {
                            return 1;
                        };
                        throw new Error("Failed pattern match");
                    };
                };
                return enumDims(Test_StrongCheck.enumArbEnum(__dict_Enum_1060))(f)(e);
            };
            return {
                perturb: perturb$prime, 
                dist: dist$prime, 
                dims: dims$prime
            };
        })());
    };
    var perturbBoolean = new Perturb((function () {
        var perturb$prime = function (n) {
            return function (e) {
                return Prelude["<$>"](Test_StrongCheck_Gen.functorGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Test_StrongCheck.runArbEnum)(perturb(perturbArbEnum(Data_Enum.enumBoolean))(n)(e));
            };
        };
        var dist$prime = function (a) {
            return function (b) {
                return dist(perturbArbEnum(Data_Enum.enumBoolean))(a)(b);
            };
        };
        var dims$prime = Prelude["const"](1);
        return {
            perturb: perturb$prime, 
            dist: dist$prime, 
            dims: dims$prime
        };
    })());
    
    /**
     *  | Creates a perturber for integers that fall within the specified range.
     */
    var boundedInt = function (a) {
        return function (b) {
            var u = Math.ceil(Math.max(a)(b));
            var l = Math.floor(Math.min(a)(b));
            var length = u - l;
            var dist$prime = function (a_1) {
                return function (b_1) {
                    return Math.abs(a_1 - b_1);
                };
            };
            var dims$prime = Prelude["const"](1);
            var clamp = function (n) {
                return Math.max(l)(Math.min(u)(n));
            };
            var perturb$prime = function (d) {
                return function (v) {
                    return Prelude[">>="](Test_StrongCheck_Gen.bindGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Test_StrongCheck.arbitrary(Test_StrongCheck.arbNumber))(function (_75) {
                        return Prelude["<<<"](Prelude.semigroupoidArr)(Prelude["return"](Test_StrongCheck_Gen.monadGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy))))(Prelude["<<<"](Prelude.semigroupoidArr)(clamp)(Math.round))(_75 * length * d + v);
                    });
                };
            };
            return {
                perturb: perturb$prime, 
                dist: dist$prime, 
                dims: dims$prime
            };
        };
    };
    
    /**
     *  | Creates a perturber for numbers that fall within the specified range.
     */
    var bounded = function (a) {
        return function (b) {
            var u = Math.max(a)(b);
            var l = Math.min(a)(b);
            var length = u - l;
            var dist$prime = function (a_1) {
                return function (b_1) {
                    return Math.abs(a_1 - b_1);
                };
            };
            var dims$prime = Prelude["const"](1);
            var clamp = function (n) {
                return Math.max(l)(Math.min(u)(n));
            };
            var perturb$prime = function (d) {
                return function (v) {
                    return Prelude[">>="](Test_StrongCheck_Gen.bindGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Test_StrongCheck.arbitrary(Test_StrongCheck.arbNumber))(function (_74) {
                        return Prelude["<<<"](Prelude.semigroupoidArr)(Prelude["return"](Test_StrongCheck_Gen.monadGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy))))(clamp)(_74 * length * d + v);
                    });
                };
            };
            return {
                perturb: perturb$prime, 
                dist: dist$prime, 
                dims: dims$prime
            };
        };
    };
    return {
        Perturber: Perturber, 
        Attempts: Attempts, 
        Perturb: Perturb, 
        xmap: xmap, 
        unPerturber: unPerturber, 
        searchIn: searchIn, 
        "searchIn'": searchIn$prime, 
        perturber: perturber, 
        perturb: perturb, 
        nonPerturber: nonPerturber, 
        enumerated: enumerated, 
        dims: dims, 
        dist: dist, 
        boundedInt: boundedInt, 
        bounded: bounded, 
        "<\\/>": $less$bslash$div$greater, 
        "</\\>": $less$div$bslash$greater, 
        perturbArbEnum: perturbArbEnum, 
        perturbNumber: perturbNumber, 
        perturbArray: perturbArray, 
        perturbChar: perturbChar, 
        perturbBoolean: perturbBoolean, 
        perturbString: perturbString
    };
})();
var PS = PS || {};
PS.Test_StrongCheck_Landscape = (function () {
    "use strict";
    var Control_Comonad_Cofree = PS.Control_Comonad_Cofree;
    var Data_Lazy = PS.Data_Lazy;
    var Test_StrongCheck_Gen = PS.Test_StrongCheck_Gen;
    var Control_Monad_Trampoline = PS.Control_Monad_Trampoline;
    var Data_Maybe = PS.Data_Maybe;
    var Data_List_Lazy = PS.Data_List_Lazy;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Monoid = PS.Data_Monoid;
    var Prelude = PS.Prelude;
    var Test_StrongCheck_Perturb = PS.Test_StrongCheck_Perturb;
    var Data_Machine_Mealy = PS.Data_Machine_Mealy;
    var Data_Array = PS.Data_Array;
    var Control_Monad_ListT = PS.Control_Monad_ListT;
    var Control_Monad_Free = PS.Control_Monad_Free;
    var DriverState = function (x) {
        return x;
    };
    var Landscape = function (x) {
        return x;
    };
    var unLandscape = function (_1126) {
        return _1126;
    };
    var unDriverState = function (_1125) {
        return _1125;
    };
    var whereAt = function (_1124) {
        return (unDriverState(Control_Comonad_Cofree.head(_1124))).value;
    };
    
    /**
     *  | Samples around the current location area, returning full state information.
     */
    var sampleHere$prime = function (__dict_Perturb_1061) {
        return function (n) {
            return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Lazy.force)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_List_Lazy.toArray(Data_Lazy.monadLazy))(Prelude["<<<"](Prelude.semigroupoidArr)(Data_List_Lazy.take(Data_Lazy.applicativeLazy)(n))(Prelude["<<<"](Prelude.semigroupoidArr)(Prelude["<$>"](Control_Monad_ListT.functorListT(Data_Lazy.functorLazy))(Control_Comonad_Cofree.head))(Prelude["<<<"](Prelude.semigroupoidArr)(Control_Comonad_Cofree.tail)(unLandscape)))));
        };
    };
    
    /**
     *  | Samples around the current location area, returning just the values.
     */
    var sampleHere = function (__dict_Perturb_1062) {
        return function (n) {
            return Prelude["<<<"](Prelude.semigroupoidArr)(Prelude["<$>"](Data_Array.functorArray)(Prelude[">>>"](Prelude.semigroupoidArr)(unDriverState)(function (v) {
                return v.value;
            })))(sampleHere$prime(__dict_Perturb_1062)(n));
        };
    };
    
    /**
     *  | Moves to a location in a landscape that was previously sampled.
     */
    var moveTo = function (__dict_Eq_1063) {
        return function (__dict_Perturb_1064) {
            return function (a) {
                return function (v) {
                    var moveIt = function (a_1) {
                        return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Lazy.force)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_List_Lazy.head(Data_Lazy.monadLazy))(Prelude["<<<"](Prelude.semigroupoidArr)(Data_List_Lazy.filter(Data_Lazy.functorLazy)(function (v_1) {
                            return Prelude["=="](__dict_Eq_1063)((unDriverState(Control_Comonad_Cofree.head(v_1))).value)(a_1);
                        }))(Prelude["<<<"](Prelude.semigroupoidArr)(Control_Comonad_Cofree.tail)(unLandscape))));
                    };
                    return Prelude["<$>"](Data_Maybe.functorMaybe)(Landscape)(moveIt(a)(v));
                };
            };
        };
    };
    var mkState = function (val) {
        return function ($$var) {
            return function (s) {
                return {
                    value: val, 
                    variance: $$var, 
                    state: s
                };
            };
        };
    };
    
    /**
     *  | Creates a landscape that samples the area around a location.
     */
    var nearby$prime = function (__dict_Perturb_1065) {
        return function (s) {
            return function (d) {
                return function (a) {
                    return function (v) {
                        var loop = function (a_1) {
                            return function (s_1) {
                                return function (v_1) {
                                    return Prelude[">>="](Control_Monad_ListT.bindListT(Data_Lazy.monadLazy))(Test_StrongCheck_Gen.toLazyList(Test_StrongCheck_Gen.infinite(Control_Monad_Free.monadFree(Data_Lazy.functorLazy))(Test_StrongCheck_Perturb.perturb(__dict_Perturb_1065)(v_1)(a_1)))(s_1))(function (_78) {
                                        var h = mkState(_78)(v_1)(s_1);
                                        var t = loop(_78)(Test_StrongCheck_Gen.updateSeedState(s_1))(d(v_1));
                                        return Prelude["return"](Control_Monad_ListT.monadListT(Data_Lazy.monadLazy))(Control_Comonad_Cofree.mkCofree(h)(t));
                                    });
                                };
                            };
                        };
                        return Landscape(Control_Comonad_Cofree.mkCofree(mkState(a)(v)(s))(loop(a)(s)(v)));
                    };
                };
            };
        };
    };
    
    /**
     *  | Creates a landscape whose initial points are randomly chosen across
     *  | the entire landscape.
     */
    var everywhere$prime = function (__dict_Perturb_1066) {
        return function (s) {
            return function (d) {
                return function (v) {
                    return function (g) {
                        var go = function (g_1) {
                            return function (s_1) {
                                return Data_Lazy.defer(function (_) {
                                    var o = Prelude["<$>"](Data_Maybe.functorMaybe)(Test_StrongCheck_Gen.unGenOut)(Control_Monad_Trampoline.runTrampoline(Test_StrongCheck_Gen.applyGen(Control_Monad_Free.monadFree(Data_Lazy.functorLazy))(s_1)(g_1)));
                                    return Data_Maybe.maybe(Data_List_Lazy.nil(Data_Lazy.applicativeLazy))(function (o_1) {
                                        var g_2 = Data_Tuple.snd(o_1.value);
                                        var a = Data_Tuple.fst(o_1.value);
                                        return Data_List_Lazy["prepend'"](Data_Lazy.applicativeLazy)(nearby$prime(__dict_Perturb_1066)(o_1.state)(d)(a)(v))(go(g_2)(o_1.state));
                                    })(o);
                                });
                            };
                        };
                        return Data_List_Lazy.wrapEffect(Data_Lazy.monadLazy)(go(Test_StrongCheck_Gen.infinite(Control_Monad_Free.monadFree(Data_Lazy.functorLazy))(g))(s));
                    };
                };
            };
        };
    };
    
    /**
     *  | Picks somewhere and forms a landscape around that location.
     */
    var somewhere$prime = function (__dict_Perturb_1067) {
        return function (s) {
            return function (d) {
                return function (v) {
                    return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Lazy.force)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_List_Lazy.head(Data_Lazy.monadLazy))(everywhere$prime(__dict_Perturb_1067)(s)(d)(v)));
                };
            };
        };
    };
    var decayThird = function (v) {
        return v / 3;
    };
    var decayHalf = function (v) {
        return v / 2;
    };
    var defaultDecay = decayHalf;
    
    /**
     *  | Creates a landscape that samples the area around a location, using the 
     *  | default GenState and Decay.
     */
    var nearby = function (__dict_Perturb_1068) {
        return nearby$prime(__dict_Perturb_1068)(Data_Monoid.mempty(Test_StrongCheck_Gen.monoidGenState))(defaultDecay);
    };
    
    /**
     *  | Picks somewhere and forms a landscape around that location, using the
     *  | default GenState and Decay.
     */
    var somewhere = function (__dict_Perturb_1069) {
        return somewhere$prime(__dict_Perturb_1069)(Data_Monoid.mempty(Test_StrongCheck_Gen.monoidGenState))(defaultDecay);
    };
    
    /**
     *  | Creates a landscape whose initial points are randomly chosen across
     *  | the entire landscape, using the default GenState and Decay.
     */
    var everywhere = function (__dict_Perturb_1070) {
        return everywhere$prime(__dict_Perturb_1070)(Data_Monoid.mempty(Test_StrongCheck_Gen.monoidGenState))(decayHalf);
    };
    return {
        Landscape: Landscape, 
        DriverState: DriverState, 
        whereAt: whereAt, 
        unLandscape: unLandscape, 
        unDriverState: unDriverState, 
        "somewhere'": somewhere$prime, 
        somewhere: somewhere, 
        "sampleHere'": sampleHere$prime, 
        sampleHere: sampleHere, 
        "nearby'": nearby$prime, 
        nearby: nearby, 
        moveTo: moveTo, 
        "everywhere'": everywhere$prime, 
        everywhere: everywhere, 
        defaultDecay: defaultDecay, 
        decayThird: decayThird, 
        decayHalf: decayHalf
    };
})();
PS.Data_Json_JTable_Examples.main();

