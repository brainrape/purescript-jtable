// Generated by psc version 0.6.8
var PS = PS || {};
PS.Prelude = (function () {
    "use strict";
    
    function cons(e) {
      return function(l) {
        return [e].concat(l);
      };
    }
    ;
    
    function showStringImpl(s) {
      return JSON.stringify(s);
    }
    ;
    
    function showNumberImpl(n) {
      return n.toString();
    }
    ;
    
    function numAdd(n1) {
      return function(n2) {
        return n1 + n2;
      };
    }
    ;
    
    function numSub(n1) {
      return function(n2) {
        return n1 - n2;
      };
    }
    ;
    
    function numMul(n1) {
      return function(n2) {
        return n1 * n2;
      };
    }
    ;
    
    function numDiv(n1) {
      return function(n2) {
        return n1 / n2;
      };
    }
    ;
    
    function numMod(n1) {
      return function(n2) {
        return n1 % n2;
      };
    }
    ;
    
    function refEq(r1) {
      return function(r2) {
        return r1 === r2;
      };
    }
    ;
    
    function refIneq(r1) {
      return function(r2) {
        return r1 !== r2;
      };
    }
    ;
    
    function unsafeCompareImpl(lt) {
      return function(eq) {
        return function(gt) {
          return function(x) {
            return function(y) {
              return x < y ? lt : x > y ? gt : eq;
            };
          };
        };
      };
    }
    ;
    
    function numShl(n1) {
      return function(n2) {
        return n1 << n2;
      };
    }
    ;
    
    function numShr(n1) {
      return function(n2) {
        return n1 >> n2;
      };
    }
    ;
    
    function numZshr(n1) {
      return function(n2) {
        return n1 >>> n2;
      };
    }
    ;
    
    function numAnd(n1) {
      return function(n2) {
        return n1 & n2;
      };
    }
    ;
    
    function numOr(n1) {
      return function(n2) {
        return n1 | n2;
      };
    }
    ;
    
    function numXor(n1) {
      return function(n2) {
        return n1 ^ n2;
      };
    }
    ;
    
    function numComplement(n) {
      return ~n;
    }
    ;
    
    function boolAnd(b1) {
      return function(b2) {
        return b1 && b2;
      };
    }
    ;
    
    function boolOr(b1) {
      return function(b2) {
        return b1 || b2;
      };
    }
    ;
    
    function boolNot(b) {
      return !b;
    }
    ;
    
    function concatString(s1) {
      return function(s2) {
        return s1 + s2;
      };
    }
    ;
    var Unit = function (x) {
        return x;
    };
    var LT = (function () {
        function LT() {

        };
        LT.value = new LT();
        return LT;
    })();
    var GT = (function () {
        function GT() {

        };
        GT.value = new GT();
        return GT;
    })();
    var EQ = (function () {
        function EQ() {

        };
        EQ.value = new EQ();
        return EQ;
    })();
    var Semigroupoid = function ($less$less$less) {
        this["<<<"] = $less$less$less;
    };
    var Category = function (__superclass_Prelude$dotSemigroupoid_0, id) {
        this["__superclass_Prelude.Semigroupoid_0"] = __superclass_Prelude$dotSemigroupoid_0;
        this.id = id;
    };
    var Show = function (show) {
        this.show = show;
    };
    var Functor = function ($less$dollar$greater) {
        this["<$>"] = $less$dollar$greater;
    };
    var Apply = function ($less$times$greater, __superclass_Prelude$dotFunctor_0) {
        this["<*>"] = $less$times$greater;
        this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
    };
    var Applicative = function (__superclass_Prelude$dotApply_0, pure) {
        this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
        this.pure = pure;
    };
    var Bind = function ($greater$greater$eq, __superclass_Prelude$dotApply_0) {
        this[">>="] = $greater$greater$eq;
        this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
    };
    var Monad = function (__superclass_Prelude$dotApplicative_0, __superclass_Prelude$dotBind_1) {
        this["__superclass_Prelude.Applicative_0"] = __superclass_Prelude$dotApplicative_0;
        this["__superclass_Prelude.Bind_1"] = __superclass_Prelude$dotBind_1;
    };
    
    /**
     *  | Addition and multiplication
     */
    var Semiring = function ($times, $plus, one, zero) {
        this["*"] = $times;
        this["+"] = $plus;
        this.one = one;
        this.zero = zero;
    };
    
    /**
     *  | Semiring with modulo operation and division where
     *  | ```a / b * b + (a `mod` b) = a```
     */
    var ModuloSemiring = function ($div, __superclass_Prelude$dotSemiring_0, mod) {
        this["/"] = $div;
        this["__superclass_Prelude.Semiring_0"] = __superclass_Prelude$dotSemiring_0;
        this.mod = mod;
    };
    
    /**
     *  | Addition, multiplication, and subtraction
     */
    var Ring = function ($minus, __superclass_Prelude$dotSemiring_0) {
        this["-"] = $minus;
        this["__superclass_Prelude.Semiring_0"] = __superclass_Prelude$dotSemiring_0;
    };
    var Eq = function ($div$eq, $eq$eq) {
        this["/="] = $div$eq;
        this["=="] = $eq$eq;
    };
    var Ord = function (__superclass_Prelude$dotEq_0, compare) {
        this["__superclass_Prelude.Eq_0"] = __superclass_Prelude$dotEq_0;
        this.compare = compare;
    };
    var Bits = function ($dot$amp$dot, $dot$up$dot, $dot$bar$dot, complement, shl, shr, zshr) {
        this[".&."] = $dot$amp$dot;
        this[".^."] = $dot$up$dot;
        this[".|."] = $dot$bar$dot;
        this.complement = complement;
        this.shl = shl;
        this.shr = shr;
        this.zshr = zshr;
    };
    var BoolLike = function ($amp$amp, not, $bar$bar) {
        this["&&"] = $amp$amp;
        this.not = not;
        this["||"] = $bar$bar;
    };
    var Semigroup = function ($less$greater) {
        this["<>"] = $less$greater;
    };
    var $bar$bar = function (dict) {
        return dict["||"];
    };
    var $greater$greater$eq = function (dict) {
        return dict[">>="];
    };
    var $eq$eq = function (dict) {
        return dict["=="];
    };
    var $less$greater = function (dict) {
        return dict["<>"];
    };
    var $less$less$less = function (dict) {
        return dict["<<<"];
    };
    var $greater$greater$greater = function (__dict_Semigroupoid_0) {
        return function (f) {
            return function (g) {
                return $less$less$less(__dict_Semigroupoid_0)(g)(f);
            };
        };
    };
    var $less$times$greater = function (dict) {
        return dict["<*>"];
    };
    var $less$dollar$greater = function (dict) {
        return dict["<$>"];
    };
    var $less$hash$greater = function (__dict_Functor_1) {
        return function (fa) {
            return function (f) {
                return $less$dollar$greater(__dict_Functor_1)(f)(fa);
            };
        };
    };
    var $colon = cons;
    var $div$eq = function (dict) {
        return dict["/="];
    };
    
    /**
     *  | Semiring with modulo operation and division where
     *  | ```a / b * b + (a `mod` b) = a```
     */
    var $div = function (dict) {
        return dict["/"];
    };
    
    /**
     *  | Addition, multiplication, and subtraction
     */
    var $minus = function (dict) {
        return dict["-"];
    };
    var $plus$plus = function (__dict_Semigroup_2) {
        return $less$greater(__dict_Semigroup_2);
    };
    
    /**
     *  | Addition and multiplication
     */
    var $plus = function (dict) {
        return dict["+"];
    };
    
    /**
     *  | Addition and multiplication
     */
    var $times = function (dict) {
        return dict["*"];
    };
    var $amp$amp = function (dict) {
        return dict["&&"];
    };
    var $percent = numMod;
    var $dollar = function (f) {
        return function (x) {
            return f(x);
        };
    };
    var $hash = function (x) {
        return function (f) {
            return f(x);
        };
    };
    
    /**
     *  | Addition and multiplication
     */
    var zero = function (dict) {
        return dict.zero;
    };
    var unsafeCompare = unsafeCompareImpl(LT.value)(EQ.value)(GT.value);
    var unit = {};
    var showString = new Show(showStringImpl);
    var showNumber = new Show(showNumberImpl);
    var showBoolean = new Show(function (_92) {
        if (_92) {
            return "true";
        };
        if (!_92) {
            return "false";
        };
        throw new Error("Failed pattern match");
    });
    var show = function (dict) {
        return dict.show;
    };
    var shl = function (dict) {
        return dict.shl;
    };
    var semiringNumber = new Semiring(numMul, numAdd, 1, 0);
    var semigroupoidArr = new Semigroupoid(function (f) {
        return function (g) {
            return function (x) {
                return f(g(x));
            };
        };
    });
    var semigroupString = new Semigroup(concatString);
    var ringNumber = new Ring(numSub, function () {
        return semiringNumber;
    });
    var pure = function (dict) {
        return dict.pure;
    };
    var $$return = function (__dict_Monad_5) {
        return pure(__dict_Monad_5["__superclass_Prelude.Applicative_0"]());
    };
    var not = function (dict) {
        return dict.not;
    };
    var negate = function (__dict_Ring_6) {
        return function (a) {
            return $minus(__dict_Ring_6)(zero(__dict_Ring_6["__superclass_Prelude.Semiring_0"]()))(a);
        };
    };
    var moduloSemiringNumber = new ModuloSemiring(numDiv, function () {
        return semiringNumber;
    }, function (_93) {
        return function (_94) {
            return 0;
        };
    });
    var liftA1 = function (__dict_Applicative_8) {
        return function (f) {
            return function (a) {
                return $less$times$greater(__dict_Applicative_8["__superclass_Prelude.Apply_0"]())(pure(__dict_Applicative_8)(f))(a);
            };
        };
    };
    var id = function (dict) {
        return dict.id;
    };
    
    /**
     *  | Flips the order of the arguments to a function of two arguments.
     */
    var flip = function (f) {
        return function (b) {
            return function (a) {
                return f(a)(b);
            };
        };
    };
    var eqString = new Eq(refIneq, refEq);
    var ordString = new Ord(function () {
        return eqString;
    }, unsafeCompare);
    var eqNumber = new Eq(refIneq, refEq);
    var ordNumber = new Ord(function () {
        return eqNumber;
    }, unsafeCompare);
    
    /**
     *  | Returns its first argument and ignores its second.
     */
    var $$const = function (_87) {
        return function (_88) {
            return _87;
        };
    };
    var complement = function (dict) {
        return dict.complement;
    };
    var compare = function (dict) {
        return dict.compare;
    };
    var $less = function (__dict_Ord_12) {
        return function (a1) {
            return function (a2) {
                var _1217 = compare(__dict_Ord_12)(a1)(a2);
                if (_1217 instanceof LT) {
                    return true;
                };
                return false;
            };
        };
    };
    var $less$eq = function (__dict_Ord_13) {
        return function (a1) {
            return function (a2) {
                var _1218 = compare(__dict_Ord_13)(a1)(a2);
                if (_1218 instanceof GT) {
                    return false;
                };
                return true;
            };
        };
    };
    var $greater = function (__dict_Ord_14) {
        return function (a1) {
            return function (a2) {
                var _1219 = compare(__dict_Ord_14)(a1)(a2);
                if (_1219 instanceof GT) {
                    return true;
                };
                return false;
            };
        };
    };
    var $greater$eq = function (__dict_Ord_15) {
        return function (a1) {
            return function (a2) {
                var _1220 = compare(__dict_Ord_15)(a1)(a2);
                if (_1220 instanceof LT) {
                    return false;
                };
                return true;
            };
        };
    };
    var categoryArr = new Category(function () {
        return semigroupoidArr;
    }, function (x) {
        return x;
    });
    var boolLikeBoolean = new BoolLike(boolAnd, boolNot, boolOr);
    var bitsNumber = new Bits(numAnd, numXor, numOr, numComplement, numShl, numShr, numZshr);
    var ap = function (__dict_Monad_16) {
        return function (f) {
            return function (a) {
                return $greater$greater$eq(__dict_Monad_16["__superclass_Prelude.Bind_1"]())(f)(function (_3) {
                    return $greater$greater$eq(__dict_Monad_16["__superclass_Prelude.Bind_1"]())(a)(function (_2) {
                        return $$return(__dict_Monad_16)(_3(_2));
                    });
                });
            };
        };
    };
    return {
        Unit: Unit, 
        LT: LT, 
        GT: GT, 
        EQ: EQ, 
        Semigroup: Semigroup, 
        BoolLike: BoolLike, 
        Bits: Bits, 
        Ord: Ord, 
        Eq: Eq, 
        Ring: Ring, 
        ModuloSemiring: ModuloSemiring, 
        Semiring: Semiring, 
        Monad: Monad, 
        Bind: Bind, 
        Applicative: Applicative, 
        Apply: Apply, 
        Functor: Functor, 
        Show: Show, 
        Category: Category, 
        Semigroupoid: Semigroupoid, 
        unit: unit, 
        "++": $plus$plus, 
        "<>": $less$greater, 
        not: not, 
        "||": $bar$bar, 
        "&&": $amp$amp, 
        complement: complement, 
        shl: shl, 
        ">=": $greater$eq, 
        "<=": $less$eq, 
        ">": $greater, 
        "<": $less, 
        compare: compare, 
        refIneq: refIneq, 
        refEq: refEq, 
        "/=": $div$eq, 
        "==": $eq$eq, 
        negate: negate, 
        "%": $percent, 
        "-": $minus, 
        "/": $div, 
        "*": $times, 
        zero: zero, 
        "+": $plus, 
        ap: ap, 
        "return": $$return, 
        ">>=": $greater$greater$eq, 
        liftA1: liftA1, 
        pure: pure, 
        "<*>": $less$times$greater, 
        "<#>": $less$hash$greater, 
        "<$>": $less$dollar$greater, 
        show: show, 
        cons: cons, 
        ":": $colon, 
        "#": $hash, 
        "$": $dollar, 
        id: id, 
        ">>>": $greater$greater$greater, 
        "<<<": $less$less$less, 
        "const": $$const, 
        flip: flip, 
        semigroupoidArr: semigroupoidArr, 
        categoryArr: categoryArr, 
        showString: showString, 
        showBoolean: showBoolean, 
        showNumber: showNumber, 
        semiringNumber: semiringNumber, 
        ringNumber: ringNumber, 
        moduloSemiringNumber: moduloSemiringNumber, 
        eqString: eqString, 
        eqNumber: eqNumber, 
        ordNumber: ordNumber, 
        ordString: ordString, 
        bitsNumber: bitsNumber, 
        boolLikeBoolean: boolLikeBoolean, 
        semigroupString: semigroupString
    };
})();
var PS = PS || {};
PS.Prelude_Unsafe = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    
    function unsafeIndex(xs) {
      return function(n) {
        return xs[n];
      };
    }
    ;
    return {
        unsafeIndex: unsafeIndex
    };
})();
var PS = PS || {};
PS.$$Math = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var ceil = Math.ceil;;
    var floor = Math.floor;;
    function max(n1){  return function(n2) {    return Math.max(n1, n2);  }};
    function min(n1){  return function(n2) {    return Math.min(n1, n2);  }};
    var round = Math.round;;
    return {
        round: round, 
        min: min, 
        max: max, 
        floor: floor, 
        ceil: ceil
    };
})();
var PS = PS || {};
PS.Global = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    return {
        isNaN: isNaN
    };
})();
var PS = PS || {};
PS.Data_Profunctor = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Profunctor = function (dimap) {
        this.dimap = dimap;
    };
    var dimap = function (dict) {
        return dict.dimap;
    };
    var lmap = function (__dict_Profunctor_18) {
        return function (a2b) {
            return dimap(__dict_Profunctor_18)(a2b)(Prelude.id(Prelude.categoryArr));
        };
    };
    return {
        Profunctor: Profunctor, 
        lmap: lmap, 
        dimap: dimap
    };
})();
var PS = PS || {};
PS.Data_Function = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    
    function runFn3(fn) {
      return function(a) {
        return function(b) {
          return function(c) {
            return fn(a, b, c);
          };
        };
      };
    }
    ;
    
    function runFn4(fn) {
      return function(a) {
        return function(b) {
          return function(c) {
            return function(d) {
              return fn(a, b, c, d);
            };
          };
        };
      };
    }
    ;
    
    function runFn7(fn) {
      return function(a) {
        return function(b) {
          return function(c) {
            return function(d) {
              return function(e) {
                return function(f) {
                  return function(g) {
                    return fn(a, b, c, d, e, f, g);
                  };
                };
              };
            };
          };
        };
      };
    }
    ;
    return {
        runFn7: runFn7, 
        runFn4: runFn4, 
        runFn3: runFn3
    };
})();
var PS = PS || {};
PS.Data_Char = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    
    function fromCharCode(c) {
      return String.fromCharCode(c);
    }
    ;
    return {
        fromCharCode: fromCharCode
    };
})();
var PS = PS || {};
PS.Control_Monad_Eff = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    
    function returnE(a) {
      return function() {
        return a;
      };
    }
    ;
    
    function bindE(a) {
      return function(f) {
        return function() {
          return f(a())();
        };
      };
    }
    ;
    
    function runPure(f) {
      return f();
    }
    ;
    var monadEff = new Prelude.Monad(function () {
        return applicativeEff;
    }, function () {
        return bindEff;
    });
    var bindEff = new Prelude.Bind(bindE, function () {
        return applyEff;
    });
    var applyEff = new Prelude.Apply(Prelude.ap(monadEff), function () {
        return functorEff;
    });
    var applicativeEff = new Prelude.Applicative(function () {
        return applyEff;
    }, returnE);
    var functorEff = new Prelude.Functor(Prelude.liftA1(applicativeEff));
    return {
        runPure: runPure, 
        bindE: bindE, 
        returnE: returnE, 
        functorEff: functorEff, 
        applyEff: applyEff, 
        applicativeEff: applicativeEff, 
        bindEff: bindEff, 
        monadEff: monadEff
    };
})();
var PS = PS || {};
PS.Control_Monad_Eff_Random = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    
  function random() {
    return Math.random();
  }
  ;
    return {
        random: random
    };
})();
var PS = PS || {};
PS.Data_Lazy = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Lazy = PS.Control_Lazy;
    var Control_Extend = PS.Control_Extend;
    var Control_Comonad = PS.Control_Comonad;
    function defer(thunk) {    if (this instanceof defer) {      this.thunk = thunk;      return this;    } else {      return new defer(thunk);    }}defer.prototype.force = function () {    var value = this.thunk();    delete this.thunk;    this.force = function () {        return value;    };    return value;};;
    function force(l) {  return l.force();};
    var functorLazy = new Prelude.Functor(function (f) {
        return function (l) {
            return defer(function (_152) {
                return f(force(l));
            });
        };
    });
    return {
        force: force, 
        defer: defer, 
        functorLazy: functorLazy
    };
})();
var PS = PS || {};
PS.Control_Bind = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var $eq$less$less = function (__dict_Bind_62) {
        return function (f) {
            return function (m) {
                return Prelude[">>="](__dict_Bind_62)(m)(f);
            };
        };
    };
    var $less$eq$less = function (__dict_Bind_63) {
        return function (f) {
            return function (g) {
                return function (a) {
                    return $eq$less$less(__dict_Bind_63)(f)(g(a));
                };
            };
        };
    };
    var join = function (__dict_Bind_64) {
        return function (m) {
            return Prelude[">>="](__dict_Bind_64)(m)(Prelude.id(Prelude.categoryArr));
        };
    };
    return {
        join: join, 
        "<=<": $less$eq$less, 
        "=<<": $eq$less$less
    };
})();
var PS = PS || {};
PS.Control_Apply = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var $times$greater = function (__dict_Apply_67) {
        return function (a) {
            return function (b) {
                return Prelude["<*>"](__dict_Apply_67)(Prelude["<$>"](__dict_Apply_67["__superclass_Prelude.Functor_0"]())(Prelude["const"](Prelude.id(Prelude.categoryArr)))(a))(b);
            };
        };
    };
    return {
        "*>": $times$greater
    };
})();
var PS = PS || {};
PS.Control_Alt = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Alt = function ($less$bar$greater, __superclass_Prelude$dotFunctor_0) {
        this["<|>"] = $less$bar$greater;
        this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
    };
    var $less$bar$greater = function (dict) {
        return dict["<|>"];
    };
    return {
        Alt: Alt, 
        "<|>": $less$bar$greater
    };
})();
var PS = PS || {};
PS.Control_Plus = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Alt = PS.Control_Alt;
    var Plus = function (__superclass_Control$dotAlt$dotAlt_0, empty) {
        this["__superclass_Control.Alt.Alt_0"] = __superclass_Control$dotAlt$dotAlt_0;
        this.empty = empty;
    };
    var empty = function (dict) {
        return dict.empty;
    };
    return {
        Plus: Plus, 
        empty: empty
    };
})();
var PS = PS || {};
PS.Control_Alternative = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Lazy = PS.Control_Lazy;
    var Control_Alt = PS.Control_Alt;
    var Control_Plus = PS.Control_Plus;
    var Alternative = function (__superclass_Control$dotPlus$dotPlus_1, __superclass_Prelude$dotApplicative_0) {
        this["__superclass_Control.Plus.Plus_1"] = __superclass_Control$dotPlus$dotPlus_1;
        this["__superclass_Prelude.Applicative_0"] = __superclass_Prelude$dotApplicative_0;
    };
    return {
        Alternative: Alternative
    };
})();
var PS = PS || {};
PS.Control_MonadPlus = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Plus = PS.Control_Plus;
    var Control_Alternative = PS.Control_Alternative;
    var MonadPlus = function (__superclass_Control$dotAlternative$dotAlternative_1, __superclass_Prelude$dotMonad_0) {
        this["__superclass_Control.Alternative.Alternative_1"] = __superclass_Control$dotAlternative$dotAlternative_1;
        this["__superclass_Prelude.Monad_0"] = __superclass_Prelude$dotMonad_0;
    };
    var guard = function (__dict_MonadPlus_77) {
        return function (_168) {
            if (_168) {
                return Prelude["return"](__dict_MonadPlus_77["__superclass_Prelude.Monad_0"]())(Prelude.unit);
            };
            if (!_168) {
                return Control_Plus.empty((__dict_MonadPlus_77["__superclass_Control.Alternative.Alternative_1"]())["__superclass_Control.Plus.Plus_1"]());
            };
            throw new Error("Failed pattern match");
        };
    };
    return {
        MonadPlus: MonadPlus, 
        guard: guard
    };
})();
var PS = PS || {};
PS.Data_Either = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Alt = PS.Control_Alt;
    var Left = (function () {
        function Left(value0) {
            this.value0 = value0;
        };
        Left.create = function (value0) {
            return new Left(value0);
        };
        return Left;
    })();
    var Right = (function () {
        function Right(value0) {
            this.value0 = value0;
        };
        Right.create = function (value0) {
            return new Right(value0);
        };
        return Right;
    })();
    var functorEither = new Prelude.Functor(function (_174) {
        return function (_175) {
            if (_175 instanceof Left) {
                return new Left(_175.value0);
            };
            if (_175 instanceof Right) {
                return new Right(_174(_175.value0));
            };
            throw new Error("Failed pattern match");
        };
    });
    var either = function (_171) {
        return function (_172) {
            return function (_173) {
                if (_173 instanceof Left) {
                    return _171(_173.value0);
                };
                if (_173 instanceof Right) {
                    return _172(_173.value0);
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var applyEither = new Prelude.Apply(function (_176) {
        return function (_177) {
            if (_176 instanceof Left) {
                return new Left(_176.value0);
            };
            if (_176 instanceof Right) {
                return Prelude["<$>"](functorEither)(_176.value0)(_177);
            };
            throw new Error("Failed pattern match");
        };
    }, function () {
        return functorEither;
    });
    var bindEither = new Prelude.Bind(either(function (e) {
        return function (_170) {
            return new Left(e);
        };
    })(function (a) {
        return function (f) {
            return f(a);
        };
    }), function () {
        return applyEither;
    });
    return {
        Left: Left, 
        Right: Right, 
        either: either, 
        functorEither: functorEither, 
        applyEither: applyEither, 
        bindEither: bindEither
    };
})();
var PS = PS || {};
PS.Data_Maybe = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Alt = PS.Control_Alt;
    var Control_Alternative = PS.Control_Alternative;
    var Control_Extend = PS.Control_Extend;
    var Control_MonadPlus = PS.Control_MonadPlus;
    var Control_Plus = PS.Control_Plus;
    var Nothing = (function () {
        function Nothing() {

        };
        Nothing.value = new Nothing();
        return Nothing;
    })();
    var Just = (function () {
        function Just(value0) {
            this.value0 = value0;
        };
        Just.create = function (value0) {
            return new Just(value0);
        };
        return Just;
    })();
    var maybe = function (_194) {
        return function (_195) {
            return function (_196) {
                if (_196 instanceof Nothing) {
                    return _194;
                };
                if (_196 instanceof Just) {
                    return _195(_196.value0);
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var functorMaybe = new Prelude.Functor(function (_197) {
        return function (_198) {
            if (_198 instanceof Just) {
                return new Just(_197(_198.value0));
            };
            return Nothing.value;
        };
    });
    var fromMaybe = function (a) {
        return maybe(a)(Prelude.id(Prelude.categoryArr));
    };
    var eqMaybe = function (__dict_Eq_97) {
        return new Prelude.Eq(function (a) {
            return function (b) {
                return !Prelude["=="](eqMaybe(__dict_Eq_97))(a)(b);
            };
        }, function (_210) {
            return function (_211) {
                if (_210 instanceof Nothing && _211 instanceof Nothing) {
                    return true;
                };
                if (_210 instanceof Just && _211 instanceof Just) {
                    return Prelude["=="](__dict_Eq_97)(_210.value0)(_211.value0);
                };
                return false;
            };
        });
    };
    var applyMaybe = new Prelude.Apply(function (_199) {
        return function (_200) {
            if (_199 instanceof Just) {
                return Prelude["<$>"](functorMaybe)(_199.value0)(_200);
            };
            if (_199 instanceof Nothing) {
                return Nothing.value;
            };
            throw new Error("Failed pattern match");
        };
    }, function () {
        return functorMaybe;
    });
    var bindMaybe = new Prelude.Bind(function (_203) {
        return function (_204) {
            if (_203 instanceof Just) {
                return _204(_203.value0);
            };
            if (_203 instanceof Nothing) {
                return Nothing.value;
            };
            throw new Error("Failed pattern match");
        };
    }, function () {
        return applyMaybe;
    });
    var applicativeMaybe = new Prelude.Applicative(function () {
        return applyMaybe;
    }, Just.create);
    var monadMaybe = new Prelude.Monad(function () {
        return applicativeMaybe;
    }, function () {
        return bindMaybe;
    });
    var altMaybe = new Control_Alt.Alt(function (_201) {
        return function (_202) {
            if (_201 instanceof Nothing) {
                return _202;
            };
            return _201;
        };
    }, function () {
        return functorMaybe;
    });
    var plusMaybe = new Control_Plus.Plus(function () {
        return altMaybe;
    }, Nothing.value);
    var alternativeMaybe = new Control_Alternative.Alternative(function () {
        return plusMaybe;
    }, function () {
        return applicativeMaybe;
    });
    var monadPlusMaybe = new Control_MonadPlus.MonadPlus(function () {
        return alternativeMaybe;
    }, function () {
        return monadMaybe;
    });
    return {
        Nothing: Nothing, 
        Just: Just, 
        fromMaybe: fromMaybe, 
        maybe: maybe, 
        functorMaybe: functorMaybe, 
        applyMaybe: applyMaybe, 
        applicativeMaybe: applicativeMaybe, 
        altMaybe: altMaybe, 
        plusMaybe: plusMaybe, 
        alternativeMaybe: alternativeMaybe, 
        bindMaybe: bindMaybe, 
        monadMaybe: monadMaybe, 
        monadPlusMaybe: monadPlusMaybe, 
        eqMaybe: eqMaybe
    };
})();
var PS = PS || {};
PS.Data_Array = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    var Control_Alt = PS.Control_Alt;
    var Control_Plus = PS.Control_Plus;
    var Control_Alternative = PS.Control_Alternative;
    var Control_MonadPlus = PS.Control_MonadPlus;
    var Prelude_Unsafe = PS.Prelude_Unsafe;
    function snoc(l) {  return function (e) {    var l1 = l.slice();    l1.push(e);     return l1;  };};
    function length (xs) {  return xs.length;};
    function findIndex (f) {  return function (arr) {    for (var i = 0, l = arr.length; i < l; i++) {      if (f(arr[i])) {        return i;      }    }    return -1;  };};
    function append (l1) {  return function (l2) {    return l1.concat(l2);  };};
    function concat (xss) {  var result = [];  for (var i = 0, l = xss.length; i < l; i++) {    result.push.apply(result, xss[i]);  }  return result;};
    function updateAt (index) {  return function (a) {    return function (l) {      var i = ~~index;      if (i < 0 || i >= l.length) return l;      var l1 = l.slice();      l1[i] = a;      return l1;    };   };};
    function concatMap (f) {  return function (arr) {    var result = [];    for (var i = 0, l = arr.length; i < l; i++) {      Array.prototype.push.apply(result, f(arr[i]));    }    return result;  };};
    function map (f) {  return function (arr) {    var l = arr.length;    var result = new Array(l);    for (var i = 0; i < l; i++) {      result[i] = f(arr[i]);    }    return result;  };};
    function filter (f) {  return function (arr) {    var n = 0;    var result = [];    for (var i = 0, l = arr.length; i < l; i++) {      if (f(arr[i])) {        result[n++] = arr[i];      }    }    return result;  };};
    function range (start) {  return function (end) {    var i = ~~start, e = ~~end;    var step = i > e ? -1 : 1;    var result = [i], n = 1;    while (i !== e) {      i += step;      result[n++] = i;    }    return result;  };};
    function zipWith (f) {  return function (xs) {    return function (ys) {      var l = xs.length < ys.length ? xs.length : ys.length;      var result = new Array(l);      for (var i = 0; i < l; i++) {        result[i] = f(xs[i])(ys[i]);      }      return result;    };  };};
    function sortJS (f) {  return function (l) {    return l.slice().sort(function (x, y) {      return f(x)(y);    });  };};
    var $dot$dot = range;
    var $bang$bang = function (xs) {
        return function (n) {
            var isInt = function (n_1) {
                return n_1 !== ~~n_1;
            };
            var _1258 = n < 0 || (n >= length(xs) || isInt(n));
            if (_1258) {
                return Data_Maybe.Nothing.value;
            };
            if (!_1258) {
                return new Data_Maybe.Just(xs[n]);
            };
            throw new Error("Failed pattern match");
        };
    };
    var tail = function (_216) {
        if (_216.length >= 1) {
            var _1261 = _216.slice(1);
            return new Data_Maybe.Just(_1261);
        };
        return Data_Maybe.Nothing.value;
    };
    var sortBy = function (comp) {
        return function (xs) {
            var comp$prime = function (x) {
                return function (y) {
                    var _1262 = comp(x)(y);
                    if (_1262 instanceof Prelude.GT) {
                        return 1;
                    };
                    if (_1262 instanceof Prelude.EQ) {
                        return 0;
                    };
                    if (_1262 instanceof Prelude.LT) {
                        return -1;
                    };
                    throw new Error("Failed pattern match");
                };
            };
            return sortJS(comp$prime)(xs);
        };
    };
    var singleton = function (a) {
        return [ a ];
    };
    var semigroupArray = new Prelude.Semigroup(append);
    var $$null = function (_218) {
        if (_218.length === 0) {
            return true;
        };
        return false;
    };
    var nubBy = function (_225) {
        return function (_226) {
            if (_226.length === 0) {
                return [  ];
            };
            if (_226.length >= 1) {
                var _1267 = _226.slice(1);
                return Prelude[":"](_226[0])(nubBy(_225)(filter(function (y) {
                    return !_225(_226[0])(y);
                })(_1267)));
            };
            throw new Error("Failed pattern match");
        };
    };
    var nub = function (__dict_Eq_99) {
        return nubBy(Prelude["=="](__dict_Eq_99));
    };
    var last = function (__copy__215) {
        var _215 = __copy__215;
        tco: while (true) {
            if (_215.length >= 1) {
                var _1270 = _215.slice(1);
                if (_1270.length === 0) {
                    return new Data_Maybe.Just(_215[0]);
                };
            };
            if (_215.length >= 1) {
                var _1272 = _215.slice(1);
                _215 = _1272;
                continue tco;
            };
            return Data_Maybe.Nothing.value;
        };
    };
    var head = function (_214) {
        if (_214.length >= 1) {
            var _1275 = _214.slice(1);
            return new Data_Maybe.Just(_214[0]);
        };
        return Data_Maybe.Nothing.value;
    };
    var functorArray = new Prelude.Functor(map);
    var monadArray = new Prelude.Monad(function () {
        return applicativeArray;
    }, function () {
        return bindArray;
    });
    var bindArray = new Prelude.Bind(Prelude.flip(concatMap), function () {
        return applyArray;
    });
    var applyArray = new Prelude.Apply(Prelude.ap(monadArray), function () {
        return functorArray;
    });
    var applicativeArray = new Prelude.Applicative(function () {
        return applyArray;
    }, singleton);
    return {
        sortBy: sortBy, 
        nubBy: nubBy, 
        nub: nub, 
        zipWith: zipWith, 
        range: range, 
        filter: filter, 
        concatMap: concatMap, 
        updateAt: updateAt, 
        concat: concat, 
        append: append, 
        findIndex: findIndex, 
        length: length, 
        map: map, 
        "null": $$null, 
        tail: tail, 
        last: last, 
        head: head, 
        singleton: singleton, 
        snoc: snoc, 
        "..": $dot$dot, 
        "!!": $bang$bang, 
        functorArray: functorArray, 
        applyArray: applyArray, 
        applicativeArray: applicativeArray, 
        bindArray: bindArray, 
        monadArray: monadArray, 
        semigroupArray: semigroupArray
    };
})();
var PS = PS || {};
PS.Data_Monoid = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Array = PS.Data_Array;
    var Data_Maybe = PS.Data_Maybe;
    var Monoid = function (__superclass_Prelude$dotSemigroup_0, mempty) {
        this["__superclass_Prelude.Semigroup_0"] = __superclass_Prelude$dotSemigroup_0;
        this.mempty = mempty;
    };
    var monoidArray = new Monoid(function () {
        return Data_Array.semigroupArray;
    }, [  ]);
    var mempty = function (dict) {
        return dict.mempty;
    };
    return {
        Monoid: Monoid, 
        mempty: mempty, 
        monoidArray: monoidArray
    };
})();
var PS = PS || {};
PS.Data_Tuple = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var Control_Lazy = PS.Control_Lazy;
    var Data_Array = PS.Data_Array;
    var Control_Comonad = PS.Control_Comonad;
    var Control_Extend = PS.Control_Extend;
    var Tuple = (function () {
        function Tuple(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        };
        Tuple.create = function (value0) {
            return function (value1) {
                return new Tuple(value0, value1);
            };
        };
        return Tuple;
    })();
    var zip = Data_Array.zipWith(Tuple.create);
    var uncurry = function (_295) {
        return function (_296) {
            return _295(_296.value0)(_296.value1);
        };
    };
    var swap = function (_298) {
        return new Tuple(_298.value1, _298.value0);
    };
    var snd = function (_294) {
        return _294.value1;
    };
    var fst = function (_293) {
        return _293.value0;
    };
    return {
        Tuple: Tuple, 
        swap: swap, 
        zip: zip, 
        uncurry: uncurry, 
        snd: snd, 
        fst: fst
    };
})();
var PS = PS || {};
PS.Data_Profunctor_Strong = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Profunctor = PS.Data_Profunctor;
    var Data_Tuple = PS.Data_Tuple;
    var Strong = function (__superclass_Data$dotProfunctor$dotProfunctor_0, first, second) {
        this["__superclass_Data.Profunctor.Profunctor_0"] = __superclass_Data$dotProfunctor$dotProfunctor_0;
        this.first = first;
        this.second = second;
    };
    var first = function (dict) {
        return dict.first;
    };
    return {
        Strong: Strong, 
        first: first
    };
})();
var PS = PS || {};
PS.Control_Arrow = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Profunctor_Strong = PS.Data_Profunctor_Strong;
    var Data_Tuple = PS.Data_Tuple;
    var Arrow = function (__superclass_Data$dotProfunctor$dotStrong$dotStrong_1, __superclass_Prelude$dotCategory_0, arr) {
        this["__superclass_Data.Profunctor.Strong.Strong_1"] = __superclass_Data$dotProfunctor$dotStrong$dotStrong_1;
        this["__superclass_Prelude.Category_0"] = __superclass_Prelude$dotCategory_0;
        this.arr = arr;
    };
    var arr = function (dict) {
        return dict.arr;
    };
    return {
        Arrow: Arrow, 
        arr: arr
    };
})();
var PS = PS || {};
PS.Data_Machine_Mealy = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Bind = PS.Control_Bind;
    var Data_Array = PS.Data_Array;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Profunctor_Strong = PS.Data_Profunctor_Strong;
    var Data_Profunctor = PS.Data_Profunctor;
    var Data_Monoid = PS.Data_Monoid;
    var Data_Maybe = PS.Data_Maybe;
    var Control_Arrow = PS.Control_Arrow;
    var Control_Monad = PS.Control_Monad;
    var Control_Plus = PS.Control_Plus;
    var Control_Alt = PS.Control_Alt;
    var Control_Alternative = PS.Control_Alternative;
    var Control_MonadPlus = PS.Control_MonadPlus;
    var MealyT = (function () {
        function MealyT(value0) {
            this.value0 = value0;
        };
        MealyT.create = function (value0) {
            return new MealyT(value0);
        };
        return MealyT;
    })();
    var Emit = (function () {
        function Emit(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        };
        Emit.create = function (value0) {
            return function (value1) {
                return new Emit(value0, value1);
            };
        };
        return Emit;
    })();
    var Halt = (function () {
        function Halt() {

        };
        Halt.value = new Halt();
        return Halt;
    })();
    var stepMealy = function (__dict_Monad_264) {
        return function (_383) {
            return function (_384) {
                return Control_Bind.join(__dict_Monad_264["__superclass_Prelude.Bind_1"]())(Prelude["<*>"]((__dict_Monad_264["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())(_384.value0)(Prelude.pure(__dict_Monad_264["__superclass_Prelude.Applicative_0"]())(_383)));
            };
        };
    };
    var pureMealy = function (__dict_Applicative_266) {
        return function (f) {
            return MealyT.create(Prelude.pure(__dict_Applicative_266)(function (s) {
                return Prelude.pure(__dict_Applicative_266)(f(s));
            }));
        };
    };
    var mealy = function (__dict_Applicative_269) {
        return function (f) {
            return MealyT.create(Prelude.pure(__dict_Applicative_269)(f));
        };
    };
    var profunctorMealy = function (__dict_Monad_271) {
        return new Data_Profunctor.Profunctor(function (l) {
            return function (r) {
                var remap = function (m) {
                    var g = function (_400) {
                        if (_400 instanceof Emit) {
                            return new Emit(r(_400.value0), remap(_400.value1));
                        };
                        if (_400 instanceof Halt) {
                            return Halt.value;
                        };
                        throw new Error("Failed pattern match");
                    };
                    return mealy(__dict_Monad_271["__superclass_Prelude.Applicative_0"]())(function (s) {
                        return Prelude["<$>"](((__dict_Monad_271["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(g)(stepMealy(__dict_Monad_271)(l(s))(m));
                    });
                };
                return remap;
            };
        });
    };
    var semigroupMealy = function (__dict_Monad_272) {
        return new Prelude.Semigroup(function (l) {
            return function (r) {
                return mealy(__dict_Monad_272["__superclass_Prelude.Applicative_0"]())(function (s) {
                    var g = function (_402) {
                        if (_402 instanceof Emit) {
                            return Prelude.pure(__dict_Monad_272["__superclass_Prelude.Applicative_0"]())(new Emit(_402.value0, Prelude["<>"](semigroupMealy(__dict_Monad_272))(_402.value1)(r)));
                        };
                        if (_402 instanceof Halt) {
                            return stepMealy(__dict_Monad_272)(s)(r);
                        };
                        throw new Error("Failed pattern match");
                    };
                    return Prelude[">>="](__dict_Monad_272["__superclass_Prelude.Bind_1"]())(stepMealy(__dict_Monad_272)(s)(l))(g);
                });
            };
        });
    };
    var semigroupoidMealy = function (__dict_Monad_273) {
        return new Prelude.Semigroupoid(function (f) {
            return function (g) {
                var gb = function (_403) {
                    if (_403 instanceof Halt) {
                        return Prelude.pure(__dict_Monad_273["__superclass_Prelude.Applicative_0"]())(Halt.value);
                    };
                    if (_403 instanceof Emit) {
                        var fc = function (_404) {
                            if (_404 instanceof Emit) {
                                return new Emit(_404.value0, Prelude["<<<"](semigroupoidMealy(__dict_Monad_273))(_404.value1)(_403.value1));
                            };
                            if (_404 instanceof Halt) {
                                return Halt.value;
                            };
                            throw new Error("Failed pattern match");
                        };
                        return Prelude["<$>"](((__dict_Monad_273["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(fc)(stepMealy(__dict_Monad_273)(_403.value0)(f));
                    };
                    throw new Error("Failed pattern match");
                };
                return mealy(__dict_Monad_273["__superclass_Prelude.Applicative_0"]())(function (b) {
                    return Prelude[">>="](__dict_Monad_273["__superclass_Prelude.Bind_1"]())(stepMealy(__dict_Monad_273)(b)(g))(gb);
                });
            };
        });
    };
    var strongMealy = function (__dict_Monad_276) {
        return new Data_Profunctor_Strong.Strong(function () {
            return profunctorMealy(__dict_Monad_276);
        }, function (m) {
            return mealy(__dict_Monad_276["__superclass_Prelude.Applicative_0"]())(function (s) {
                var d = Data_Tuple.snd(s);
                var g = function (_401) {
                    if (_401 instanceof Emit) {
                        return new Emit(new Data_Tuple.Tuple(_401.value0, d), Data_Profunctor_Strong.first(strongMealy(__dict_Monad_276))(_401.value1));
                    };
                    if (_401 instanceof Halt) {
                        return Halt.value;
                    };
                    throw new Error("Failed pattern match");
                };
                var b = Data_Tuple.fst(s);
                return Prelude["<$>"](((__dict_Monad_276["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(g)(stepMealy(__dict_Monad_276)(b)(m));
            });
        }, Prelude["<<<"](Prelude.semigroupoidArr)(Data_Profunctor.dimap(profunctorMealy(__dict_Monad_276))(Data_Tuple.swap)(Data_Tuple.swap))(Data_Profunctor_Strong.first(strongMealy(__dict_Monad_276))));
    };
    var halt = function (__dict_Applicative_281) {
        return pureMealy(__dict_Applicative_281)(Prelude["const"](Halt.value));
    };
    var take = function (__dict_Monad_285) {
        return function (n) {
            return function (m) {
                var f = function (_387) {
                    if (_387 instanceof Halt) {
                        return Halt.value;
                    };
                    if (_387 instanceof Emit) {
                        return new Emit(_387.value0, take(__dict_Monad_285)(n - 1)(_387.value1));
                    };
                    throw new Error("Failed pattern match");
                };
                var _1310 = n <= 0;
                if (_1310) {
                    return halt(__dict_Monad_285["__superclass_Prelude.Applicative_0"]());
                };
                if (!_1310) {
                    return mealy(__dict_Monad_285["__superclass_Prelude.Applicative_0"]())(function (s) {
                        return Prelude["<$>"](((__dict_Monad_285["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(f)(stepMealy(__dict_Monad_285)(s)(m));
                    });
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var functorMealy = function (__dict_Monad_289) {
        return new Prelude.Functor(function (f) {
            return function (m) {
                var g = function (_397) {
                    if (_397 instanceof Emit) {
                        return new Emit(f(_397.value0), Prelude["<$>"](functorMealy(__dict_Monad_289))(f)(_397.value1));
                    };
                    if (_397 instanceof Halt) {
                        return Halt.value;
                    };
                    throw new Error("Failed pattern match");
                };
                return mealy(__dict_Monad_289["__superclass_Prelude.Applicative_0"]())(function (s) {
                    return Prelude["<$>"](((__dict_Monad_289["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(g)(stepMealy(__dict_Monad_289)(s)(m));
                });
            };
        });
    };
    var categoryMealy = function (__dict_Monad_294) {
        return new Prelude.Category(function () {
            return semigroupoidMealy(__dict_Monad_294);
        }, pureMealy(__dict_Monad_294["__superclass_Prelude.Applicative_0"]())(function (t) {
            return new Emit(t, Prelude.id(categoryMealy(__dict_Monad_294)));
        }));
    };
    var arrowMealy = function (__dict_Monad_296) {
        return new Control_Arrow.Arrow(function () {
            return strongMealy(__dict_Monad_296);
        }, function () {
            return categoryMealy(__dict_Monad_296);
        }, function (f) {
            return pureMealy(__dict_Monad_296["__superclass_Prelude.Applicative_0"]())(function (b) {
                return new Emit(f(b), halt(__dict_Monad_296["__superclass_Prelude.Applicative_0"]()));
            });
        });
    };
    var applyMealy = function (__dict_Monad_297) {
        return new Prelude.Apply(function (f) {
            return function (x) {
                return mealy(__dict_Monad_297["__superclass_Prelude.Applicative_0"]())(function (s) {
                    var ap = function (_398) {
                        return function (_399) {
                            if (_398 instanceof Halt) {
                                return Halt.value;
                            };
                            if (_399 instanceof Halt) {
                                return Halt.value;
                            };
                            if (_398 instanceof Emit && _399 instanceof Emit) {
                                return new Emit(_398.value0(_399.value0), Prelude["<*>"](applyMealy(__dict_Monad_297))(_398.value1)(_399.value1));
                            };
                            throw new Error("Failed pattern match");
                        };
                    };
                    return Prelude["<*>"]((__dict_Monad_297["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())(Prelude["<$>"](((__dict_Monad_297["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(ap)(stepMealy(__dict_Monad_297)(s)(f)))(stepMealy(__dict_Monad_297)(s)(x));
                });
            };
        }, function () {
            return functorMealy(__dict_Monad_297);
        });
    };
    var bindMealy = function (__dict_Monad_295) {
        return new Prelude.Bind(function (m) {
            return function (f) {
                return mealy(__dict_Monad_295["__superclass_Prelude.Applicative_0"]())(function (s) {
                    var g = function (_405) {
                        if (_405 instanceof Emit) {
                            var h = function (_406) {
                                if (_406 instanceof Emit) {
                                    return new Emit(_406.value0, Prelude["<>"](semigroupMealy(__dict_Monad_295))(_406.value1)(Prelude[">>="](bindMealy(__dict_Monad_295))(_405.value1)(f)));
                                };
                                if (_406 instanceof Halt) {
                                    return Halt.value;
                                };
                                throw new Error("Failed pattern match");
                            };
                            return Prelude["<$>"](((__dict_Monad_295["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(h)(stepMealy(__dict_Monad_295)(s)(f(_405.value0)));
                        };
                        if (_405 instanceof Halt) {
                            return Prelude.pure(__dict_Monad_295["__superclass_Prelude.Applicative_0"]())(Halt.value);
                        };
                        throw new Error("Failed pattern match");
                    };
                    return Prelude[">>="](__dict_Monad_295["__superclass_Prelude.Bind_1"]())(stepMealy(__dict_Monad_295)(s)(m))(g);
                });
            };
        }, function () {
            return applyMealy(__dict_Monad_295);
        });
    };
    var applicativeMealy = function (__dict_Monad_298) {
        return new Prelude.Applicative(function () {
            return applyMealy(__dict_Monad_298);
        }, function (t) {
            return pureMealy(__dict_Monad_298["__superclass_Prelude.Applicative_0"]())(function (s) {
                return new Emit(t, halt(__dict_Monad_298["__superclass_Prelude.Applicative_0"]()));
            });
        });
    };
    var monadMealy = function (__dict_Monad_268) {
        return new Prelude.Monad(function () {
            return applicativeMealy(__dict_Monad_268);
        }, function () {
            return bindMealy(__dict_Monad_268);
        });
    };
    return {
        Emit: Emit, 
        Halt: Halt, 
        MealyT: MealyT, 
        take: take, 
        halt: halt, 
        mealy: mealy, 
        pureMealy: pureMealy, 
        stepMealy: stepMealy, 
        functorMealy: functorMealy, 
        applyMealy: applyMealy, 
        applicativeMealy: applicativeMealy, 
        profunctorMealy: profunctorMealy, 
        strongMealy: strongMealy, 
        semigroupMealy: semigroupMealy, 
        semigroupoidMealy: semigroupoidMealy, 
        categoryMealy: categoryMealy, 
        arrowMealy: arrowMealy, 
        bindMealy: bindMealy, 
        monadMealy: monadMealy
    };
})();
var PS = PS || {};
PS.Data_Foldable = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var Control_Apply = PS.Control_Apply;
    var Data_Monoid_First = PS.Data_Monoid_First;
    var Data_Either = PS.Data_Either;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Tuple = PS.Data_Tuple;
    
  function foldrArray(f) {
    return function(z) {
      return function(xs) {
        var acc = z;
        for (var i = xs.length - 1; i >= 0; --i) {
          acc = f(xs[i])(acc);
        }
        return acc;
      }
    }
  };
    
  function foldlArray(f) {
    return function(z) {
      return function(xs) {
        var acc = z;
        for (var i = 0, len = xs.length; i < len; ++i) {
          acc = f(acc)(xs[i]);
        }
        return acc;
      }
    }
  };
    var Foldable = function (foldMap, foldl, foldr) {
        this.foldMap = foldMap;
        this.foldl = foldl;
        this.foldr = foldr;
    };
    var foldr = function (dict) {
        return dict.foldr;
    };
    var traverse_ = function (__dict_Applicative_304) {
        return function (__dict_Foldable_305) {
            return function (f) {
                return foldr(__dict_Foldable_305)(Prelude["<<<"](Prelude.semigroupoidArr)(Control_Apply["*>"](__dict_Applicative_304["__superclass_Prelude.Apply_0"]()))(f))(Prelude.pure(__dict_Applicative_304)(Prelude.unit));
            };
        };
    };
    var for_ = function (__dict_Applicative_306) {
        return function (__dict_Foldable_307) {
            return Prelude.flip(traverse_(__dict_Applicative_306)(__dict_Foldable_307));
        };
    };
    var foldl = function (dict) {
        return dict.foldl;
    };
    var mconcat = function (__dict_Foldable_312) {
        return function (__dict_Monoid_313) {
            return foldl(__dict_Foldable_312)(Prelude["<>"](__dict_Monoid_313["__superclass_Prelude.Semigroup_0"]()))(Data_Monoid.mempty(__dict_Monoid_313));
        };
    };
    var or = function (__dict_Foldable_314) {
        return foldl(__dict_Foldable_314)(Prelude["||"](Prelude.boolLikeBoolean))(false);
    };
    var foldableArray = new Foldable(function (__dict_Monoid_320) {
        return function (f) {
            return function (xs) {
                return foldr(foldableArray)(function (x) {
                    return function (acc) {
                        return Prelude["<>"](__dict_Monoid_320["__superclass_Prelude.Semigroup_0"]())(f(x))(acc);
                    };
                })(Data_Monoid.mempty(__dict_Monoid_320))(xs);
            };
        };
    }, function (f) {
        return function (z) {
            return function (xs) {
                return foldlArray(f)(z)(xs);
            };
        };
    }, function (f) {
        return function (z) {
            return function (xs) {
                return foldrArray(f)(z)(xs);
            };
        };
    });
    var foldMap = function (dict) {
        return dict.foldMap;
    };
    var any = function (__dict_Foldable_326) {
        return function (p) {
            return Prelude["<<<"](Prelude.semigroupoidArr)(or(foldableArray))(foldMap(__dict_Foldable_326)(Data_Monoid.monoidArray)(function (x) {
                return [ p(x) ];
            }));
        };
    };
    var elem = function (__dict_Eq_327) {
        return function (__dict_Foldable_328) {
            return Prelude["<<<"](Prelude.semigroupoidArr)(any(__dict_Foldable_328))(Prelude["=="](__dict_Eq_327));
        };
    };
    var and = function (__dict_Foldable_331) {
        return foldl(__dict_Foldable_331)(Prelude["&&"](Prelude.boolLikeBoolean))(true);
    };
    var all = function (__dict_Foldable_332) {
        return function (p) {
            return Prelude["<<<"](Prelude.semigroupoidArr)(and(foldableArray))(foldMap(__dict_Foldable_332)(Data_Monoid.monoidArray)(function (x) {
                return [ p(x) ];
            }));
        };
    };
    return {
        Foldable: Foldable, 
        foldlArray: foldlArray, 
        foldrArray: foldrArray, 
        elem: elem, 
        all: all, 
        any: any, 
        or: or, 
        and: and, 
        mconcat: mconcat, 
        for_: for_, 
        traverse_: traverse_, 
        foldMap: foldMap, 
        foldl: foldl, 
        foldr: foldr, 
        foldableArray: foldableArray
    };
})();
var PS = PS || {};
PS.Data_StrMap_ST = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Control_Monad_ST = PS.Control_Monad_ST;
    var Data_Maybe = PS.Data_Maybe;
    
  function _new() {
    return {};
  }
  ;
    
  function poke(m) {
    return function(k) {
      return function(v) {
        return function() {
          m[k] = v;
          return m;
        };
      };
    };
  }
  ;
    var $$new = _new;
    return {
        poke: poke, 
        "new": $$new
    };
})();
var PS = PS || {};
PS.Data_String = (function () {
    "use strict";
    var Data_Function = PS.Data_Function;
    var Data_Char = PS.Data_Char;
    var Prelude = PS.Prelude;
    var Data_String_Unsafe = PS.Data_String_Unsafe;
    var Data_Maybe = PS.Data_Maybe;
    
    function fromCharArray(a) {
      return a.join('');
    }
    ;
    
    function indexOf(x) {
      return function(s) {
        return s.indexOf(x);
      };
    }
    ;
    
    function localeCompare(s1) {
      return function(s2) {
        return s1.localeCompare(s2);
      };
    }
    ;
    
    function split(sep) {
      return function(s) {
        return s.split(sep);
      };
    }
    ;
    
    function joinWith(s) {
      return function(xs) {
        return xs.join(s);
      };
    }
    ;
    return {
        joinWith: joinWith, 
        split: split, 
        localeCompare: localeCompare, 
        indexOf: indexOf, 
        fromCharArray: fromCharArray
    };
})();
var PS = PS || {};
PS.Data_String_Regex = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_String = PS.Data_String;
    var Data_Function = PS.Data_Function;
    var Data_Maybe = PS.Data_Maybe;
    
  function regex$prime(s1) {
    return function(s2) {
      return new RegExp(s1, s2);
    };
  }
  ;
    
  function test(r) {
    return function(s) {
      return r.test(s);
    };
  }
  ;
    
  function _match(r, s, Just, Nothing) {
    var m = s.match(r);
    return m == null ? Nothing : Just(m);
  }
  ;
    
  function replace(r) {
    return function(s1) {
      return function(s2) {
        return s2.replace(r, s1);
      };
    };
  }
  ;
    var renderFlags = function (flags) {
        return (function () {
            if (flags.global) {
                return "g";
            };
            if (!flags.global) {
                return "";
            };
            throw new Error("Failed pattern match");
        })() + ((function () {
            if (flags.ignoreCase) {
                return "i";
            };
            if (!flags.ignoreCase) {
                return "";
            };
            throw new Error("Failed pattern match");
        })() + ((function () {
            if (flags.multiline) {
                return "m";
            };
            if (!flags.multiline) {
                return "";
            };
            throw new Error("Failed pattern match");
        })() + ((function () {
            if (flags.sticky) {
                return "y";
            };
            if (!flags.sticky) {
                return "";
            };
            throw new Error("Failed pattern match");
        })() + (function () {
            if (flags.unicode) {
                return "u";
            };
            if (!flags.unicode) {
                return "";
            };
            throw new Error("Failed pattern match");
        })())));
    };
    var regex = function (source) {
        return function (flags) {
            return regex$prime(source)(renderFlags(flags));
        };
    };
    var parseFlags = function (s) {
        return {
            global: Data_String.indexOf("g")(s) >= 0, 
            ignoreCase: Data_String.indexOf("i")(s) >= 0, 
            multiline: Data_String.indexOf("m")(s) >= 0, 
            sticky: Data_String.indexOf("y")(s) >= 0, 
            unicode: Data_String.indexOf("u")(s) >= 0
        };
    };
    var noFlags = {
        global: false, 
        ignoreCase: false, 
        multiline: false, 
        sticky: false, 
        unicode: false
    };
    var match = function (r) {
        return function (s) {
            return _match(r, s, Data_Maybe.Just.create, Data_Maybe.Nothing.value);
        };
    };
    return {
        noFlags: noFlags, 
        replace: replace, 
        match: match, 
        test: test, 
        parseFlags: parseFlags, 
        renderFlags: renderFlags, 
        regex: regex
    };
})();
var PS = PS || {};
PS.Data_Traversable = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Array = PS.Data_Array;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Either = PS.Data_Either;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Maybe = PS.Data_Maybe;
    var Traversable = function (__superclass_Data$dotFoldable$dotFoldable_1, __superclass_Prelude$dotFunctor_0, sequence, traverse) {
        this["__superclass_Data.Foldable.Foldable_1"] = __superclass_Data$dotFoldable$dotFoldable_1;
        this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
        this.sequence = sequence;
        this.traverse = traverse;
    };
    var traverse = function (dict) {
        return dict.traverse;
    };
    var sequence = function (dict) {
        return dict.sequence;
    };
    var traversableArray = new Traversable(function () {
        return Data_Foldable.foldableArray;
    }, function () {
        return Data_Array.functorArray;
    }, function (__dict_Applicative_343) {
        return function (_469) {
            if (_469.length === 0) {
                return Prelude.pure(__dict_Applicative_343)([  ]);
            };
            if (_469.length >= 1) {
                var _1333 = _469.slice(1);
                return Prelude["<*>"](__dict_Applicative_343["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((__dict_Applicative_343["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Prelude[":"])(_469[0]))(sequence(traversableArray)(__dict_Applicative_343)(_1333));
            };
            throw new Error("Failed pattern match");
        };
    }, function (__dict_Applicative_342) {
        return function (_467) {
            return function (_468) {
                if (_468.length === 0) {
                    return Prelude.pure(__dict_Applicative_342)([  ]);
                };
                if (_468.length >= 1) {
                    var _1337 = _468.slice(1);
                    return Prelude["<*>"](__dict_Applicative_342["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((__dict_Applicative_342["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Prelude[":"])(_467(_468[0])))(traverse(traversableArray)(__dict_Applicative_342)(_467)(_1337));
                };
                throw new Error("Failed pattern match");
            };
        };
    });
    var $$for = function (__dict_Applicative_349) {
        return function (__dict_Traversable_350) {
            return function (x) {
                return function (f) {
                    return traverse(__dict_Traversable_350)(__dict_Applicative_349)(f)(x);
                };
            };
        };
    };
    return {
        Traversable: Traversable, 
        "for": $$for, 
        sequence: sequence, 
        traverse: traverse, 
        traversableArray: traversableArray
    };
})();
var PS = PS || {};
PS.Control_Monad_Free = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Coyoneda = PS.Data_Coyoneda;
    var Data_Either = PS.Data_Either;
    var Data_Inject = PS.Data_Inject;
    var Data_Function = PS.Data_Function;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Pure = (function () {
        function Pure(value0) {
            this.value0 = value0;
        };
        Pure.create = function (value0) {
            return new Pure(value0);
        };
        return Pure;
    })();
    var Free = (function () {
        function Free(value0) {
            this.value0 = value0;
        };
        Free.create = function (value0) {
            return new Free(value0);
        };
        return Free;
    })();
    var Gosub = (function () {
        function Gosub(value0) {
            this.value0 = value0;
        };
        Gosub.create = function (value0) {
            return new Gosub(value0);
        };
        return Gosub;
    })();
    var monadFree = function (__dict_Functor_478) {
        return new Prelude.Monad(function () {
            return applicativeFree(__dict_Functor_478);
        }, function () {
            return bindFree(__dict_Functor_478);
        });
    };
    var functorFree = function (__dict_Functor_493) {
        return new Prelude.Functor(function (_639) {
            return function (_640) {
                if (_640 instanceof Pure) {
                    return new Pure(_639(_640.value0));
                };
                return Prelude.liftA1(applicativeFree(__dict_Functor_493))(_639)(_640);
            };
        });
    };
    var bindFree = function (__dict_Functor_494) {
        return new Prelude.Bind(function (_641) {
            return function (_642) {
                if (_641 instanceof Gosub) {
                    return new Gosub(function (h) {
                        return _641.value0(function (a) {
                            return function (i) {
                                return h(a)(function (x) {
                                    return new Gosub(function (j) {
                                        return j(Prelude["const"](i(x)))(_642);
                                    });
                                });
                            };
                        });
                    });
                };
                return new Gosub(function (h) {
                    return h(Prelude["const"](_641))(_642);
                });
            };
        }, function () {
            return applyFree(__dict_Functor_494);
        });
    };
    var applyFree = function (__dict_Functor_495) {
        return new Prelude.Apply(Prelude.ap(monadFree(__dict_Functor_495)), function () {
            return functorFree(__dict_Functor_495);
        });
    };
    var applicativeFree = function (__dict_Functor_496) {
        return new Prelude.Applicative(function () {
            return applyFree(__dict_Functor_496);
        }, Pure.create);
    };
    var resumeGosub = function (__dict_Functor_473) {
        return function (_636) {
            if (_636 instanceof Gosub) {
                return _636.value0(function (a) {
                    return function (g) {
                        var _1345 = a(Prelude.unit);
                        if (_1345 instanceof Pure) {
                            return new Data_Either.Right(g(_1345.value0));
                        };
                        if (_1345 instanceof Free) {
                            return new Data_Either.Left(Prelude["<$>"](__dict_Functor_473)(function (h) {
                                return Prelude[">>="](bindFree(__dict_Functor_473))(h)(g);
                            })(_1345.value0));
                        };
                        if (_1345 instanceof Gosub) {
                            return new Data_Either.Right(_1345.value0(function (b) {
                                return function (i) {
                                    return Prelude[">>="](bindFree(__dict_Functor_473))(b(Prelude.unit))(function (x) {
                                        return Prelude[">>="](bindFree(__dict_Functor_473))(i(x))(g);
                                    });
                                };
                            }));
                        };
                        throw new Error("Failed pattern match");
                    };
                });
            };
            throw new Error("Failed pattern match");
        };
    };
    var resume = function (__copy___dict_Functor_474) {
        return function (__copy_f) {
            var __dict_Functor_474 = __copy___dict_Functor_474;
            var f = __copy_f;
            tco: while (true) {
                if (f instanceof Pure) {
                    return new Data_Either.Right(f.value0);
                };
                if (f instanceof Free) {
                    return new Data_Either.Left(f.value0);
                };
                var _1353 = resumeGosub(__dict_Functor_474)(f);
                if (_1353 instanceof Data_Either.Left) {
                    return new Data_Either.Left(_1353.value0);
                };
                if (_1353 instanceof Data_Either.Right) {
                    var __tco___dict_Functor_474 = __dict_Functor_474;
                    __dict_Functor_474 = __tco___dict_Functor_474;
                    f = _1353.value0;
                    continue tco;
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var go = function (__copy___dict_Functor_492) {
        return function (__copy_fn) {
            return function (__copy_f) {
                var __dict_Functor_492 = __copy___dict_Functor_492;
                var fn = __copy_fn;
                var f = __copy_f;
                tco: while (true) {
                    var _1356 = resume(__dict_Functor_492)(f);
                    if (_1356 instanceof Data_Either.Left) {
                        var __tco___dict_Functor_492 = __dict_Functor_492;
                        var __tco_fn = fn;
                        var __tco_f = fn(_1356.value0);
                        __dict_Functor_492 = __tco___dict_Functor_492;
                        fn = __tco_fn;
                        f = __tco_f;
                        continue tco;
                    };
                    if (_1356 instanceof Data_Either.Right) {
                        return _1356.value0;
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
    };
    return {
        Pure: Pure, 
        Free: Free, 
        Gosub: Gosub, 
        go: go, 
        functorFree: functorFree, 
        applyFree: applyFree, 
        applicativeFree: applicativeFree, 
        bindFree: bindFree, 
        monadFree: monadFree
    };
})();
var PS = PS || {};
PS.Control_Monad_Trampoline = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Lazy = PS.Data_Lazy;
    var Control_Monad_Free = PS.Control_Monad_Free;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Traversable = PS.Data_Traversable;
    var runTrampoline = Control_Monad_Free.go(Data_Lazy.functorLazy)(Data_Lazy.force);
    return {
        runTrampoline: runTrampoline
    };
})();
var PS = PS || {};
PS.Data_Map = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Traversable = PS.Data_Traversable;
    var Data_Array = PS.Data_Array;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Monoid = PS.Data_Monoid;
    var Leaf = (function () {
        function Leaf() {

        };
        Leaf.value = new Leaf();
        return Leaf;
    })();
    var Two = (function () {
        function Two(value0, value1, value2, value3) {
            this.value0 = value0;
            this.value1 = value1;
            this.value2 = value2;
            this.value3 = value3;
        };
        Two.create = function (value0) {
            return function (value1) {
                return function (value2) {
                    return function (value3) {
                        return new Two(value0, value1, value2, value3);
                    };
                };
            };
        };
        return Two;
    })();
    var Three = (function () {
        function Three(value0, value1, value2, value3, value4, value5, value6) {
            this.value0 = value0;
            this.value1 = value1;
            this.value2 = value2;
            this.value3 = value3;
            this.value4 = value4;
            this.value5 = value5;
            this.value6 = value6;
        };
        Three.create = function (value0) {
            return function (value1) {
                return function (value2) {
                    return function (value3) {
                        return function (value4) {
                            return function (value5) {
                                return function (value6) {
                                    return new Three(value0, value1, value2, value3, value4, value5, value6);
                                };
                            };
                        };
                    };
                };
            };
        };
        return Three;
    })();
    var TwoLeft = (function () {
        function TwoLeft(value0, value1, value2) {
            this.value0 = value0;
            this.value1 = value1;
            this.value2 = value2;
        };
        TwoLeft.create = function (value0) {
            return function (value1) {
                return function (value2) {
                    return new TwoLeft(value0, value1, value2);
                };
            };
        };
        return TwoLeft;
    })();
    var TwoRight = (function () {
        function TwoRight(value0, value1, value2) {
            this.value0 = value0;
            this.value1 = value1;
            this.value2 = value2;
        };
        TwoRight.create = function (value0) {
            return function (value1) {
                return function (value2) {
                    return new TwoRight(value0, value1, value2);
                };
            };
        };
        return TwoRight;
    })();
    var ThreeLeft = (function () {
        function ThreeLeft(value0, value1, value2, value3, value4, value5) {
            this.value0 = value0;
            this.value1 = value1;
            this.value2 = value2;
            this.value3 = value3;
            this.value4 = value4;
            this.value5 = value5;
        };
        ThreeLeft.create = function (value0) {
            return function (value1) {
                return function (value2) {
                    return function (value3) {
                        return function (value4) {
                            return function (value5) {
                                return new ThreeLeft(value0, value1, value2, value3, value4, value5);
                            };
                        };
                    };
                };
            };
        };
        return ThreeLeft;
    })();
    var ThreeMiddle = (function () {
        function ThreeMiddle(value0, value1, value2, value3, value4, value5) {
            this.value0 = value0;
            this.value1 = value1;
            this.value2 = value2;
            this.value3 = value3;
            this.value4 = value4;
            this.value5 = value5;
        };
        ThreeMiddle.create = function (value0) {
            return function (value1) {
                return function (value2) {
                    return function (value3) {
                        return function (value4) {
                            return function (value5) {
                                return new ThreeMiddle(value0, value1, value2, value3, value4, value5);
                            };
                        };
                    };
                };
            };
        };
        return ThreeMiddle;
    })();
    var ThreeRight = (function () {
        function ThreeRight(value0, value1, value2, value3, value4, value5) {
            this.value0 = value0;
            this.value1 = value1;
            this.value2 = value2;
            this.value3 = value3;
            this.value4 = value4;
            this.value5 = value5;
        };
        ThreeRight.create = function (value0) {
            return function (value1) {
                return function (value2) {
                    return function (value3) {
                        return function (value4) {
                            return function (value5) {
                                return new ThreeRight(value0, value1, value2, value3, value4, value5);
                            };
                        };
                    };
                };
            };
        };
        return ThreeRight;
    })();
    var KickUp = (function () {
        function KickUp(value0, value1, value2, value3) {
            this.value0 = value0;
            this.value1 = value1;
            this.value2 = value2;
            this.value3 = value3;
        };
        KickUp.create = function (value0) {
            return function (value1) {
                return function (value2) {
                    return function (value3) {
                        return new KickUp(value0, value1, value2, value3);
                    };
                };
            };
        };
        return KickUp;
    })();
    var lookup = function (__copy___dict_Ord_619) {
        return function (__copy__700) {
            return function (__copy__701) {
                var __dict_Ord_619 = __copy___dict_Ord_619;
                var _700 = __copy__700;
                var _701 = __copy__701;
                tco: while (true) {
                    if (_701 instanceof Leaf) {
                        return Data_Maybe.Nothing.value;
                    };
                    if (_701 instanceof Two && Prelude["=="](__dict_Ord_619["__superclass_Prelude.Eq_0"]())(_700)(_701.value1)) {
                        return new Data_Maybe.Just(_701.value2);
                    };
                    if (_701 instanceof Two && Prelude["<"](__dict_Ord_619)(_700)(_701.value1)) {
                        var __tco___dict_Ord_619 = __dict_Ord_619;
                        var __tco__700 = _700;
                        var __tco__701 = _701.value0;
                        __dict_Ord_619 = __tco___dict_Ord_619;
                        _700 = __tco__700;
                        _701 = __tco__701;
                        continue tco;
                    };
                    if (_701 instanceof Two) {
                        var __tco___dict_Ord_619 = __dict_Ord_619;
                        var __tco__700 = _700;
                        var __tco__701 = _701.value3;
                        __dict_Ord_619 = __tco___dict_Ord_619;
                        _700 = __tco__700;
                        _701 = __tco__701;
                        continue tco;
                    };
                    if (_701 instanceof Three && Prelude["=="](__dict_Ord_619["__superclass_Prelude.Eq_0"]())(_700)(_701.value1)) {
                        return new Data_Maybe.Just(_701.value2);
                    };
                    if (_701 instanceof Three && Prelude["=="](__dict_Ord_619["__superclass_Prelude.Eq_0"]())(_700)(_701.value4)) {
                        return new Data_Maybe.Just(_701.value5);
                    };
                    if (_701 instanceof Three && Prelude["<"](__dict_Ord_619)(_700)(_701.value1)) {
                        var __tco___dict_Ord_619 = __dict_Ord_619;
                        var __tco__700 = _700;
                        var __tco__701 = _701.value0;
                        __dict_Ord_619 = __tco___dict_Ord_619;
                        _700 = __tco__700;
                        _701 = __tco__701;
                        continue tco;
                    };
                    if (_701 instanceof Three && (Prelude["<"](__dict_Ord_619)(_701.value1)(_700) && Prelude["<="](__dict_Ord_619)(_700)(_701.value4))) {
                        var __tco___dict_Ord_619 = __dict_Ord_619;
                        var __tco__700 = _700;
                        var __tco__701 = _701.value3;
                        __dict_Ord_619 = __tco___dict_Ord_619;
                        _700 = __tco__700;
                        _701 = __tco__701;
                        continue tco;
                    };
                    if (_701 instanceof Three) {
                        var __tco___dict_Ord_619 = __dict_Ord_619;
                        var __tco__700 = _700;
                        var __tco__701 = _701.value6;
                        __dict_Ord_619 = __tco___dict_Ord_619;
                        _700 = __tco__700;
                        _701 = __tco__701;
                        continue tco;
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
    };
    var keys = function (_705) {
        if (_705 instanceof Leaf) {
            return [  ];
        };
        if (_705 instanceof Two) {
            return Prelude["++"](Data_Array.semigroupArray)(keys(_705.value0))(Prelude["++"](Data_Array.semigroupArray)([ _705.value1 ])(keys(_705.value3)));
        };
        if (_705 instanceof Three) {
            return Prelude["++"](Data_Array.semigroupArray)(keys(_705.value0))(Prelude["++"](Data_Array.semigroupArray)([ _705.value1 ])(Prelude["++"](Data_Array.semigroupArray)(keys(_705.value3))(Prelude["++"](Data_Array.semigroupArray)([ _705.value4 ])(keys(_705.value6)))));
        };
        throw new Error("Failed pattern match");
    };
    var fromZipper = function (__copy___dict_Ord_621) {
        return function (__copy__702) {
            return function (__copy__703) {
                var __dict_Ord_621 = __copy___dict_Ord_621;
                var _702 = __copy__702;
                var _703 = __copy__703;
                tco: while (true) {
                    if (_702.length === 0) {
                        return _703;
                    };
                    if (_702.length >= 1) {
                        var _1426 = _702.slice(1);
                        if (_702[0] instanceof TwoLeft) {
                            var __tco___dict_Ord_621 = __dict_Ord_621;
                            var __tco__703 = new Two(_703, (_702[0]).value0, (_702[0]).value1, (_702[0]).value2);
                            __dict_Ord_621 = __tco___dict_Ord_621;
                            _702 = _1426;
                            _703 = __tco__703;
                            continue tco;
                        };
                    };
                    if (_702.length >= 1) {
                        var _1431 = _702.slice(1);
                        if (_702[0] instanceof TwoRight) {
                            var __tco___dict_Ord_621 = __dict_Ord_621;
                            var __tco__703 = new Two((_702[0]).value0, (_702[0]).value1, (_702[0]).value2, _703);
                            __dict_Ord_621 = __tco___dict_Ord_621;
                            _702 = _1431;
                            _703 = __tco__703;
                            continue tco;
                        };
                    };
                    if (_702.length >= 1) {
                        var _1439 = _702.slice(1);
                        if (_702[0] instanceof ThreeLeft) {
                            var __tco___dict_Ord_621 = __dict_Ord_621;
                            var __tco__703 = new Three(_703, (_702[0]).value0, (_702[0]).value1, (_702[0]).value2, (_702[0]).value3, (_702[0]).value4, (_702[0]).value5);
                            __dict_Ord_621 = __tco___dict_Ord_621;
                            _702 = _1439;
                            _703 = __tco__703;
                            continue tco;
                        };
                    };
                    if (_702.length >= 1) {
                        var _1447 = _702.slice(1);
                        if (_702[0] instanceof ThreeMiddle) {
                            var __tco___dict_Ord_621 = __dict_Ord_621;
                            var __tco__703 = new Three((_702[0]).value0, (_702[0]).value1, (_702[0]).value2, _703, (_702[0]).value3, (_702[0]).value4, (_702[0]).value5);
                            __dict_Ord_621 = __tco___dict_Ord_621;
                            _702 = _1447;
                            _703 = __tco__703;
                            continue tco;
                        };
                    };
                    if (_702.length >= 1) {
                        var _1455 = _702.slice(1);
                        if (_702[0] instanceof ThreeRight) {
                            var __tco___dict_Ord_621 = __dict_Ord_621;
                            var __tco__703 = new Three((_702[0]).value0, (_702[0]).value1, (_702[0]).value2, (_702[0]).value3, (_702[0]).value4, (_702[0]).value5, _703);
                            __dict_Ord_621 = __tco___dict_Ord_621;
                            _702 = _1455;
                            _703 = __tco__703;
                            continue tco;
                        };
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
    };
    var insert = function (__dict_Ord_622) {
        var up = function (__copy___dict_Ord_623) {
            return function (__copy__714) {
                return function (__copy__715) {
                    var __dict_Ord_623 = __copy___dict_Ord_623;
                    var _714 = __copy__714;
                    var _715 = __copy__715;
                    tco: while (true) {
                        if (_714.length === 0) {
                            return new Two(_715.value0, _715.value1, _715.value2, _715.value3);
                        };
                        if (_714.length >= 1) {
                            var _1470 = _714.slice(1);
                            if (_714[0] instanceof TwoLeft) {
                                return fromZipper(__dict_Ord_623)(_1470)(new Three(_715.value0, _715.value1, _715.value2, _715.value3, (_714[0]).value0, (_714[0]).value1, (_714[0]).value2));
                            };
                        };
                        if (_714.length >= 1) {
                            var _1479 = _714.slice(1);
                            if (_714[0] instanceof TwoRight) {
                                return fromZipper(__dict_Ord_623)(_1479)(new Three((_714[0]).value0, (_714[0]).value1, (_714[0]).value2, _715.value0, _715.value1, _715.value2, _715.value3));
                            };
                        };
                        if (_714.length >= 1) {
                            var _1491 = _714.slice(1);
                            if (_714[0] instanceof ThreeLeft) {
                                var __tco___dict_Ord_623 = __dict_Ord_623;
                                var __tco__715 = new KickUp(new Two(_715.value0, _715.value1, _715.value2, _715.value3), (_714[0]).value0, (_714[0]).value1, new Two((_714[0]).value2, (_714[0]).value3, (_714[0]).value4, (_714[0]).value5));
                                __dict_Ord_623 = __tco___dict_Ord_623;
                                _714 = _1491;
                                _715 = __tco__715;
                                continue tco;
                            };
                        };
                        if (_714.length >= 1) {
                            var _1503 = _714.slice(1);
                            if (_714[0] instanceof ThreeMiddle) {
                                var __tco___dict_Ord_623 = __dict_Ord_623;
                                var __tco__715 = new KickUp(new Two((_714[0]).value0, (_714[0]).value1, (_714[0]).value2, _715.value0), _715.value1, _715.value2, new Two(_715.value3, (_714[0]).value3, (_714[0]).value4, (_714[0]).value5));
                                __dict_Ord_623 = __tco___dict_Ord_623;
                                _714 = _1503;
                                _715 = __tco__715;
                                continue tco;
                            };
                        };
                        if (_714.length >= 1) {
                            var _1515 = _714.slice(1);
                            if (_714[0] instanceof ThreeRight) {
                                var __tco___dict_Ord_623 = __dict_Ord_623;
                                var __tco__715 = new KickUp(new Two((_714[0]).value0, (_714[0]).value1, (_714[0]).value2, (_714[0]).value3), (_714[0]).value4, (_714[0]).value5, new Two(_715.value0, _715.value1, _715.value2, _715.value3));
                                __dict_Ord_623 = __tco___dict_Ord_623;
                                _714 = _1515;
                                _715 = __tco__715;
                                continue tco;
                            };
                        };
                        throw new Error("Failed pattern match");
                    };
                };
            };
        };
        var down = function (__copy___dict_Ord_624) {
            return function (__copy__710) {
                return function (__copy__711) {
                    return function (__copy__712) {
                        return function (__copy__713) {
                            var __dict_Ord_624 = __copy___dict_Ord_624;
                            var _710 = __copy__710;
                            var _711 = __copy__711;
                            var _712 = __copy__712;
                            var _713 = __copy__713;
                            tco: while (true) {
                                if (_713 instanceof Leaf) {
                                    return up(__dict_Ord_624)(_710)(new KickUp(Leaf.value, _711, _712, Leaf.value));
                                };
                                if (_713 instanceof Two && Prelude["=="](__dict_Ord_624["__superclass_Prelude.Eq_0"]())(_711)(_713.value1)) {
                                    return fromZipper(__dict_Ord_624)(_710)(new Two(_713.value0, _711, _712, _713.value3));
                                };
                                if (_713 instanceof Two && Prelude["<"](__dict_Ord_624)(_711)(_713.value1)) {
                                    var __tco___dict_Ord_624 = __dict_Ord_624;
                                    var __tco__710 = Prelude[":"](new TwoLeft(_713.value1, _713.value2, _713.value3))(_710);
                                    var __tco__711 = _711;
                                    var __tco__712 = _712;
                                    var __tco__713 = _713.value0;
                                    __dict_Ord_624 = __tco___dict_Ord_624;
                                    _710 = __tco__710;
                                    _711 = __tco__711;
                                    _712 = __tco__712;
                                    _713 = __tco__713;
                                    continue tco;
                                };
                                if (_713 instanceof Two) {
                                    var __tco___dict_Ord_624 = __dict_Ord_624;
                                    var __tco__710 = Prelude[":"](new TwoRight(_713.value0, _713.value1, _713.value2))(_710);
                                    var __tco__711 = _711;
                                    var __tco__712 = _712;
                                    var __tco__713 = _713.value3;
                                    __dict_Ord_624 = __tco___dict_Ord_624;
                                    _710 = __tco__710;
                                    _711 = __tco__711;
                                    _712 = __tco__712;
                                    _713 = __tco__713;
                                    continue tco;
                                };
                                if (_713 instanceof Three && Prelude["=="](__dict_Ord_624["__superclass_Prelude.Eq_0"]())(_711)(_713.value1)) {
                                    return fromZipper(__dict_Ord_624)(_710)(new Three(_713.value0, _711, _712, _713.value3, _713.value4, _713.value5, _713.value6));
                                };
                                if (_713 instanceof Three && Prelude["=="](__dict_Ord_624["__superclass_Prelude.Eq_0"]())(_711)(_713.value4)) {
                                    return fromZipper(__dict_Ord_624)(_710)(new Three(_713.value0, _713.value1, _713.value2, _713.value3, _711, _712, _713.value6));
                                };
                                if (_713 instanceof Three && Prelude["<"](__dict_Ord_624)(_711)(_713.value1)) {
                                    var __tco___dict_Ord_624 = __dict_Ord_624;
                                    var __tco__710 = Prelude[":"](new ThreeLeft(_713.value1, _713.value2, _713.value3, _713.value4, _713.value5, _713.value6))(_710);
                                    var __tco__711 = _711;
                                    var __tco__712 = _712;
                                    var __tco__713 = _713.value0;
                                    __dict_Ord_624 = __tco___dict_Ord_624;
                                    _710 = __tco__710;
                                    _711 = __tco__711;
                                    _712 = __tco__712;
                                    _713 = __tco__713;
                                    continue tco;
                                };
                                if (_713 instanceof Three && (Prelude["<"](__dict_Ord_624)(_713.value1)(_711) && Prelude["<="](__dict_Ord_624)(_711)(_713.value4))) {
                                    var __tco___dict_Ord_624 = __dict_Ord_624;
                                    var __tco__710 = Prelude[":"](new ThreeMiddle(_713.value0, _713.value1, _713.value2, _713.value4, _713.value5, _713.value6))(_710);
                                    var __tco__711 = _711;
                                    var __tco__712 = _712;
                                    var __tco__713 = _713.value3;
                                    __dict_Ord_624 = __tco___dict_Ord_624;
                                    _710 = __tco__710;
                                    _711 = __tco__711;
                                    _712 = __tco__712;
                                    _713 = __tco__713;
                                    continue tco;
                                };
                                if (_713 instanceof Three) {
                                    var __tco___dict_Ord_624 = __dict_Ord_624;
                                    var __tco__710 = Prelude[":"](new ThreeRight(_713.value0, _713.value1, _713.value2, _713.value3, _713.value4, _713.value5))(_710);
                                    var __tco__711 = _711;
                                    var __tco__712 = _712;
                                    var __tco__713 = _713.value6;
                                    __dict_Ord_624 = __tco___dict_Ord_624;
                                    _710 = __tco__710;
                                    _711 = __tco__711;
                                    _712 = __tco__712;
                                    _713 = __tco__713;
                                    continue tco;
                                };
                                throw new Error("Failed pattern match");
                            };
                        };
                    };
                };
            };
        };
        return down(__dict_Ord_622)([  ]);
    };
    var empty = Leaf.value;
    var fromList = function (__dict_Ord_628) {
        return Data_Foldable.foldl(Data_Foldable.foldableArray)(function (m) {
            return function (_697) {
                return insert(__dict_Ord_628)(_697.value0)(_697.value1)(m);
            };
        })(empty);
    };
    return {
        keys: keys, 
        fromList: fromList, 
        lookup: lookup, 
        insert: insert, 
        empty: empty
    };
})();
var PS = PS || {};
PS.Data_StrMap = (function () {
    "use strict";
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Prelude = PS.Prelude;
    var Data_Function = PS.Data_Function;
    var Data_Monoid = PS.Data_Monoid;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Traversable = PS.Data_Traversable;
    var Data_Maybe = PS.Data_Maybe;
    var Data_StrMap_ST = PS.Data_StrMap_ST;
    var Data_Monoid_All = PS.Data_Monoid_All;
    var Control_Monad_ST = PS.Control_Monad_ST;
    var Data_Array = PS.Data_Array;
    
  function runST(f) {
    return f;
  }
  ;
    
  function all(f) {
    return function(m) {
      for (var k in m) {
        if (!f(k)(m[k])) return false;
      }
      return true;
    };
  }
  ;
    
  function _lookup(no, yes, k, m) {
    return k in m ? yes(m[k]) : no;
  }
  ;
    
  function _collect(f) {
    return function(m) {
      var r = [];
      for (var k in m) {
        r.push(f(k)(m[k]));
      }
      return r;
    };
  }
  ;
    
  var keys = Object.keys || _collect(function(k) {
    return function() { return k; };
  });
  ;
    var toList = _collect(Data_Tuple.Tuple.create);
    var pureST = function (f) {
        return Control_Monad_Eff.runPure(runST(f));
    };
    var lookup = Data_Function.runFn4(_lookup)(Data_Maybe.Nothing.value)(Data_Maybe.Just.create);
    var isEmpty = all(function (_743) {
        return function (_742) {
            return false;
        };
    });
    var fromList = function (l) {
        return pureST(function __do() {
            var _33 = Data_StrMap_ST["new"]();
            Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableArray)(l)(function (_744) {
                return Data_StrMap_ST.poke(_33)(_744.value0)(_744.value1);
            })();
            return _33;
        });
    };
    return {
        runST: runST, 
        all: all, 
        keys: keys, 
        fromList: fromList, 
        toList: toList, 
        lookup: lookup, 
        isEmpty: isEmpty
    };
})();
var PS = PS || {};
PS.Data_Date = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Enum = PS.Data_Enum;
    var Global = PS.Global;
    var Data_Maybe_Unsafe = PS.Data_Maybe_Unsafe;
    var Data_Function = PS.Data_Function;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Data_Maybe = PS.Data_Maybe;
    function jsDateMethod(method) {   return function(date) {     return date[method]();   }; };
    function jsDateConstructor(x) {   return new Date(x); };
    var DateTime = (function () {
        function DateTime(value0) {
            this.value0 = value0;
        };
        DateTime.create = function (value0) {
            return new DateTime(value0);
        };
        return DateTime;
    })();
    var liftDate = function (_851) {
        return function (_852) {
            return _851(_852.value0);
        };
    };
    var showDate = new Prelude.Show(liftDate(jsDateMethod("toString")));
    var fromJSDate = function (d) {
        var _1579 = Global.isNaN(jsDateMethod("getTime")(d));
        if (_1579) {
            return Data_Maybe.Nothing.value;
        };
        if (!_1579) {
            return Data_Maybe.Just.create(new DateTime(d));
        };
        throw new Error("Failed pattern match");
    };
    var fromString = Prelude["<<<"](Prelude.semigroupoidArr)(fromJSDate)(jsDateConstructor);
    return {
        fromString: fromString, 
        fromJSDate: fromJSDate, 
        showDate: showDate
    };
})();
var PS = PS || {};
PS.Data_Argonaut_Core = (function () {
    "use strict";
    var Data_Function = PS.Data_Function;
    var Prelude = PS.Prelude;
    var Data_StrMap = PS.Data_StrMap;
    var Optic_Prism = PS.Optic_Prism;
    var Optic_Fold = PS.Optic_Fold;
    var Optic_Core = PS.Optic_Core;
    var Optic_Extended = PS.Optic_Extended;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Profunctor_Choice = PS.Data_Profunctor_Choice;
    function fromNull(_){return null;};
    function fromBoolean(b){return b;};
    function fromNumber(n){return n;};
    function fromString(s){return s;};
    function fromArray(a){return a;};
    function fromObject(o){return o;};
    var jsonNull = null;;
    function _stringify(j){ return JSON.stringify(j); };
    function _foldJson(isNull, isBool, isNum, isStr, isArr, isObj, j) {   if (j == null) return isNull(null);                                else if (typeof j === 'boolean') return isBool(j);                 else if (typeof j === 'number') return isNum(j);                   else if (typeof j === 'string') return isStr(j);                   else if (Object.prototype.toString.call(j) === '[object Array]') return isArr(j);    else return isObj(j);                                           };
    var verbJsonType = function (def) {
        return function (f) {
            return function (fold) {
                return fold(def)(f);
            };
        };
    };
    
    /**
     *  Decoding
     */
    var toJsonType = verbJsonType(Data_Maybe.Nothing.value)(Data_Maybe.Just.create);
    var showJsonNull = new Prelude.Show(Prelude["const"]("null"));
    var showJson = new Prelude.Show(_stringify);
    var foldJsonObject = function (d) {
        return function (f) {
            return function (j) {
                return _foldJson(Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), f, j);
            };
        };
    };
    var toObject = toJsonType(foldJsonObject);
    
    /**
     *  Folds
     */
    var foldJson = function (a) {
        return function (b) {
            return function (c) {
                return function (d) {
                    return function (e) {
                        return function (f) {
                            return function (json) {
                                return _foldJson(a, b, c, d, e, f, json);
                            };
                        };
                    };
                };
            };
        };
    };
    return {
        toObject: toObject, 
        jsonNull: jsonNull, 
        fromString: fromString, 
        fromObject: fromObject, 
        fromNumber: fromNumber, 
        fromNull: fromNull, 
        fromBoolean: fromBoolean, 
        fromArray: fromArray, 
        foldJsonObject: foldJsonObject, 
        foldJson: foldJson, 
        showJson: showJson, 
        showJsonNull: showJsonNull
    };
})();
var PS = PS || {};
PS.Data_Argonaut_Parser = (function () {
    "use strict";
    var Data_Function = PS.Data_Function;
    var Prelude = PS.Prelude;
    var Data_Argonaut_Core = PS.Data_Argonaut_Core;
    var Data_Either = PS.Data_Either;
    function _jsonParser(fail, succ, s) {   try { return succ(JSON.parse(s)); } catch (e) { return fail(e.message); }};
    var jsonParser = function (j) {
        return _jsonParser(Data_Either.Left.create, Data_Either.Right.create, j);
    };
    return {
        jsonParser: jsonParser
    };
})();
var PS = PS || {};
PS.Data_Argonaut_JCursor = (function () {
    "use strict";
    var Data_Argonaut_Core = PS.Data_Argonaut_Core;
    var Prelude = PS.Prelude;
    var Data_StrMap = PS.Data_StrMap;
    var Data_Array = PS.Data_Array;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Argonaut_Encode = PS.Data_Argonaut_Encode;
    var Data_Argonaut_Decode = PS.Data_Argonaut_Decode;
    var Data_Argonaut_Combinators = PS.Data_Argonaut_Combinators;
    var Data_Monoid = PS.Data_Monoid;
    var Data_String = PS.Data_String;
    var Data_Either = PS.Data_Either;
    var jsonNull0 = null;;
    var JsonPrim = function (x) {
        return x;
    };
    var JCursorTop = (function () {
        function JCursorTop() {

        };
        JCursorTop.value = new JCursorTop();
        return JCursorTop;
    })();
    var JField = (function () {
        function JField(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        };
        JField.create = function (value0) {
            return function (value1) {
                return new JField(value0, value1);
            };
        };
        return JField;
    })();
    var JIndex = (function () {
        function JIndex(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        };
        JIndex.create = function (value0) {
            return function (value1) {
                return new JIndex(value0, value1);
            };
        };
        return JIndex;
    })();
    var showJCursor = new Prelude.Show(function (_1000) {
        if (_1000 instanceof JCursorTop) {
            return "";
        };
        if (_1000 instanceof JField) {
            return "." + (_1000.value0 + Prelude.show(showJCursor)(_1000.value1));
        };
        if (_1000 instanceof JIndex) {
            return "[" + (Prelude.show(Prelude.showNumber)(_1000.value0) + ("]" + Prelude.show(showJCursor)(_1000.value1)));
        };
        throw new Error("Failed pattern match");
    });
    var runJsonPrim = function (_988) {
        return _988;
    };
    var showJsonPrim = new Prelude.Show(function (p) {
        return runJsonPrim(p)(Prelude.show(Data_Argonaut_Core.showJsonNull))(Prelude.show(Prelude.showBoolean))(Prelude.show(Prelude.showNumber))(Prelude.show(Prelude.showString));
    });
    var primToJson = function (p) {
        return runJsonPrim(p)(Data_Argonaut_Core.fromNull)(Data_Argonaut_Core.fromBoolean)(Data_Argonaut_Core.fromNumber)(Data_Argonaut_Core.fromString);
    };
    var primStr = function (v) {
        return function (_987) {
            return function (_986) {
                return function (_985) {
                    return function (f) {
                        return f(v);
                    };
                };
            };
        };
    };
    var primNum = function (v) {
        return function (_984) {
            return function (_983) {
                return function (f) {
                    return function (_982) {
                        return f(v);
                    };
                };
            };
        };
    };
    var primNull = function (f) {
        return function (_978) {
            return function (_977) {
                return function (_976) {
                    return f(jsonNull0);
                };
            };
        };
    };
    var primBool = function (v) {
        return function (_981) {
            return function (f) {
                return function (_980) {
                    return function (_979) {
                        return f(v);
                    };
                };
            };
        };
    };
    var downIndex = function (i) {
        var downIndex$prime = function (_995) {
            if (_995 instanceof JCursorTop) {
                return new JIndex(i, JCursorTop.value);
            };
            if (_995 instanceof JField) {
                return new JField(_995.value0, downIndex$prime(_995.value1));
            };
            if (_995 instanceof JIndex) {
                return new JIndex(_995.value0, downIndex$prime(_995.value1));
            };
            throw new Error("Failed pattern match");
        };
        return downIndex$prime;
    };
    var downField = function (i) {
        var downField$prime = function (_994) {
            if (_994 instanceof JCursorTop) {
                return new JField(i, JCursorTop.value);
            };
            if (_994 instanceof JField) {
                return new JField(_994.value0, downField$prime(_994.value1));
            };
            if (_994 instanceof JIndex) {
                return new JIndex(_994.value0, downField$prime(_994.value1));
            };
            throw new Error("Failed pattern match");
        };
        return downField$prime;
    };
    return {
        JsonPrim: JsonPrim, 
        JCursorTop: JCursorTop, 
        JField: JField, 
        JIndex: JIndex, 
        runJsonPrim: runJsonPrim, 
        primToJson: primToJson, 
        primStr: primStr, 
        primNum: primNum, 
        primBool: primBool, 
        primNull: primNull, 
        downIndex: downIndex, 
        downField: downField, 
        showJCursor: showJCursor, 
        showJsonPrim: showJsonPrim
    };
})();
var PS = PS || {};
PS.Data_Argonaut = (function () {
    "use strict";
    var Data_Argonaut_Combinators = PS.Data_Argonaut_Combinators;
    var Data_Argonaut_JCursor = PS.Data_Argonaut_JCursor;
    var Data_Argonaut_Core = PS.Data_Argonaut_Core;
    var Data_Argonaut_Decode = PS.Data_Argonaut_Decode;
    var Data_Argonaut_Encode = PS.Data_Argonaut_Encode;
    var Data_Argonaut_Parser = PS.Data_Argonaut_Parser;
    var Data_Argonaut_Printer = PS.Data_Argonaut_Printer;
    var Prelude = PS.Prelude;
    var fromObject = Data_Argonaut_Core.fromObject;
    var fromNumber = Data_Argonaut_Core.fromNumber;
    var fromBoolean = Data_Argonaut_Core.fromBoolean;
    var fromArray = Data_Argonaut_Core.fromArray;
    return {
        fromObject: fromObject, 
        fromArray: fromArray, 
        fromNumber: fromNumber, 
        fromBoolean: fromBoolean
    };
})();
var PS = PS || {};
PS.Data_Json_JSemantic = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_String_Regex = PS.Data_String_Regex;
    var $$Math = PS.$$Math;
    var Data_Array = PS.Data_Array;
    var Data_Date = PS.Data_Date;
    var Data_String = PS.Data_String;
    var Control_Alt = PS.Control_Alt;
    var Data_Argonaut_JCursor = PS.Data_Argonaut_JCursor;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Foldable = PS.Data_Foldable;
    var Control_Apply = PS.Control_Apply;
    var Control_MonadPlus = PS.Control_MonadPlus;
    var _s2n = function (Just) { return function(Nothing) {
  return function (s) { 
    var n = s * 1; if (isNaN(n)) {return Nothing} else {return Just(n)} 
}}};
    var Integral = (function () {
        function Integral(value0) {
            this.value0 = value0;
        };
        Integral.create = function (value0) {
            return new Integral(value0);
        };
        return Integral;
    })();
    var Fractional = (function () {
        function Fractional(value0) {
            this.value0 = value0;
        };
        Fractional.create = function (value0) {
            return new Fractional(value0);
        };
        return Fractional;
    })();
    var $$Date = (function () {
        function Date(value0) {
            this.value0 = value0;
        };
        Date.create = function (value0) {
            return new Date(value0);
        };
        return Date;
    })();
    var DateTime = (function () {
        function DateTime(value0) {
            this.value0 = value0;
        };
        DateTime.create = function (value0) {
            return new DateTime(value0);
        };
        return DateTime;
    })();
    var Time = (function () {
        function Time(value0) {
            this.value0 = value0;
        };
        Time.create = function (value0) {
            return new Time(value0);
        };
        return Time;
    })();
    var Interval = (function () {
        function Interval(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        };
        Interval.create = function (value0) {
            return function (value1) {
                return new Interval(value0, value1);
            };
        };
        return Interval;
    })();
    var Text = (function () {
        function Text(value0) {
            this.value0 = value0;
        };
        Text.create = function (value0) {
            return new Text(value0);
        };
        return Text;
    })();
    var Bool = (function () {
        function Bool(value0) {
            this.value0 = value0;
        };
        Bool.create = function (value0) {
            return new Bool(value0);
        };
        return Bool;
    })();
    var Percent = (function () {
        function Percent(value0) {
            this.value0 = value0;
        };
        Percent.create = function (value0) {
            return new Percent(value0);
        };
        return Percent;
    })();
    var Currency = (function () {
        function Currency(value0) {
            this.value0 = value0;
        };
        Currency.create = function (value0) {
            return new Currency(value0);
        };
        return Currency;
    })();
    var NA = (function () {
        function NA() {

        };
        NA.value = new NA();
        return NA;
    })();
    var s2n = _s2n(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
    var rx = function (s) {
        return Data_String_Regex.regex(s)(Data_String_Regex.noFlags);
    };
    var rg = function (s) {
        return Data_String_Regex.regex(s)(Data_String_Regex.parseFlags("g"));
    };
    var parseX = function (regexp) {
        return function (parser) {
            return function (constr) {
                return function (s) {
                    return Prelude[">>="](Data_Maybe.bindMaybe)(Prelude[">>="](Data_Maybe.bindMaybe)(Prelude[">>="](Data_Maybe.bindMaybe)(Data_String_Regex.match(regexp)(s))(Data_Array.tail))(Data_Array.head))(function (s_1) {
                        return Prelude["<$>"](Data_Maybe.functorMaybe)(constr)(parser(s_1));
                    });
                };
            };
        };
    };
    var parsePercent = function (r) {
        return parseX(r)(s2n)(Percent.create);
    };
    var parseInterval = function (r) {
        return function (s) {
            var _1608 = Data_String.split(" - ")(s);
            if (_1608.length >= 2) {
                var _1611 = _1608.slice(2);
                if (_1611.length === 0 && (Data_String_Regex.test(r)(_1608[0]) && Data_String_Regex.test(r)(_1608[1]))) {
                    return Prelude["<*>"](Data_Maybe.applyMaybe)(Prelude["<$>"](Data_Maybe.functorMaybe)(Interval.create)(Data_Date.fromString(_1608[0])))(Data_Date.fromString(_1608[1]));
                };
            };
            return Data_Maybe.Nothing.value;
        };
    };
    var parseDateTime = function (r) {
        return parseX(r)(Data_Date.fromString)(DateTime.create);
    };
    var parseCurrency = function (r) {
        return parseX(r)(Prelude[">>>"](Prelude.semigroupoidArr)(Data_String_Regex.replace(rg(","))(""))(s2n))(Currency.create);
    };
    
    /**
     *  source: http://www.fileformat.info/info/unicode/category/Sc/list.htm
     */
    var currency_symbols = "[\\$\\u20A0-\\u20CF\\u00A2\\u00A3\\u00A4\\u00A5\\u058F\\u060B\\u09F2\\u09F3\\u09FB\\u0AF1\\u0BF9\\u0E3F\\u17DB\\uA838\\uFDFC\\uFE69\\uFF04\\uFFE0\\uFFE1\\uFFE5\\uFFE6]";
    var jSemanticOptsDefault = {
        regexps: {
            percent: rx("^(-?\\d+(\\.\\d+)?)\\%$"), 
            currency: rx("^" + (currency_symbols + "?(([0-9]{1,3},([0-9]{3},)*[0-9]{3}|[0-9]+)(.[0-9][0-9])?)$")), 
            date: rx("^((\\d{4})-(\\d{2})-(\\d{2})T(\\d{2})\\:(\\d{2})\\:(\\d{2})Z?[+-](\\d{2})\\:(\\d{2}))$")
        }
    };
    
    /**
     *  analyzeStr :: {regexps} -> String -> JSemantic
     */
    var analyzeStr = function (rs) {
        return function (s) {
            return Data_Maybe.fromMaybe(new Text(s))(Control_Alt["<|>"](Data_Maybe.altMaybe)(Control_Alt["<|>"](Data_Maybe.altMaybe)(Control_Alt["<|>"](Data_Maybe.altMaybe)(parsePercent(rs.percent)(s))(parseCurrency(rs.currency)(s)))(parseDateTime(rs.date)(s)))(parseInterval(rs.date)(s)));
        };
    };
    var analyzeNum = function (_1009) {
        if ($$Math.floor(_1009) === _1009) {
            return new Integral(_1009);
        };
        return new Fractional(_1009);
    };
    
    /**
     *  TODO: date, time
     */
    var toSemantic = function (o) {
        return function (p) {
            return Data_Argonaut_JCursor.runJsonPrim(p)(Prelude["const"](NA.value))(Bool.create)(analyzeNum)(analyzeStr(o.regexps));
        };
    };
    var toSemanticDef = toSemantic(jSemanticOptsDefault);
    return {
        Integral: Integral, 
        Fractional: Fractional, 
        "Date": $$Date, 
        DateTime: DateTime, 
        Time: Time, 
        Interval: Interval, 
        Text: Text, 
        Bool: Bool, 
        Percent: Percent, 
        Currency: Currency, 
        NA: NA, 
        jSemanticOptsDefault: jSemanticOptsDefault, 
        toSemanticDef: toSemanticDef, 
        toSemantic: toSemantic
    };
})();
var PS = PS || {};
PS.Text_Smolder_Markup = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Apply = PS.Control_Apply;
    var Data_Monoid = PS.Data_Monoid;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Array = PS.Data_Array;
    var Attr = (function () {
        function Attr(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        };
        Attr.create = function (value0) {
            return function (value1) {
                return new Attr(value0, value1);
            };
        };
        return Attr;
    })();
    var Attribute = (function () {
        function Attribute(value0) {
            this.value0 = value0;
        };
        Attribute.create = function (value0) {
            return new Attribute(value0);
        };
        return Attribute;
    })();
    var Element = (function () {
        function Element(value0, value1, value2, value3) {
            this.value0 = value0;
            this.value1 = value1;
            this.value2 = value2;
            this.value3 = value3;
        };
        Element.create = function (value0) {
            return function (value1) {
                return function (value2) {
                    return function (value3) {
                        return new Element(value0, value1, value2, value3);
                    };
                };
            };
        };
        return Element;
    })();
    var Content = (function () {
        function Content(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        };
        Content.create = function (value0) {
            return function (value1) {
                return new Content(value0, value1);
            };
        };
        return Content;
    })();
    var Return = (function () {
        function Return(value0) {
            this.value0 = value0;
        };
        Return.create = function (value0) {
            return new Return(value0);
        };
        return Return;
    })();
    var Attributable = function ($bang) {
        this["!"] = $bang;
    };
    var $bang = function (dict) {
        return dict["!"];
    };
    var text = function (s) {
        return new Content(s, new Return(Prelude.unit));
    };
    var parent = function (el) {
        return function (kids) {
            return new Element(el, new Data_Maybe.Just(kids), [  ], new Return(Prelude.unit));
        };
    };
    var leaf = function (el) {
        return new Element(el, Data_Maybe.Nothing.value, [  ], new Return(Prelude.unit));
    };
    var functorMarkupM = new Prelude.Functor(function (_1013) {
        return function (_1014) {
            if (_1014 instanceof Element) {
                return new Element(_1014.value0, _1014.value1, _1014.value2, Prelude["<$>"](functorMarkupM)(_1013)(_1014.value3));
            };
            if (_1014 instanceof Content) {
                return new Content(_1014.value0, Prelude["<$>"](functorMarkupM)(_1013)(_1014.value1));
            };
            if (_1014 instanceof Return) {
                return new Return(_1013(_1014.value0));
            };
            throw new Error("Failed pattern match");
        };
    });
    var attribute = function (key) {
        return function (value) {
            return new Attribute([ new Attr(key, value) ]);
        };
    };
    var attributableMarkupM = new Attributable(function (_1019) {
        return function (_1020) {
            if (_1019 instanceof Element) {
                return new Element(_1019.value0, _1019.value1, Prelude["<>"](Data_Array.semigroupArray)(_1019.value2)(_1020.value0), _1019.value3);
            };
            throw new Error("Failed pattern match");
        };
    });
    var attributableMarkupMF = new Attributable(function (k) {
        return function (xs) {
            return function (m) {
                return $bang(attributableMarkupM)(k(m))(xs);
            };
        };
    });
    var monadMarkupM = new Prelude.Monad(function () {
        return applicativeMarkupM;
    }, function () {
        return bindMarkupM;
    });
    var bindMarkupM = new Prelude.Bind(function (_1015) {
        return function (_1016) {
            if (_1015 instanceof Element) {
                return new Element(_1015.value0, _1015.value1, _1015.value2, Prelude[">>="](bindMarkupM)(_1015.value3)(_1016));
            };
            if (_1015 instanceof Content) {
                return new Content(_1015.value0, Prelude[">>="](bindMarkupM)(_1015.value1)(_1016));
            };
            if (_1015 instanceof Return) {
                return _1016(_1015.value0);
            };
            throw new Error("Failed pattern match");
        };
    }, function () {
        return applyMarkupM;
    });
    var applyMarkupM = new Prelude.Apply(Prelude.ap(monadMarkupM), function () {
        return functorMarkupM;
    });
    var applicativeMarkupM = new Prelude.Applicative(function () {
        return applyMarkupM;
    }, Return.create);
    var semigroupMarkupM = new Prelude.Semigroup(function (x) {
        return function (y) {
            return Control_Apply["*>"](applyMarkupM)(x)(y);
        };
    });
    var monoidMarkup = new Data_Monoid.Monoid(function () {
        return semigroupMarkupM;
    }, new Return(Prelude.unit));
    return {
        Attr: Attr, 
        Element: Element, 
        Content: Content, 
        Return: Return, 
        Attributable: Attributable, 
        "!": $bang, 
        attribute: attribute, 
        text: text, 
        leaf: leaf, 
        parent: parent, 
        semigroupMarkupM: semigroupMarkupM, 
        monoidMarkup: monoidMarkup, 
        functorMarkupM: functorMarkupM, 
        applyMarkupM: applyMarkupM, 
        applicativeMarkupM: applicativeMarkupM, 
        bindMarkupM: bindMarkupM, 
        monadMarkupM: monadMarkupM, 
        attributableMarkupM: attributableMarkupM, 
        attributableMarkupMF: attributableMarkupMF
    };
})();
var PS = PS || {};
PS.Text_Smolder_HTML = (function () {
    "use strict";
    var Text_Smolder_Markup = PS.Text_Smolder_Markup;
    var Prelude = PS.Prelude;
    var tr = Text_Smolder_Markup.parent("tr");
    var thead = Text_Smolder_Markup.parent("thead");
    var th = Text_Smolder_Markup.parent("th");
    var td = Text_Smolder_Markup.parent("td");
    var tbody = Text_Smolder_Markup.parent("tbody");
    var table = Text_Smolder_Markup.parent("table");
    var span = Text_Smolder_Markup.parent("span");
    var small = Text_Smolder_Markup.parent("small");
    var br = Text_Smolder_Markup.leaf("br");
    return {
        br: br, 
        tr: tr, 
        thead: thead, 
        th: th, 
        td: td, 
        tbody: tbody, 
        table: table, 
        span: span, 
        small: small
    };
})();
var PS = PS || {};
PS.Data_Json_JTable_Internal = (function () {
    "use strict";
    var Data_String = PS.Data_String;
    var Prelude = PS.Prelude;
    var Data_Argonaut_Core = PS.Data_Argonaut_Core;
    var Data_Argonaut_JCursor = PS.Data_Argonaut_JCursor;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Array = PS.Data_Array;
    var Data_Foldable = PS.Data_Foldable;
    var $$Math = PS.$$Math;
    var Control_MonadPlus = PS.Control_MonadPlus;
    var Data_StrMap = PS.Data_StrMap;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Traversable = PS.Data_Traversable;
    var Text_Smolder_Markup = PS.Text_Smolder_Markup;
    var Text_Smolder_HTML = PS.Text_Smolder_HTML;
    var Data_Either = PS.Data_Either;
    var Control_Alt = PS.Control_Alt;
    var Control_Apply = PS.Control_Apply;
    var Control_Bind = PS.Control_Bind;
    var Control_Monad = PS.Control_Monad;
    var Data_Argonaut_Parser = PS.Data_Argonaut_Parser;
    
    /**
     *  header data
     */
    var T = (function () {
        function T(value0, value1, value2, value3, value4) {
            this.value0 = value0;
            this.value1 = value1;
            this.value2 = value2;
            this.value3 = value3;
            this.value4 = value4;
        };
        T.create = function (value0) {
            return function (value1) {
                return function (value2) {
                    return function (value3) {
                        return function (value4) {
                            return new T(value0, value1, value2, value3, value4);
                        };
                    };
                };
            };
        };
        return T;
    })();
    
    /**
     *  cell data
     */
    var C = (function () {
        function C(value0, value1, value2, value3) {
            this.value0 = value0;
            this.value1 = value1;
            this.value2 = value2;
            this.value3 = value3;
        };
        C.create = function (value0) {
            return function (value1) {
                return function (value2) {
                    return function (value3) {
                        return new C(value0, value1, value2, value3);
                    };
                };
            };
        };
        return C;
    })();
    var zipWithIndex = function (xs) {
        return Data_Tuple.zip(xs)(Data_Array[".."](0)(Data_Array.length(xs) - 1));
    };
    
    /**
     *  maybe return the width of a tuple composed of primitive values
     */
    var widthOfPrimTuple = function (hS) {
        return function (path) {
            return function (ja) {
                return Prelude[">>="](Data_Maybe.bindMaybe)(Data_Array["!!"](path)(0))(function (_1030) {
                    return Prelude[">>="](Data_Maybe.bindMaybe)(Data_Array["!!"](ja)(1))(function (_1029) {
                        var types = Prelude["<#>"](Data_Array.functorArray)(ja)(Data_Argonaut_Core.foldJson(function (_1022) {
                            return 0;
                        })(function (_1023) {
                            return 1;
                        })(function (_1024) {
                            return 2;
                        })(function (_1025) {
                            return 3;
                        })(function (_1026) {
                            return 4;
                        })(function (_1027) {
                            return 4;
                        }));
                        var not_same = Data_Array.length(Data_Array.nub(Prelude.eqNumber)(types)) !== 1;
                        var homoTup = Data_Array.length(ja) <= $$Math.max(1)(hS);
                        var all_prim = Data_Foldable.all(Data_Foldable.foldableArray)(Prelude["/="](Prelude.eqNumber)(4))(types);
                        return Prelude["<#>"](Data_Maybe.functorMaybe)(Control_MonadPlus.guard(Data_Maybe.monadPlusMaybe)(all_prim && (not_same || homoTup)))(function (_1028) {
                            return Data_Array.length(ja);
                        });
                    });
                });
            };
        };
    };
    var tWidth = function (_1039) {
        return _1039.value2;
    };
    var tPath = function (_1038) {
        return _1038.value1;
    };
    
    /**
     *  add child to tree, unify if exists
     */
    var tMergeArray = function (_1046) {
        return function (_1047) {
            var i = Data_Array.findIndex(function (n) {
                return Prelude["=="](Data_Maybe.eqMaybe(Prelude.eqString))(Data_Array.last(_1047.value1))(Data_Array.last(tPath(n)));
            })(_1046.value4);
            var _1661 = Data_Array["!!"](_1046.value4)(i);
            if (_1661 instanceof Data_Maybe.Just) {
                var _1662 = Data_Foldable.foldl(Data_Foldable.foldableArray)(tMergeArray)(_1661.value0)(_1047.value4);
                var h$prime = $$Math.max(_1046.value3)(_1662.value3 + 1);
                var cw$prime$prime = $$Math.max(_1662.value2)(_1047.value2);
                var k$prime = Data_Array.updateAt(i)(new T(_1661.value0.value0, _1661.value0.value1, cw$prime$prime, _1662.value3, _1662.value4))(_1046.value4);
                var w$prime = (_1046.value2 - _1661.value0.value2) + cw$prime$prime;
                return new T(_1046.value0, _1046.value1, w$prime, h$prime, k$prime);
            };
            if (_1661 instanceof Data_Maybe.Nothing) {
                var w$prime = (function () {
                    var _1674 = Data_Array["null"](_1046.value4);
                    if (_1674) {
                        return _1047.value2;
                    };
                    if (!_1674) {
                        return _1046.value2 + _1047.value2;
                    };
                    throw new Error("Failed pattern match");
                })();
                var k$prime = Data_Array.snoc(_1046.value4)(_1047);
                var h$prime = $$Math.max(_1046.value3)(_1047.value3 + 1);
                return new T(_1046.value0, _1046.value1, w$prime, h$prime, k$prime);
            };
            throw new Error("Failed pattern match");
        };
    };
    var tKids = function (_1041) {
        return _1041.value4;
    };
    
    /**
     *  produce header rows from header tree
     */
    var tsToRows = function (ts) {
        var _1691 = Data_Array["null"](ts);
        if (_1691) {
            return [  ];
        };
        if (!_1691) {
            return Prelude[":"](ts)(tsToRows(Prelude[">>="](Data_Array.bindArray)(ts)(tKids)));
        };
        throw new Error("Failed pattern match");
    };
    var tHeight = function (_1040) {
        return _1040.value3;
    };
    var strcmp = function (s1) {
        return function (s2) {
            return Prelude.compare(Prelude.ordNumber)(Data_String.localeCompare(s1)(s2))(0);
        };
    };
    
    /**
     *  sort header tree by ColumnOrdering
     */
    var sortTree = function (_1058) {
        return function (_1059) {
            return T.create(_1059.value0)(_1059.value1)(_1059.value2)(_1059.value3)(Data_Array.sortBy(function (_1036) {
                return function (_1035) {
                    return _1058(_1036.value0)(_1036.value1)(_1035.value0)(_1035.value1);
                };
            })(Prelude["<#>"](Data_Array.functorArray)(_1059.value4)(sortTree(_1058))));
        };
    };
    
    /**
     *  render a grid from an array of arrays
     */
    var renderRows = function (tr$prime) {
        return function (cellf) {
            return function (rows) {
                return Data_Foldable.mconcat(Data_Foldable.foldableArray)(Text_Smolder_Markup.monoidMarkup)(Prelude[">>="](Data_Array.bindArray)(zipWithIndex(rows))(function (_44) {
                    return Prelude["return"](Data_Array.monadArray)(tr$prime(Data_Foldable.mconcat(Data_Foldable.foldableArray)(Text_Smolder_Markup.monoidMarkup)(Prelude[">>="](Data_Array.bindArray)(zipWithIndex(_44.value0))(function (_43) {
                        return Prelude["return"](Data_Array.monadArray)(cellf(_44.value1)(_43.value1)(_43.value0));
                    }))));
                }));
            };
        };
    };
    
    /**
     *  pad tall header cells from above
     */
    var padTree = function (_1060) {
        return function (_1061) {
            var _1725 = !Data_Array["null"](_1061.value4);
            if (_1725) {
                return new T(_1061.value0, _1061.value1, _1061.value2, _1061.value3, Prelude["<#>"](Data_Array.functorArray)(_1061.value4)(padTree(_1060 - 1)));
            };
            if (!_1725) {
                var _1726 = _1060 > 0;
                if (_1726) {
                    return new T("", _1061.value1, _1061.value2, 1, [ padTree(_1060 - 1)(_1061) ]);
                };
                if (!_1726) {
                    return new T(_1061.value0, _1061.value1, _1061.value2, 1, _1061.value4);
                };
                throw new Error("Failed pattern match");
            };
            throw new Error("Failed pattern match");
        };
    };
    var orelse = function (f) {
        return function (g) {
            return function (x) {
                var _1732 = f(x);
                if (_1732 instanceof Data_Maybe.Just) {
                    return _1732.value0;
                };
                return g(x);
            };
        };
    };
    var foldJsonP = function (f) {
        return Data_Argonaut_Core.foldJson(function (_1021) {
            return f(Data_Argonaut_JCursor.primNull);
        })(Prelude["<<<"](Prelude.semigroupoidArr)(f)(Data_Argonaut_JCursor.primBool))(Prelude["<<<"](Prelude.semigroupoidArr)(f)(Data_Argonaut_JCursor.primNum))(Prelude["<<<"](Prelude.semigroupoidArr)(f)(Data_Argonaut_JCursor.primStr));
    };
    
    /**
     *  produce a tree of header data from json
     */
    var tFromJson = function (hS) {
        return function (label) {
            return function (path) {
                var tuple = function (ja) {
                    return Prelude["<#>"](Data_Maybe.functorMaybe)(widthOfPrimTuple(hS)(path)(ja))(function (n) {
                        return new T(label, path, n, 0, [  ]);
                    });
                };
                var prim = function (jp) {
                    return new T(label, path, 1, 0, [  ]);
                };
                var obj = function (jo) {
                    var _1735 = Data_StrMap.isEmpty(jo);
                    if (_1735) {
                        return new T(label, path, 1, 0, [  ]);
                    };
                    if (!_1735) {
                        var k = Prelude["<#>"](Data_Array.functorArray)(Data_StrMap.toList(jo))(Data_Tuple.uncurry(function (l) {
                            return function (j) {
                                return tFromJson(hS)(l)(Data_Array.snoc(path)(l))(j);
                            };
                        }));
                        var w = Data_Foldable.foldl(Data_Foldable.foldableArray)(Prelude["+"](Prelude.semiringNumber))(0)(Prelude["<#>"](Data_Array.functorArray)(k)(tWidth));
                        var h = 1 + Data_Foldable.foldl(Data_Foldable.foldableArray)($$Math.max)(0)(Prelude["<#>"](Data_Array.functorArray)(k)(tHeight));
                        return new T(label, path, w, h, k);
                    };
                    throw new Error("Failed pattern match");
                };
                var array = function (ja) {
                    var ts = Prelude["<#>"](Data_Array.functorArray)(ja)(tFromJson(hS)(label)(path));
                    var tsw = (function () {
                        var _1736 = Data_Array.nub(Prelude.eqNumber)(Prelude["<#>"](Data_Array.functorArray)(ts)(tWidth));
                        if (_1736.length >= 1) {
                            var _1738 = _1736.slice(1);
                            if (_1738.length === 0) {
                                return _1736[0];
                            };
                        };
                        return 1;
                    })();
                    var ks = Prelude[">>="](Data_Array.bindArray)(ts)(tKids);
                    var t = Data_Foldable.foldl(Data_Foldable.foldableArray)(tMergeArray)(new T(label, path, 0, 0, [  ]))(ks);
                    var w = $$Math.max(tsw)(tWidth(t));
                    return new T(label, path, w, tHeight(t), tKids(t));
                };
                return foldJsonP(prim)(orelse(tuple)(array))(obj);
            };
        };
    };
    var toPrim = foldJsonP(Data_Maybe.Just.create)(Prelude["const"](Data_Maybe.Nothing.value))(Prelude["const"](Data_Maybe.Nothing.value));
    
    /**
     *  merge table segments for each key of an object into one
     */
    var cMergeObj = function (rss) {
        var maxh = Data_Foldable.foldl(Data_Foldable.foldableArray)($$Math.max)(0)(Prelude["<#>"](Data_Array.functorArray)(Prelude["<#>"](Data_Array.functorArray)(rss)(Data_Tuple.snd))(Data_Array.length));
        return Prelude["<#>"](Data_Array.functorArray)(Data_Array[".."](0)(maxh - 1))(function (n) {
            return Prelude[">>="](Data_Array.bindArray)(rss)(Data_Tuple.uncurry(function (w) {
                return function (rs) {
                    var rnOr = function (_0) {
                        return Data_Maybe.fromMaybe(_0)(Data_Array["!!"](rs)(n));
                    };
                    if (rs.length >= 1) {
                        var _1747 = rs.slice(1);
                        if (_1747.length === 0) {
                            var _1740 = n === 0;
                            if (_1740) {
                                return Prelude["<#>"](Data_Array.functorArray)(rs[0])(function (_1031) {
                                    return new C(_1031.value0, _1031.value1, maxh, _1031.value3);
                                });
                            };
                            if (!_1740) {
                                return rnOr([  ]);
                            };
                            throw new Error("Failed pattern match");
                        };
                    };
                    return rnOr([ new C(Data_Argonaut_JCursor.JCursorTop.value, w, 1, Data_Argonaut_JCursor.primNull) ]);
                };
            }));
        });
    };
    var mergeObjTuple = function (_1048) {
        return function (_1049) {
            return function (_1050) {
                return function (_1051) {
                    return Prelude[">>="](Data_Maybe.bindMaybe)(Control_MonadPlus.guard(Data_Maybe.monadPlusMaybe)(!Data_Array["null"](_1051)))(function () {
                        return Prelude[">>="](Data_Maybe.bindMaybe)(Data_Traversable["for"](Data_Maybe.applicativeMaybe)(Data_Traversable.traversableArray)(_1051)(Data_Argonaut_Core.toObject))(function (_42) {
                            var keyss = Prelude["<#>"](Data_Array.functorArray)(_42)(Data_StrMap.keys);
                            var all_keys = Data_Array.concat(keyss);
                            return Prelude[">>="](Data_Maybe.bindMaybe)(Control_MonadPlus.guard(Data_Maybe.monadPlusMaybe)(Data_Array.length(all_keys) === Data_Array.length(Data_Array.nub(Prelude.eqString)(all_keys))))(function () {
                                return Data_Maybe.Just.create(cMergeObj(Prelude["<#>"](Data_Array.functorArray)(_1049.value4)(function (_1032) {
                                    var i = Data_Array.findIndex(Data_Foldable.elem(Prelude.eqString)(Data_Foldable.foldableArray)(_1032.value0))(keyss);
                                    var j = Data_Maybe.fromMaybe(Data_Argonaut_JCursor.primToJson(Data_Argonaut_JCursor.primNull))(Prelude[">>="](Data_Maybe.bindMaybe)(Data_Array["!!"](_42)(i))(Data_StrMap.lookup(_1032.value0)));
                                    return new Data_Tuple.Tuple(_1032.value2, cFromJson(_1048)(_1032)(Data_Argonaut_JCursor.downField(_1032.value0)(Data_Argonaut_JCursor.downIndex(i)(_1050)))(j));
                                })));
                            });
                        });
                    });
                };
            };
        };
    };
    var cFromJson = function (_1052) {
        return function (_1053) {
            return function (_1054) {
                var width = (function () {
                    var _1767 = _1053.value3 <= 0 && _1053.value2 > 1;
                    if (_1767) {
                        return widthOfPrimTuple(_1052)(_1053.value1);
                    };
                    if (!_1767) {
                        return Prelude["const"](Data_Maybe.Nothing.value);
                    };
                    throw new Error("Failed pattern match");
                })();
                var primtup = function (ja) {
                    return Prelude["<#>"](Data_Maybe.functorMaybe)(width(ja))(function (_1033) {
                        return Data_Array.singleton(Prelude["<#>"](Data_Array.functorArray)(Data_Array[".."](0)(_1053.value2 - 1))(function (i) {
                            return C.create(Data_Argonaut_JCursor.downIndex(i)(_1054))(1)(1)(Data_Maybe.fromMaybe(Data_Argonaut_JCursor.primNull)(Prelude[">>="](Data_Maybe.bindMaybe)(Data_Array["!!"](ja)(i))(toPrim)));
                        }));
                    });
                };
                var prim = function (jp) {
                    return [ [ new C(_1054, _1053.value2, 1, jp) ] ];
                };
                var objtup = mergeObjTuple(_1052)(_1053)(_1054);
                var tuple = function (ja) {
                    var _1769 = primtup(ja);
                    if (_1769 instanceof Data_Maybe.Nothing) {
                        return objtup(ja);
                    };
                    return _1769;
                };
                var obj = function (jo) {
                    var _1770 = Data_StrMap.isEmpty(jo);
                    if (_1770) {
                        return [ [ new C(_1054, _1053.value2, 1, Data_Argonaut_JCursor.primNull) ] ];
                    };
                    if (!_1770) {
                        return cMergeObj(Prelude["<#>"](Data_Array.functorArray)(_1053.value4)(function (_1034) {
                            var j = Data_Maybe.fromMaybe(Data_Argonaut_JCursor.primToJson(Data_Argonaut_JCursor.primNull))(Data_StrMap.lookup(_1034.value0)(jo));
                            return new Data_Tuple.Tuple(_1034.value2, cFromJson(_1052)(_1034)(Data_Argonaut_JCursor.downField(_1034.value0)(_1054))(j));
                        }));
                    };
                    throw new Error("Failed pattern match");
                };
                var array = function (ja) {
                    return Prelude[">>="](Data_Array.bindArray)(zipWithIndex(ja))(Data_Tuple.uncurry(function (j) {
                        return function (i) {
                            return cFromJson(_1052)(_1053)(Data_Argonaut_JCursor.downIndex(i)(_1054))(j);
                        };
                    }));
                };
                return foldJsonP(prim)(orelse(tuple)(array))(obj);
            };
        };
    };
    var _nattr = function (attr) {
        return function (n) {
            return function (m) {
                var _1782 = n > 1;
                if (_1782) {
                    return Text_Smolder_Markup["!"](Text_Smolder_Markup.attributableMarkupM)(m)(Text_Smolder_Markup.attribute(attr)(Prelude.show(Prelude.showNumber)(n)));
                };
                if (!_1782) {
                    return m;
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var _rspan = _nattr("rowspan");
    var _cspan = _nattr("colspan");
    var renderTbody = function (tr$prime) {
        return function (tdf) {
            return function (t) {
                return function (table) {
                    var tdf$prime = function (_1067) {
                        return function (_1068) {
                            return function (_1069) {
                                return Prelude[">>>"](Prelude.semigroupoidArr)(_cspan(_1069.value1))(_rspan(_1069.value2))(tdf(_1069));
                            };
                        };
                    };
                    return renderRows(tr$prime)(tdf$prime)(table);
                };
            };
        };
    };
    var renderThead = function (_1055) {
        return function (_1056) {
            return function (_1057) {
                var rs = function (i) {
                    return function (k_1) {
                        var _1793 = Data_Array["null"](k_1);
                        if (_1793) {
                            return _1057.value3 - i;
                        };
                        if (!_1793) {
                            return 1;
                        };
                        throw new Error("Failed pattern match");
                    };
                };
                var tdf$prime = function (_1064) {
                    return function (_1065) {
                        return function (_1066) {
                            return Prelude[">>>"](Prelude.semigroupoidArr)(_cspan(_1066.value2))(_rspan(rs(_1064)(_1066.value4)))(_1056(_1066));
                        };
                    };
                };
                return renderRows(_1055)(tdf$prime)(tsToRows(_1057.value4));
            };
        };
    };
    
    /**
     *  renderJTableRaw :: {...} -> Json -> Markup
     */
    var renderJTableRaw = function (o) {
        return function (json) {
            var rawT = tFromJson(o.maxHomoTupSize)("")([  ])(json);
            var sortedT = sortTree(o.columnOrdering)(rawT);
            var table = cFromJson(o.maxHomoTupSize)(sortedT)(Data_Argonaut_JCursor.JCursorTop.value)(json);
            var paddedT = (function () {
                if (o.insertHeaderCells) {
                    return padTree(tHeight(sortedT));
                };
                if (!o.insertHeaderCells) {
                    return Prelude.id(Prelude.categoryArr);
                };
                throw new Error("Failed pattern match");
            })()(sortedT);
            return o.style.table(Prelude[">>="](Text_Smolder_Markup.bindMarkupM)(Text_Smolder_HTML.thead(renderThead(o.style.tr)(o.style.th)(paddedT)))(function () {
                return Text_Smolder_HTML.tbody(renderTbody(o.style.tr)(o.style.td)(sortedT)(table));
            }));
        };
    };
    return {
        C: C, 
        T: T, 
        _rspan: _rspan, 
        _cspan: _cspan, 
        _nattr: _nattr, 
        strcmp: strcmp, 
        orelse: orelse, 
        zipWithIndex: zipWithIndex, 
        toPrim: toPrim, 
        foldJsonP: foldJsonP, 
        mergeObjTuple: mergeObjTuple, 
        cMergeObj: cMergeObj, 
        cFromJson: cFromJson, 
        padTree: padTree, 
        widthOfPrimTuple: widthOfPrimTuple, 
        tMergeArray: tMergeArray, 
        tFromJson: tFromJson, 
        tKids: tKids, 
        tHeight: tHeight, 
        tWidth: tWidth, 
        tPath: tPath, 
        sortTree: sortTree, 
        tsToRows: tsToRows, 
        renderTbody: renderTbody, 
        renderThead: renderThead, 
        renderRows: renderRows, 
        renderJTableRaw: renderJTableRaw
    };
})();
var PS = PS || {};
PS.Text_Smolder_HTML_Attributes = (function () {
    "use strict";
    var Text_Smolder_Markup = PS.Text_Smolder_Markup;
    var Prelude = PS.Prelude;
    var style = Text_Smolder_Markup.attribute("style");
    var className = Text_Smolder_Markup.attribute("class");
    return {
        style: style, 
        className: className
    };
})();
var PS = PS || {};
PS.Data_Json_JTable = (function () {
    "use strict";
    var Data_Argonaut_JCursor = PS.Data_Argonaut_JCursor;
    var Prelude = PS.Prelude;
    var Text_Smolder_HTML = PS.Text_Smolder_HTML;
    var Text_Smolder_Markup = PS.Text_Smolder_Markup;
    var Data_String = PS.Data_String;
    var Data_Foldable = PS.Data_Foldable;
    var Text_Smolder_HTML_Attributes = PS.Text_Smolder_HTML_Attributes;
    var Data_Json_JTable_Internal = PS.Data_Json_JTable_Internal;
    var Data_Argonaut_Core = PS.Data_Argonaut_Core;
    var renderJsonSimple = function (j) {
        return Data_Argonaut_JCursor.runJsonPrim(j)(Prelude["const"]("&nbsp;"))(Prelude.show(Prelude.showBoolean))(Prelude.show(Prelude.showNumber))(Prelude.id(Prelude.categoryArr));
    };
    var renderJTable = function (o) {
        return Data_Json_JTable_Internal.renderJTableRaw((function () {
            var _1821 = {};
            for (var _1822 in o) {
                if (o.hasOwnProperty(_1822)) {
                    _1821[_1822] = o[_1822];
                };
            };
            _1821.style = (function () {
                var _1819 = {};
                for (var _1820 in o.style) {
                    if (o.style.hasOwnProperty(_1820)) {
                        _1819[_1820] = o.style[_1820];
                    };
                };
                _1819.th = function (_1070) {
                    return o.style.th(_1070.value0)(_1070.value1);
                };
                _1819.td = function (_1071) {
                    return o.style.td(_1071.value0)(_1071.value3);
                };
                return _1819;
            })();
            return _1821;
        })());
    };
    var noStyle = {
        table: Text_Smolder_HTML.table, 
        tr: Text_Smolder_HTML.tr, 
        th: function (l) {
            return function (p) {
                return Text_Smolder_HTML.th(Text_Smolder_Markup.text(l));
            };
        }, 
        td: function (c) {
            return function (j) {
                return Text_Smolder_HTML.td(Text_Smolder_Markup.text(renderJsonSimple(j)));
            };
        }
    };
    var inOrdering = function (l1) {
        return function (p1) {
            return function (l2) {
                return function (p2) {
                    return Prelude.EQ.value;
                };
            };
        };
    };
    var jTableOptsDefault = {
        style: noStyle, 
        columnOrdering: inOrdering, 
        insertHeaderCells: false, 
        maxHomoTupSize: 3
    };
    var renderJTableDef = renderJTable(jTableOptsDefault);
    var debugStyle = (function () {
        var _1823 = {};
        for (var _1824 in noStyle) {
            if (noStyle.hasOwnProperty(_1824)) {
                _1823[_1824] = noStyle[_1824];
            };
        };
        _1823.th = function (l) {
            return function (p) {
                return Text_Smolder_HTML.th(Text_Smolder_Markup.text(Data_String.joinWith(".")(p)));
            };
        };
        _1823.td = function (c) {
            return function (j) {
                return Text_Smolder_HTML.td(Data_Foldable.mconcat(Data_Foldable.foldableArray)(Text_Smolder_Markup.monoidMarkup)([ Text_Smolder_Markup["!"](Text_Smolder_Markup.attributableMarkupMF)(Text_Smolder_HTML.small)(Text_Smolder_HTML_Attributes.className("grey"))(Text_Smolder_Markup.text(Prelude.show(Data_Argonaut_JCursor.showJCursor)(c))), Text_Smolder_HTML.br, Text_Smolder_Markup.text(Prelude.show(Data_Argonaut_JCursor.showJsonPrim)(j)) ]));
            };
        };
        return _1823;
    })();
    var bootstrapStyle = (function () {
        var _1825 = {};
        for (var _1826 in noStyle) {
            if (noStyle.hasOwnProperty(_1826)) {
                _1825[_1826] = noStyle[_1826];
            };
        };
        _1825.table = function (m) {
            return Text_Smolder_Markup["!"](Text_Smolder_Markup.attributableMarkupMF)(Text_Smolder_HTML.table)(Text_Smolder_Markup.attribute("class")("table"))(m);
        };
        return _1825;
    })();
    var alphaOrdering = function (l1) {
        return function (p1) {
            return function (l2) {
                return function (p2) {
                    return Data_Json_JTable_Internal.strcmp(l1)(l2);
                };
            };
        };
    };
    return {
        debugStyle: debugStyle, 
        bootstrapStyle: bootstrapStyle, 
        noStyle: noStyle, 
        alphaOrdering: alphaOrdering, 
        inOrdering: inOrdering, 
        jTableOptsDefault: jTableOptsDefault, 
        renderJTableDef: renderJTableDef, 
        renderJTable: renderJTable
    };
})();
var PS = PS || {};
PS.Text_Smolder_Renderer_Util = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Map = PS.Data_Map;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Tuple = PS.Data_Tuple;
    var Text_Smolder_Markup = PS.Text_Smolder_Markup;
    var Data_Array = PS.Data_Array;
    var Element = (function () {
        function Element(value0, value1, value2) {
            this.value0 = value0;
            this.value1 = value1;
            this.value2 = value2;
        };
        Element.create = function (value0) {
            return function (value1) {
                return function (value2) {
                    return new Element(value0, value1, value2);
                };
            };
        };
        return Element;
    })();
    var Text = (function () {
        function Text(value0) {
            this.value0 = value0;
        };
        Text.create = function (value0) {
            return new Text(value0);
        };
        return Text;
    })();
    var renderAttrs = function (xs) {
        var toTuple = function (_1073) {
            return new Data_Tuple.Tuple(_1073.value0, _1073.value1);
        };
        return Data_Map.fromList(Prelude.ordString)(Prelude["<$>"](Data_Array.functorArray)(toTuple)(xs));
    };
    var renderMarkup = function (_1072) {
        if (_1072 instanceof Text_Smolder_Markup.Element && _1072.value1 instanceof Data_Maybe.Just) {
            return Prelude[":"](new Element(_1072.value0, renderAttrs(_1072.value2), renderMarkup(_1072.value1.value0)))(renderMarkup(_1072.value3));
        };
        if (_1072 instanceof Text_Smolder_Markup.Element && _1072.value1 instanceof Data_Maybe.Nothing) {
            return Prelude[":"](new Element(_1072.value0, renderAttrs(_1072.value2), [  ]))(renderMarkup(_1072.value3));
        };
        if (_1072 instanceof Text_Smolder_Markup.Content) {
            return Prelude[":"](new Text(_1072.value0))(renderMarkup(_1072.value1));
        };
        if (_1072 instanceof Text_Smolder_Markup.Return) {
            return [  ];
        };
        throw new Error("Failed pattern match");
    };
    return {
        Element: Element, 
        Text: Text, 
        renderMarkup: renderMarkup
    };
})();
var PS = PS || {};
PS.Text_Smolder_Renderer_String = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_String = PS.Data_String;
    var Data_Map = PS.Data_Map;
    var Text_Smolder_Renderer_Util = PS.Text_Smolder_Renderer_Util;
    var Text_Smolder_Markup = PS.Text_Smolder_Markup;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Array = PS.Data_Array;
    var renderNode = function (_1074) {
        if (_1074 instanceof Text_Smolder_Renderer_Util.Element) {
            var showTail = function (_1075) {
                if (_1075.length === 0) {
                    return "/>";
                };
                return ">" + (Data_String.joinWith("")(Prelude["<$>"](Data_Array.functorArray)(Prelude.show(showNode))(_1075)) + ("</" + (_1074.value0 + ">")));
            };
            var showAttrs = function (a_1) {
                var pair = function (k) {
                    return " " + (k + (function () {
                        var _1845 = Data_Map.lookup(Prelude.ordString)(k)(a_1);
                        if (_1845 instanceof Data_Maybe.Just) {
                            return "=\"" + (_1845.value0 + "\"");
                        };
                        if (_1845 instanceof Data_Maybe.Nothing) {
                            return "";
                        };
                        throw new Error("Failed pattern match");
                    })());
                };
                return Data_String.joinWith("")(Prelude["<$>"](Data_Array.functorArray)(pair)(Data_Map.keys(a_1)));
            };
            return "<" + (_1074.value0 + (showAttrs(_1074.value1) + showTail(_1074.value2)));
        };
        if (_1074 instanceof Text_Smolder_Renderer_Util.Text) {
            return _1074.value0;
        };
        throw new Error("Failed pattern match");
    };
    var showNode = new Prelude.Show(renderNode);
    var render = function (m) {
        return Data_String.joinWith("")(Prelude["<$>"](Data_Array.functorArray)(renderNode)(Text_Smolder_Renderer_Util.renderMarkup(m)));
    };
    return {
        renderNode: renderNode, 
        render: render, 
        showNode: showNode
    };
})();
var PS = PS || {};
PS.Test_StrongCheck_Gen = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Arrow = PS.Control_Arrow;
    var Data_Machine_Mealy = PS.Data_Machine_Mealy;
    var Data_Maybe_Unsafe = PS.Data_Maybe_Unsafe;
    var Control_Monad_Trampoline = PS.Control_Monad_Trampoline;
    var Data_Profunctor = PS.Data_Profunctor;
    var Data_Char = PS.Data_Char;
    var $$Math = PS.$$Math;
    var Data_Array = PS.Data_Array;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Monoid_Sum = PS.Data_Monoid_Sum;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Monoid = PS.Data_Monoid;
    var Debug_Trace = PS.Debug_Trace;
    var Control_Monad_ListT = PS.Control_Monad_ListT;
    var Data_Lazy = PS.Data_Lazy;
    var Control_Alt = PS.Control_Alt;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Control_Monad_Eff_Random = PS.Control_Monad_Eff_Random;
    var Data_Traversable = PS.Data_Traversable;
    var Control_Monad_Free = PS.Control_Monad_Free;
    var Control_Monad = PS.Control_Monad;
    var Control_Bind = PS.Control_Bind;
    var Control_Plus = PS.Control_Plus;
    var Control_Alternative = PS.Control_Alternative;
    var Control_MonadPlus = PS.Control_MonadPlus;
    var GenState = (function () {
        function GenState(value0) {
            this.value0 = value0;
        };
        GenState.create = function (value0) {
            return new GenState(value0);
        };
        return GenState;
    })();
    var GenOut = (function () {
        function GenOut(value0) {
            this.value0 = value0;
        };
        GenOut.create = function (value0) {
            return new GenOut(value0);
        };
        return GenOut;
    })();
    var GenT = (function () {
        function GenT(value0) {
            this.value0 = value0;
        };
        GenT.create = function (value0) {
            return new GenT(value0);
        };
        return GenT;
    })();
    var unGenState = function (_1078) {
        return _1078.value0;
    };
    var unGenOut = function (_1079) {
        return _1079.value0;
    };
    var unGen = function (_1080) {
        return _1080.value0;
    };
    
    /**
     *  | Transforms one gen into another, passing along user-supplied state.
     *  | Either the generator being transformed or the transforming function may
     *  | halt the transformation.
     */
    var transGen = function (__dict_Monad_940) {
        return function (_1095) {
            return function (_1096) {
                return function (_1097) {
                    var loop = function (m_1) {
                        return function (b_1) {
                            var g = function (_1112) {
                                if (_1112 instanceof Data_Machine_Mealy.Halt) {
                                    return Prelude.pure(__dict_Monad_940["__superclass_Prelude.Applicative_0"]())(Data_Machine_Mealy.Halt.value);
                                };
                                if (_1112 instanceof Data_Machine_Mealy.Emit) {
                                    var _1861 = _1095(b_1)(_1112.value0.value0.value);
                                    if (_1861.value1 instanceof Data_Maybe.Nothing) {
                                        return Data_Machine_Mealy.stepMealy(__dict_Monad_940)(_1112.value0.value0.state)(loop(_1112.value1)(_1861.value0));
                                    };
                                    if (_1861.value1 instanceof Data_Maybe.Just) {
                                        var c$prime = new GenOut({
                                            value: _1861.value1.value0, 
                                            state: _1112.value0.value0.state
                                        });
                                        return Prelude.pure(__dict_Monad_940["__superclass_Prelude.Applicative_0"]())(new Data_Machine_Mealy.Emit(c$prime, loop(_1112.value1)(_1861.value0)));
                                    };
                                    throw new Error("Failed pattern match");
                                };
                                throw new Error("Failed pattern match");
                            };
                            return Data_Machine_Mealy.mealy(__dict_Monad_940["__superclass_Prelude.Applicative_0"]())(function (st) {
                                return Prelude[">>="](__dict_Monad_940["__superclass_Prelude.Bind_1"]())(Data_Machine_Mealy.stepMealy(__dict_Monad_940)(st)(m_1))(g);
                            });
                        };
                    };
                    return GenT.create(loop(_1097.value0)(_1096));
                };
            };
        };
    };
    
    /**
     *  | Creates a generator that depends on access to the generator state.
     */
    var stateful = function (__dict_Monad_942) {
        return function (f) {
            return GenT.create(Prelude[">>="](Data_Machine_Mealy.bindMealy(__dict_Monad_942))(Data_Machine_Mealy.take(__dict_Monad_942)(1)(Prelude.id(Data_Machine_Mealy.categoryMealy(__dict_Monad_942))))(function (_45) {
                return unGen(f(_45));
            }));
        };
    };
    var stateM = function (f) {
        return Prelude["<<<"](Prelude.semigroupoidArr)(GenState.create)(Prelude["<<<"](Prelude.semigroupoidArr)(f)(unGenState));
    };
    
    /**
     *  | Creates a generator that depends on the size parameter.
     */
    var sized = function (__dict_Monad_944) {
        return function (f) {
            return stateful(__dict_Monad_944)(function (s) {
                return f((unGenState(s)).size);
            });
        };
    };
    var semigroupGenT = function (__dict_Monad_945) {
        return new Prelude.Semigroup(function (_1129) {
            return function (_1130) {
                return new GenT(Prelude["<>"](Data_Machine_Mealy.semigroupMealy(__dict_Monad_945))(_1129.value0)(_1130.value0));
            };
        });
    };
    
    /**
     *  | Resizes the generator so the size parameter passed into the generator 
     *  | will be equal to the specified size.
     */
    var resize = function (__dict_Monad_947) {
        return function (sz) {
            return function (g) {
                return GenT.create(Data_Profunctor.lmap(Data_Machine_Mealy.profunctorMealy(__dict_Monad_947))(stateM(function (s) {
                    var _1878 = {};
                    for (var _1879 in s) {
                        if (s.hasOwnProperty(_1879)) {
                            _1878[_1879] = s[_1879];
                        };
                    };
                    _1878.size = sz;
                    return _1878;
                }))(unGen(g)));
            };
        };
    };
    var lcgN = 1 << 30;
    var lcgM = 1103515245;
    var lcgC = 12345;
    var lcgNext = function (n) {
        return (lcgM * n + lcgC) % lcgN;
    };
    var updateSeedState = function (_1085) {
        return new GenState({
            seed: lcgNext(_1085.value0.seed), 
            size: _1085.value0.size
        });
    };
    var lcgStep = function (__dict_Monad_958) {
        return GenT.create(Control_Arrow.arr(Data_Machine_Mealy.arrowMealy(__dict_Monad_958))(function (s) {
            return new GenOut({
                state: updateSeedState(s), 
                value: (unGenState(s)).seed
            });
        }));
    };
    var updateSeedGen = function (__dict_Monad_960) {
        return function (_1086) {
            return GenT.create(Data_Profunctor.lmap(Data_Machine_Mealy.profunctorMealy(__dict_Monad_960))(updateSeedState)(_1086.value0));
        };
    };
    
    /**
     *  FIXME: workaround type inference unification bug
     */
    var ifThenElse = function (p) {
        return function (a) {
            return function (b) {
                if (p) {
                    return a;
                };
                if (!p) {
                    return b;
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var functorGenOut = new Prelude.Functor(function (_1123) {
        return function (_1124) {
            return new GenOut({
                state: _1124.value0.state, 
                value: _1123(_1124.value0.value)
            });
        };
    });
    
    /**
     *  GenT instances
     */
    var functorGenT = function (__dict_Monad_965) {
        return new Prelude.Functor(function (_1127) {
            return function (_1128) {
                return GenT.create(Prelude["<$>"](Data_Machine_Mealy.functorMealy(__dict_Monad_965))(Prelude["<$>"](functorGenOut)(_1127))(_1128.value0));
            };
        });
    };
    var uniform = function (__dict_Monad_959) {
        return Prelude["<$>"](functorGenT(__dict_Monad_959))(function (n) {
            return n / (1 << 30);
        })(lcgStep(__dict_Monad_959));
    };
    
    /**
     *  | Folds over a generator to produce a value. Either the generator or the 
     *  | user-defined function may halt the fold. Returns not just the value
     *  | created through folding, but also the successor generator.
     */
    var foldGen$prime = function (__dict_Monad_966) {
        return function (_1091) {
            return function (_1092) {
                return function (_1093) {
                    return function (_1094) {
                        var loop = function (st) {
                            return function (m_1) {
                                return function (b_1) {
                                    var g = function (_1111) {
                                        if (_1111 instanceof Data_Machine_Mealy.Halt) {
                                            return Prelude.pure(__dict_Monad_966["__superclass_Prelude.Applicative_0"]())(new Data_Tuple.Tuple(b_1, new GenT(Data_Machine_Mealy.halt(__dict_Monad_966["__superclass_Prelude.Applicative_0"]()))));
                                        };
                                        if (_1111 instanceof Data_Machine_Mealy.Emit) {
                                            var b$prime = _1091(b_1)(_1111.value0.value0.value);
                                            return Data_Maybe.maybe(Prelude.pure(__dict_Monad_966["__superclass_Prelude.Applicative_0"]())(new Data_Tuple.Tuple(b_1, new GenT(_1111.value1))))(loop(_1111.value0.value0.state)(_1111.value1))(b$prime);
                                        };
                                        throw new Error("Failed pattern match");
                                    };
                                    return Prelude[">>="](__dict_Monad_966["__superclass_Prelude.Bind_1"]())(Data_Machine_Mealy.stepMealy(__dict_Monad_966)(st)(m_1))(g);
                                };
                            };
                        };
                        return loop(_1093)(_1094.value0)(_1092);
                    };
                };
            };
        };
    };
    
    /**
     *  | Extends a generator to produce *at least* the specified number of values.
     *  | Will not turn a finite generator into an infinite one.
     */
    var extend = function (__dict_Monad_968) {
        return function (_1087) {
            return function (_1088) {
                var loop = function (i) {
                    return function (m_1) {
                        return Data_Machine_Mealy.mealy(__dict_Monad_968["__superclass_Prelude.Applicative_0"]())(function (st) {
                            var f = function (_1110) {
                                if (_1110 instanceof Data_Machine_Mealy.Halt) {
                                    var _1905 = i >= _1087;
                                    if (_1905) {
                                        return Prelude.pure(__dict_Monad_968["__superclass_Prelude.Applicative_0"]())(Data_Machine_Mealy.Halt.value);
                                    };
                                    if (!_1905) {
                                        return Data_Machine_Mealy.stepMealy(__dict_Monad_968)(st)(loop(i)(_1088.value0));
                                    };
                                    throw new Error("Failed pattern match");
                                };
                                if (_1110 instanceof Data_Machine_Mealy.Emit) {
                                    return Prelude.pure(__dict_Monad_968["__superclass_Prelude.Applicative_0"]())(new Data_Machine_Mealy.Emit(_1110.value0, loop(i + 1)(_1110.value1)));
                                };
                                throw new Error("Failed pattern match");
                            };
                            return Prelude[">>="](__dict_Monad_968["__superclass_Prelude.Bind_1"]())(Data_Machine_Mealy.stepMealy(__dict_Monad_968)(st)(m_1))(f);
                        });
                    };
                };
                return Prelude["<>"](semigroupGenT(__dict_Monad_968))(GenT.create(loop(0)(_1088.value0)))(new GenT(_1088.value0));
            };
        };
    };
    
    /**
     *  | Runs a generator to produce a specified number of values, returning both
     *  | an array containing the values and the successor Gen that can be used to
     *  | continue the generation process at a later time.
     */
    var runGen = function (__dict_Monad_969) {
        return function (n) {
            return function (st) {
                return function (g) {
                    var f = function (v) {
                        return function (a) {
                            return ifThenElse(Data_Array.length(v) < n)(Data_Maybe.Just.create(Prelude["<>"](Data_Array.semigroupArray)(v)([ a ])))(Data_Maybe.Nothing.value);
                        };
                    };
                    return foldGen$prime(__dict_Monad_969)(f)([  ])(st)(extend(__dict_Monad_969)(n)(g));
                };
            };
        };
    };
    
    /**
     *  | Creates a generator that generates arrays of some specified size.
     */
    var vectorOf = function (__dict_Monad_974) {
        return function (n) {
            return function (g) {
                var f = function (b) {
                    return function (a) {
                        var b$prime = Prelude["<>"](Data_Array.semigroupArray)(b)([ a ]);
                        var _1909 = Data_Array.length(b$prime) >= n;
                        if (_1909) {
                            return new Data_Tuple.Tuple([  ], new Data_Maybe.Just(b$prime));
                        };
                        if (!_1909) {
                            return new Data_Tuple.Tuple(b$prime, Data_Maybe.Nothing.value);
                        };
                        throw new Error("Failed pattern match");
                    };
                };
                return transGen(__dict_Monad_974)(f)([  ])(extend(__dict_Monad_974)(n)(g));
            };
        };
    };
    
    /**
     *  | Creates a generator that generates integers between the specified 
     *  | inclusive range.
     */
    var chooseInt = function (__dict_Monad_980) {
        return function (a) {
            return function (b) {
                var min = $$Math.ceil($$Math.min(a)(b));
                var max = $$Math.floor($$Math.max(a)(b));
                return Prelude["<$>"](functorGenT(__dict_Monad_980))(Prelude["<<<"](Prelude.semigroupoidArr)($$Math.round)(Prelude["<<<"](Prelude.semigroupoidArr)(Prelude["+"](Prelude.semiringNumber)(min - 0.5))(Prelude["*"](Prelude.semiringNumber)((max - min) + 1))))(uniform(__dict_Monad_980));
            };
        };
    };
    
    /**
     *  | A generator for characters.
     */
    var charGen = function (__dict_Monad_986) {
        return Prelude["<$>"](functorGenT(__dict_Monad_986))(Data_Char.fromCharCode)(chooseInt(__dict_Monad_986)(0)(65535));
    };
    var applyGenOut = new Prelude.Apply(function (_1125) {
        return function (_1126) {
            return new GenOut({
                state: _1126.value0.state, 
                value: _1125.value0.value(_1126.value0.value)
            });
        };
    }, function () {
        return functorGenOut;
    });
    var applyGenT = function (__dict_Monad_990) {
        return new Prelude.Apply(function (f) {
            return function (x) {
                return GenT.create(Prelude[">>="](Data_Machine_Mealy.bindMealy(__dict_Monad_990))(unGen(f))(function (_58) {
                    return Prelude[">>="](Data_Machine_Mealy.bindMealy(__dict_Monad_990))(unGen(updateSeedGen(__dict_Monad_990)(x)))(function (_57) {
                        return Prelude["return"](Data_Machine_Mealy.monadMealy(__dict_Monad_990))(Prelude["<*>"](applyGenOut)(_58)(_57));
                    });
                }));
            };
        }, function () {
            return functorGenT(__dict_Monad_990);
        });
    };
    var bindGenT = function (__dict_Monad_987) {
        return new Prelude.Bind(function (_1131) {
            return function (_1132) {
                return GenT.create(Prelude[">>="](Data_Machine_Mealy.bindMealy(__dict_Monad_987))(_1131.value0)(function (_59) {
                    return unGen(updateSeedGen(__dict_Monad_987)(_1132((unGenOut(_59)).value)));
                }));
            };
        }, function () {
            return applyGenT(__dict_Monad_987);
        });
    };
    
    /**
     *  | Creates a generator that chooses another generator from the specified list
     *  | at random, and then generates a value with that generator.
     */
    var oneOf = function (__dict_Monad_983) {
        return function (x) {
            return function (xs) {
                return Prelude[">>="](bindGenT(__dict_Monad_983))(chooseInt(__dict_Monad_983)(0)(Data_Array.length(xs)))(function (_46) {
                    var _1921 = _46 === 0;
                    if (_1921) {
                        return x;
                    };
                    if (!_1921) {
                        return Data_Maybe.fromMaybe(x)(Data_Array["!!"](xs)(_46 - 1));
                    };
                    throw new Error("Failed pattern match");
                });
            };
        };
    };
    var applicativeGenT = function (__dict_Monad_992) {
        return new Prelude.Applicative(function () {
            return applyGenT(__dict_Monad_992);
        }, function (t) {
            return GenT.create(Control_Arrow.arr(Data_Machine_Mealy.arrowMealy(__dict_Monad_992))(function (s) {
                return new GenOut({
                    state: updateSeedState(s), 
                    value: t
                });
            }));
        });
    };
    var monadGenT = function (__dict_Monad_954) {
        return new Prelude.Monad(function () {
            return applicativeGenT(__dict_Monad_954);
        }, function () {
            return bindGenT(__dict_Monad_954);
        });
    };
    return {
        GenOut: GenOut, 
        GenState: GenState, 
        GenT: GenT, 
        vectorOf: vectorOf, 
        updateSeedState: updateSeedState, 
        unGenState: unGenState, 
        unGenOut: unGenOut, 
        unGen: unGen, 
        uniform: uniform, 
        transGen: transGen, 
        stateful: stateful, 
        sized: sized, 
        runGen: runGen, 
        resize: resize, 
        oneOf: oneOf, 
        "foldGen'": foldGen$prime, 
        extend: extend, 
        chooseInt: chooseInt, 
        charGen: charGen, 
        functorGenOut: functorGenOut, 
        applyGenOut: applyGenOut, 
        functorGenT: functorGenT, 
        applyGenT: applyGenT, 
        applicativeGenT: applicativeGenT, 
        semigroupGenT: semigroupGenT, 
        bindGenT: bindGenT, 
        monadGenT: monadGenT
    };
})();
var PS = PS || {};
PS.Test_StrongCheck = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Trampoline = PS.Control_Monad_Trampoline;
    var Test_StrongCheck_Gen = PS.Test_StrongCheck_Gen;
    var Data_Array = PS.Data_Array;
    var $$Math = PS.$$Math;
    var Data_Maybe = PS.Data_Maybe;
    var Control_Monad_Eff_Random = PS.Control_Monad_Eff_Random;
    var Debug_Trace = PS.Debug_Trace;
    var Control_Monad_Eff_Exception = PS.Control_Monad_Eff_Exception;
    var Data_Maybe_Unsafe = PS.Data_Maybe_Unsafe;
    var Data_Enum = PS.Data_Enum;
    var Data_Char = PS.Data_Char;
    var Data_String = PS.Data_String;
    var Data_Traversable = PS.Data_Traversable;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Control_Bind = PS.Control_Bind;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Either = PS.Data_Either;
    var Data_Monoid = PS.Data_Monoid;
    var Control_Monad_Free = PS.Control_Monad_Free;
    var Data_Lazy = PS.Data_Lazy;
    var Arbitrary = function (arbitrary) {
        this.arbitrary = arbitrary;
    };
    var arbitrary = function (dict) {
        return dict.arbitrary;
    };
    var arbTuple = function (__dict_Arbitrary_1028) {
        return function (__dict_Arbitrary_1029) {
            return new Arbitrary(Prelude["<*>"](Test_StrongCheck_Gen.applyGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Prelude["<$>"](Test_StrongCheck_Gen.functorGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Data_Tuple.Tuple.create)(arbitrary(__dict_Arbitrary_1028)))(arbitrary(__dict_Arbitrary_1029)));
        };
    };
    var arbNumber = new Arbitrary(Test_StrongCheck_Gen.uniform(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)));
    var arbChar = new Arbitrary(Test_StrongCheck_Gen.charGen(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)));
    var arbBoolean = new Arbitrary(Prelude[">>="](Test_StrongCheck_Gen.bindGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Test_StrongCheck_Gen.uniform(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(function (_65) {
        return Prelude["return"](Test_StrongCheck_Gen.monadGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))((_65 * 2) < 1);
    }));
    var arbArray = function (__dict_Arbitrary_1037) {
        return new Arbitrary(Prelude[">>="](Test_StrongCheck_Gen.bindGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(arbitrary(arbBoolean))(function (_72) {
            if (_72) {
                return Prelude["return"](Test_StrongCheck_Gen.monadGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))([  ]);
            };
            if (!_72) {
                return Prelude[">>="](Test_StrongCheck_Gen.bindGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(arbitrary(__dict_Arbitrary_1037))(function (_71) {
                    return Prelude[">>="](Test_StrongCheck_Gen.bindGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(arbitrary(arbArray(__dict_Arbitrary_1037)))(function (_70) {
                        return Prelude["return"](Test_StrongCheck_Gen.monadGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Prelude[":"](_71)(_70));
                    });
                });
            };
            throw new Error("Failed pattern match");
        }));
    };
    var arbString = new Arbitrary(Prelude["<$>"](Test_StrongCheck_Gen.functorGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Data_String.fromCharArray)(arbitrary(arbArray(arbChar))));
    return {
        Arbitrary: Arbitrary, 
        arbitrary: arbitrary, 
        arbNumber: arbNumber, 
        arbBoolean: arbBoolean, 
        arbChar: arbChar, 
        arbString: arbString, 
        arbTuple: arbTuple, 
        arbArray: arbArray
    };
})();
var PS = PS || {};
PS.Data_Json_Gen = (function () {
    "use strict";
    var Test_StrongCheck_Gen = PS.Test_StrongCheck_Gen;
    var Prelude = PS.Prelude;
    var Data_Argonaut = PS.Data_Argonaut;
    var Test_StrongCheck = PS.Test_StrongCheck;
    var Data_StrMap = PS.Data_StrMap;
    var Data_Argonaut_Core = PS.Data_Argonaut_Core;
    var Control_Monad_Free = PS.Control_Monad_Free;
    var Data_Lazy = PS.Data_Lazy;
    var genJsonObject = Test_StrongCheck_Gen.sized(Control_Monad_Free.monadFree(Data_Lazy.functorLazy))(function (size) {
        return Prelude["<#>"](Test_StrongCheck_Gen.functorGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Test_StrongCheck_Gen.vectorOf(Control_Monad_Free.monadFree(Data_Lazy.functorLazy))(size)(Test_StrongCheck_Gen.resize(Control_Monad_Free.monadFree(Data_Lazy.functorLazy))(size - 1)(Test_StrongCheck.arbitrary(Test_StrongCheck.arbTuple(Test_StrongCheck.arbString)(arbJson)))))(Prelude[">>>"](Prelude.semigroupoidArr)(Data_StrMap.fromList)(Data_Argonaut.fromObject));
    });
    var genJsonArray = Test_StrongCheck_Gen.sized(Control_Monad_Free.monadFree(Data_Lazy.functorLazy))(function (size) {
        return Prelude["<#>"](Test_StrongCheck_Gen.functorGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Test_StrongCheck_Gen.vectorOf(Control_Monad_Free.monadFree(Data_Lazy.functorLazy))(size)(Test_StrongCheck_Gen.resize(Control_Monad_Free.monadFree(Data_Lazy.functorLazy))(size - 1)(genJson)))(Data_Argonaut.fromArray);
    });
    var genJson = Test_StrongCheck_Gen.sized(Control_Monad_Free.monadFree(Data_Lazy.functorLazy))(function (size) {
        var _1927 = size === 0;
        if (_1927) {
            return Test_StrongCheck_Gen.oneOf(Control_Monad_Free.monadFree(Data_Lazy.functorLazy))(Prelude.pure(Test_StrongCheck_Gen.applicativeGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Data_Argonaut_Core.jsonNull))([ Prelude["<#>"](Test_StrongCheck_Gen.functorGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Test_StrongCheck.arbitrary(Test_StrongCheck.arbBoolean))(Data_Argonaut.fromBoolean), Prelude["<#>"](Test_StrongCheck_Gen.functorGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Test_StrongCheck.arbitrary(Test_StrongCheck.arbNumber))(Data_Argonaut.fromNumber), Prelude["<#>"](Test_StrongCheck_Gen.functorGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Test_StrongCheck.arbitrary(Test_StrongCheck.arbBoolean))(Data_Argonaut.fromBoolean) ]);
        };
        if (!_1927) {
            return Test_StrongCheck_Gen.oneOf(Control_Monad_Free.monadFree(Data_Lazy.functorLazy))(Prelude.pure(Test_StrongCheck_Gen.applicativeGenT(Control_Monad_Free.monadFree(Data_Lazy.functorLazy)))(Data_Argonaut_Core.jsonNull))([ Test_StrongCheck_Gen.resize(Control_Monad_Free.monadFree(Data_Lazy.functorLazy))(size - 1)(genJsonArray), Test_StrongCheck_Gen.resize(Control_Monad_Free.monadFree(Data_Lazy.functorLazy))(size - 1)(genJsonObject) ]);
        };
        throw new Error("Failed pattern match");
    });
    var arbJson = new Test_StrongCheck.Arbitrary(genJson);
    return {
        genJson: genJson, 
        genJsonObject: genJsonObject, 
        genJsonArray: genJsonArray, 
        arbJson: arbJson
    };
})();
var PS = PS || {};
PS.Data_Json_JTable_Examples = (function () {
    "use strict";
    var Data_Json_JTable = PS.Data_Json_JTable;
    var Data_Json_JSemantic = PS.Data_Json_JSemantic;
    var Text_Smolder_Markup = PS.Text_Smolder_Markup;
    var Text_Smolder_HTML = PS.Text_Smolder_HTML;
    var Prelude = PS.Prelude;
    var Text_Smolder_HTML_Attributes = PS.Text_Smolder_HTML_Attributes;
    var Data_String = PS.Data_String;
    var Data_Argonaut_Parser = PS.Data_Argonaut_Parser;
    var Data_Array = PS.Data_Array;
    var Text_Smolder_Renderer_String = PS.Text_Smolder_Renderer_String;
    var Control_Monad_Eff_Random = PS.Control_Monad_Eff_Random;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Argonaut_JCursor = PS.Data_Argonaut_JCursor;
    var Control_Bind = PS.Control_Bind;
    var Data_Tuple = PS.Data_Tuple;
    var Control_Monad_Trampoline = PS.Control_Monad_Trampoline;
    var Test_StrongCheck_Gen = PS.Test_StrongCheck_Gen;
    var Data_Json_Gen = PS.Data_Json_Gen;
    var $$Math = PS.$$Math;
    var Data_Either = PS.Data_Either;
    var Data_Argonaut_Core = PS.Data_Argonaut_Core;
    var Test_StrongCheck = PS.Test_StrongCheck;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Control_Timer = PS.Control_Timer;
    var DOM = PS.DOM;
    var Debug_Trace = PS.Debug_Trace;
    var Debug_Spy = PS.Debug_Spy;
    var Control_Monad_Free = PS.Control_Monad_Free;
    var Data_Lazy = PS.Data_Lazy;
    var Data_Date = PS.Data_Date;
    function getValue (id) { return function () {
  return document.getElementById(id).value }}
;
    function getNumberValue (id) { return function () {
  return document.getElementById(id).value * 1 }}
;
    function setValue (id) { return function (val) { return function () {
  return document.getElementById(id).value = val }}}
;
    function getHtml (id) { return function () {
  return document.getElementById(id).innerHTML }}
;
    function setHtml (id) { return function (html) { return function () {
  document.getElementById(id).innerHTML = html }}}
;
    function on (ev) { return function (id) { return function (cb) { return function () {
  document.getElementById(id).addEventListener(ev, cb) }}}}
;
    function onload (cb) { return function () {
  window.addEventListener("load", cb) }}
;
    function onCtrlEnter (id) { return function (cb) { return function () {
  on("keydown")(id)(function (e) {
    if ((e.keyCode == 10 || e.keyCode == 13) && e.ctrlKey) {cb()} }) }}}
;
    function _benchmark (renderer) { return function (json) { return function () {
  var t1 = performance.now()
  for (var i=0; i<100; i++) { var markup = renderer(json) }
  var t2 = performance.now()
  return Math.floor(t2 - t1) / 100 }}}
;
    var randomJson = function __do() {
        var _80 = Control_Monad_Eff_Random.random();
        return (function () {
            var state = new Test_StrongCheck_Gen.GenState({
                size: 10, 
                seed: _80
            });
            return Prelude["return"](Control_Monad_Eff.monadEff)(Data_Maybe.fromMaybe(Data_Argonaut_JCursor.primToJson(Data_Argonaut_JCursor.primNull))(Control_Bind["<=<"](Data_Maybe.bindMaybe)(Data_Array.head)(Data_Array.tail)(Data_Tuple.fst(Control_Monad_Trampoline.runTrampoline(Test_StrongCheck_Gen.runGen(Control_Monad_Free.monadFree(Data_Lazy.functorLazy))(2)(state)(Data_Json_Gen.genJson))))));
        })()();
    };
    
    /**
     *  we use style instead of class to keep it self-contained
     */
    var exSemantic = Data_Json_JTable.renderJTable((function () {
        var _1949 = {};
        for (var _1950 in Data_Json_JTable.jTableOptsDefault) {
            if (Data_Json_JTable.jTableOptsDefault.hasOwnProperty(_1950)) {
                _1949[_1950] = Data_Json_JTable.jTableOptsDefault[_1950];
            };
        };
        _1949.style = (function () {
            var _1947 = {};
            for (var _1948 in Data_Json_JTable.noStyle) {
                if (Data_Json_JTable.noStyle.hasOwnProperty(_1948)) {
                    _1947[_1948] = Data_Json_JTable.noStyle[_1948];
                };
            };
            _1947.td = function (c) {
                return function (j) {
                    var _1929 = Data_Json_JSemantic.toSemanticDef(j);
                    if (_1929 instanceof Data_Json_JSemantic.Integral) {
                        return Text_Smolder_Markup["!"](Text_Smolder_Markup.attributableMarkupMF)(Text_Smolder_HTML.td)(Text_Smolder_HTML_Attributes.style("text-align:right"))(Text_Smolder_Markup.text(Prelude.show(Prelude.showNumber)(_1929.value0)));
                    };
                    if (_1929 instanceof Data_Json_JSemantic.Fractional) {
                        return Text_Smolder_Markup["!"](Text_Smolder_Markup.attributableMarkupMF)(Text_Smolder_HTML.td)(Text_Smolder_HTML_Attributes.style("text-align:right"))((function () {
                            var _1931 = Data_String.split(".")(Prelude.show(Prelude.showNumber)(_1929.value0));
                            if (_1931.length >= 2) {
                                var _1934 = _1931.slice(2);
                                if (_1934.length === 0) {
                                    return Prelude[">>="](Text_Smolder_Markup.bindMarkupM)(Text_Smolder_Markup.text(_1931[0]))(function () {
                                        return Text_Smolder_Markup["!"](Text_Smolder_Markup.attributableMarkupMF)(Text_Smolder_HTML.small)(Text_Smolder_HTML_Attributes.style("color:#aaa"))(Text_Smolder_Markup.text("." + _1931[1]));
                                    });
                                };
                            };
                            return Text_Smolder_Markup.text(Prelude.show(Prelude.showNumber)(_1929.value0));
                        })());
                    };
                    if (_1929 instanceof Data_Json_JSemantic["Date"]) {
                        return Text_Smolder_HTML.td(Text_Smolder_Markup.text(Prelude.show(Data_Date.showDate)(_1929.value0)));
                    };
                    if (_1929 instanceof Data_Json_JSemantic.DateTime) {
                        return Text_Smolder_HTML.td(Text_Smolder_Markup.text(Prelude.show(Data_Date.showDate)(_1929.value0)));
                    };
                    if (_1929 instanceof Data_Json_JSemantic.Time) {
                        return Text_Smolder_HTML.td(Text_Smolder_Markup.text(Prelude.show(Data_Date.showDate)(_1929.value0)));
                    };
                    if (_1929 instanceof Data_Json_JSemantic.Interval) {
                        return Text_Smolder_HTML.td(Text_Smolder_Markup.text(Prelude.show(Data_Date.showDate)(_1929.value0) + (" - " + Prelude.show(Data_Date.showDate)(_1929.value1))));
                    };
                    if (_1929 instanceof Data_Json_JSemantic.Text) {
                        return Text_Smolder_HTML.td(Text_Smolder_Markup.text("&laquo;" + (_1929.value0 + "&raquo;")));
                    };
                    if (_1929 instanceof Data_Json_JSemantic.Bool) {
                        if (_1929.value0) {
                            return Text_Smolder_Markup["!"](Text_Smolder_Markup.attributableMarkupMF)(Text_Smolder_HTML.td)(Text_Smolder_HTML_Attributes.style("background:#cfc; text-align:center"))(Text_Smolder_Markup.text("\u2714"));
                        };
                        if (!_1929.value0) {
                            return Text_Smolder_Markup["!"](Text_Smolder_Markup.attributableMarkupMF)(Text_Smolder_HTML.td)(Text_Smolder_HTML_Attributes.style("background:#fcc; text-align:center"))(Text_Smolder_Markup.text("\u274c"));
                        };
                        throw new Error("Failed pattern match");
                    };
                    if (_1929 instanceof Data_Json_JSemantic.Percent) {
                        return Text_Smolder_Markup["!"](Text_Smolder_Markup.attributableMarkupMF)(Text_Smolder_HTML.td)(Text_Smolder_HTML_Attributes.style("text-align: right"))((function () {
                            var _1944 = Prelude.compare(Prelude.ordNumber)(_1929.value0)(0);
                            if (_1944 instanceof Prelude.LT) {
                                return Text_Smolder_Markup["!"](Text_Smolder_Markup.attributableMarkupMF)(Text_Smolder_HTML.span)(Text_Smolder_HTML_Attributes.style("color:#a00"))(Text_Smolder_Markup.text(Prelude.show(Prelude.showNumber)(_1929.value0) + "% \u25be"));
                            };
                            if (_1944 instanceof Prelude.EQ) {
                                return Text_Smolder_Markup["!"](Text_Smolder_Markup.attributableMarkupMF)(Text_Smolder_HTML.span)(Text_Smolder_HTML_Attributes.style("color:#000"))(Text_Smolder_Markup.text(Prelude.show(Prelude.showNumber)(_1929.value0) + "% \u25c2"));
                            };
                            if (_1944 instanceof Prelude.GT) {
                                return Text_Smolder_Markup["!"](Text_Smolder_Markup.attributableMarkupMF)(Text_Smolder_HTML.span)(Text_Smolder_HTML_Attributes.style("color:#0a0"))(Text_Smolder_Markup.text(Prelude.show(Prelude.showNumber)(_1929.value0) + "% \u25b4"));
                            };
                            throw new Error("Failed pattern match");
                        })());
                    };
                    if (_1929 instanceof Data_Json_JSemantic.Currency) {
                        return Text_Smolder_HTML.td(Text_Smolder_Markup.text(Prelude.show(Prelude.showNumber)(_1929.value0)));
                    };
                    if (_1929 instanceof Data_Json_JSemantic.NA) {
                        return Text_Smolder_Markup["!"](Text_Smolder_Markup.attributableMarkupMF)(Text_Smolder_HTML.td)(Text_Smolder_HTML_Attributes.style("background:#ddd"))(Text_Smolder_Markup.text("&nbsp;"));
                    };
                    throw new Error("Failed pattern match");
                };
            };
            return _1947;
        })();
        return _1949;
    })());
    var exHomoTupSize = Data_Json_JTable.renderJTable((function () {
        var _1951 = {};
        for (var _1952 in Data_Json_JTable.jTableOptsDefault) {
            if (Data_Json_JTable.jTableOptsDefault.hasOwnProperty(_1952)) {
                _1951[_1952] = Data_Json_JTable.jTableOptsDefault[_1952];
            };
        };
        _1951.maxHomoTupSize = 5;
        return _1951;
    })());
    var exDefault = Data_Json_JTable.renderJTableDef;
    var exDebug = Data_Json_JTable.renderJTable((function () {
        var _1953 = {};
        for (var _1954 in Data_Json_JTable.jTableOptsDefault) {
            if (Data_Json_JTable.jTableOptsDefault.hasOwnProperty(_1954)) {
                _1953[_1954] = Data_Json_JTable.jTableOptsDefault[_1954];
            };
        };
        _1953.style = Data_Json_JTable.debugStyle;
        return _1953;
    })());
    var exAltHeader = Data_Json_JTable.renderJTable((function () {
        var _1955 = {};
        for (var _1956 in Data_Json_JTable.jTableOptsDefault) {
            if (Data_Json_JTable.jTableOptsDefault.hasOwnProperty(_1956)) {
                _1955[_1956] = Data_Json_JTable.jTableOptsDefault[_1956];
            };
        };
        _1955.insertHeaderCells = true;
        return _1955;
    })());
    var exAlphaColumnOrd = Data_Json_JTable.renderJTable((function () {
        var _1957 = {};
        for (var _1958 in Data_Json_JTable.jTableOptsDefault) {
            if (Data_Json_JTable.jTableOptsDefault.hasOwnProperty(_1958)) {
                _1957[_1958] = Data_Json_JTable.jTableOptsDefault[_1958];
            };
        };
        _1957.columnOrdering = Data_Json_JTable.alphaOrdering;
        return _1957;
    })());
    var exRenderers = [ exDefault, exDebug, exSemantic, exAlphaColumnOrd, exAltHeader, exHomoTupSize ];
    var getInput = function __do() {
        var _75 = getValue("in")();
        return (function () {
            var j = Data_Argonaut_Parser.jsonParser(_75);
            return function __do() {
                var _74 = getNumberValue("select_renderer")();
                return Prelude[">>="](Data_Either.bindEither)(j)(function (json) {
                    var _1961 = Data_Array["!!"](exRenderers)(_74);
                    if (_1961 instanceof Data_Maybe.Just) {
                        return Data_Either.Right.create(new Data_Tuple.Tuple(_1961.value0, json));
                    };
                    return new Data_Either.Left("Invalid Renderer");
                });
            };
        })()();
    };
    var render = function __do() {
        var i = getInput();
        return setHtml("out")((function () {
            if (i instanceof Data_Either.Left) {
                return i.value0;
            };
            if (i instanceof Data_Either.Right) {
                return Text_Smolder_Renderer_String.render(i.value0.value0(i.value0.value1));
            };
            throw new Error("Failed pattern match");
        })())();
    };
    var select_example = function __do() {
        var _78 = getValue("select_example")();
        var _77 = getHtml("example-" + _78)();
        setValue("in")(_77)();
        return render();
    };
    var click_random = function __do() {
        var _79 = randomJson();
        setValue("in")(Prelude.show(Data_Argonaut_Core.showJson)(_79))();
        return render();
    };
    var benchmark = function __do() {
        var i = getInput();
        if (i instanceof Data_Either.Left) {
            return setHtml("out")(i.value0)();
        };
        if (i instanceof Data_Either.Right) {
            var _76 = _benchmark(i.value0.value0)(i.value0.value1)();
            setHtml("benchmark")(Prelude.show(Prelude.showNumber)(_76) + " ms")();
            return render();
        };
        throw new Error("Failed pattern match");
    };
    var main = function __do() {
        select_example();
        return onload(function __do() {
            on("change")("select_example")(select_example)();
            on("change")("select_renderer")(render)();
            on("click")("but_randomjson")(click_random)();
            on("click")("but_render")(render)();
            on("click")("but_benchmark")(benchmark)();
            return onCtrlEnter("in")(render)();
        })();
    };
    return {
        _benchmark: _benchmark, 
        onCtrlEnter: onCtrlEnter, 
        onload: onload, 
        on: on, 
        setHtml: setHtml, 
        getHtml: getHtml, 
        setValue: setValue, 
        getNumberValue: getNumberValue, 
        getValue: getValue, 
        main: main, 
        randomJson: randomJson, 
        click_random: click_random, 
        select_example: select_example, 
        benchmark: benchmark, 
        render: render, 
        getInput: getInput, 
        exRenderers: exRenderers, 
        exHomoTupSize: exHomoTupSize, 
        exAltHeader: exAltHeader, 
        exAlphaColumnOrd: exAlphaColumnOrd, 
        exSemantic: exSemantic, 
        exDebug: exDebug, 
        exDefault: exDefault
    };
})();
PS.Data_Json_JTable_Examples.main();

